/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test1.txt
#define ETA 0.3

[]
#define MOMENTUM 0.3

[]


[]
float new_dwi;

[]
float *delta;

[]
float  **w;

[]
float **old_w;

[]
float *ly;

[]
int k, j;

[]
int ndelta = 16;

[]
int nly = 65536;

[]
ly[0] = 1.0;

[]
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
for (k = 0; k <= nly; k++) { //NTRATIO65536

scope - pushing For
For count stack - pushing 1
['NTRATIO65536']
['65536']
['<=', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
29   /
30   /
28    
 0; k <= nly; k++) {
match
k <= nly; k++) {
/NTRATIO65536

Division Found
####
30   /
31   N
29   /

NTRATIO65536

generateAST for for (k = 0; k <= nly; k++) { //NTRATIO65536
This line is a for
extractEveryVariable
Inserting - for (k = 0; k <= nly; k++) { //NTRATIO65536
    for (j = 1; j <= ndelta; j++) { //NTRATIO16

scope - pushing For
For count stack - pushing 1
['NTRATIO16']
['16']
['<=', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  4
0
0
TotalArithmeticInstructions  4
Division Found
####
36   /
37   /
35    
 1; j <= ndelta; j++) {
match
j <= ndelta; j++) {
/NTRATIO16

Division Found
####
37   /
38   N
36   /

NTRATIO16

generateAST for for (j = 1; j <= ndelta; j++) { //NTRATIO16
This line is a for
extractEveryVariable
Inserting - for (j = 1; j <= ndelta; j++) { //NTRATIO16
        new_dw = ((ETA * delta[j] * ly[k]) + (MOMENTUM * oldw[k][j]));

[]
['*', '*', '+', '*']
[]
4
TotalArithmeticInstructions  8
1
1
TotalArithmeticInstructions  8
Checking double store operation
Checking double store operation - Done
####
23   *
24    
22    
 ((ETA
match
ETA
 delta[j] * ly[k]) + (MOMENTUM * oldw[k][j]));

match
delta
30   [
33
####
34   *
35    
33    

 ly[k]) + (MOMENTUM * oldw[k][j]));

match
ly
38   [
41
####
55   *
56    
54    
) + (MOMENTUM
match
MOMENTUM
 oldw[k][j]));

match
oldw
61   [
64
generateAST for new_dw = ((ETA * delta[j] * ly[k]) + (MOMENTUM * oldw[k][j]));
new_dw = ((ETA * #1#));
new_dw = ((ETA * #1#));
new_dw = ((ETA * #1#));
new_dw = ((ETA * #1#));
new_dw = ((ETA * #1#));
new_dw = ((ETA * #1#));
#0# = ((#0# * #1#));
#0#    =     (  ( #0#    *    #1# )  )  ; 
#0#    =     (  ( #0#    *    #1# )  )  ; 
#0#    =     (  ( #0#    *    #1# )  )  ; 
#0#=((#0#*#1#));
0=((0*1))
Time Taken 2

extractEveryVariable
Inserting - new_dw = ((ETA * delta[j] * ly[k]) + (MOMENTUM * oldw[k][j]));
        w[k][j] += new_dw;

[]
['+']
[]
1
TotalArithmeticInstructions  9
0
0
TotalArithmeticInstructions  9
Checking double store operation
9   [
8   w
        w
match
w
Checking double store operation - Done
generateAST for w[k][j] += new_dw;
#1# += new_dw;
#1# += new_dw;
#1# += new_dw;
#1# += new_dw;
#1# += new_dw;
#1# += new_dw;
#1# += #0#;
#1#    +  =    #0# ; 
#1#    +  =    #0# ; 
#1#    +  =    #0# ; 
#1#+=#0#;
1=1\+0
Time Taken 2

extractEveryVariable
Inserting - w[k][j] += new_dw;
        oldw[k][j] = new_dw;

[]
[]
[]
0
TotalArithmeticInstructions  9
0
0
TotalArithmeticInstructions  9
Checking double store operation
12   [
11   w
        oldw
match
oldw
Checking double store operation - Done
generateAST for oldw[k][j] = new_dw;
#1# = new_dw;
#1# = new_dw;
#1# = new_dw;
#1# = new_dw;
#1# = new_dw;
#1# = new_dw;
#1# = #0#;
#1#    =    #0# ; 
#1#    =    #0# ; 
#1#    =    #0# ; 
#1#=#0#;
1=0
Time Taken 1

extractEveryVariable
Inserting - oldw[k][j] = new_dw;
    }

Scope Found For, popping, New Length 2
[]
[]
[]
0
TotalArithmeticInstructions  9
0
0
TotalArithmeticInstructions  9
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
}

Scope Found For, popping, New Length 1
[]
[]
[]
0
TotalArithmeticInstructions  9
0
0
TotalArithmeticInstructions  9
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  9
0
0
TotalArithmeticInstructions  9
ILP!!!
******
0
new_dw = ((ETA * delta[j] * ly[k]) + (MOMENTUM * oldw[k][j]));
[]
[1, 2]
2
1
1


1
w[k][j] += new_dw;
[0]
[]
2
1
1


2
oldw[k][j] = new_dw;
[0]
[]
1
1
1


******
Node 0's -
[0]
DFS Stack - pushing 0
[2, -999, -999]
DFS Stack - pushing 1
(0,2)
(1,2)
4
Selected!
DFS Stack - pushing 2
(0,2)
(2,1)
3
Selected!
[2, 4, 3]
[2, 4, 3]
[4]
######################################################
**********
The values of this entry are
Name                 -  
Scope                -  Global
varType              -  1
size                 -  0
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  ndelta
Scope                -  Global
varType              -  0
size                 -  1
value                -  16
iteratorVar          -  False
**********
The values of this entry are
Name                 -  nly
Scope                -  Global
varType              -  0
size                 -  1
value                -  65536
iteratorVar          -  False
**********
The values of this entry are
Name                 -  k
Scope                -  Global
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  delta
Scope                -  Global
varType              -  1
size                 -  3
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  new_dwi
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  ly
Scope                -  Global
varType              -  1
size                 -  3
value                -  None
iteratorVar          -  False
**********
***********
Line 1
LHS -  for k
RHS -  k nly k
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - for (k = 0; k <= nly; k++) { //NTRATIO65536
***
Line 2
LHS -  for j
RHS -  j ndelta j
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - for (j = 1; j <= ndelta; j++) { //NTRATIO16
***
Line 3
LHS -  new
RHS -  ETA delta j ly k MOMENTUM oldw k j dw
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 2
Line	     - new_dw = ((ETA * delta[j] * ly[k]) + (MOMENTUM * oldw[k][j]));
***
Line 4
LHS - 
RHS -  w k j new dw
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 2
Line	     - w[k][j] += new_dw;
***
Line 5
LHS -  oldw
RHS -  new dw j k
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - oldw[k][j] = new_dw;
***
***********


TotalTranscendentals - 0
TotalArithmeticInstructions - 9
NumLoadOperations - 6
NumStoreOperations - 2
NumOffsetAccesses -  0
NumIndirectAccesses -  0
NumDoubleAccesses -  0
CriticalPath -  4
nThreadsCount -  1048576
instCountWithFRatio -  0
ninst       -  17
ilp16k       -  16
ilp32       -  6
ilpRate       -  2


######################################################
Transcendental Ratio - L
Arithmetic Intensity - M
Global Memory Operation - H
BranchDivergence - L 0
ControlDensity -  L
Floating Point Mul/Div - H
Total Instruction - L
Num Threads - 1048576
Critical Path - L
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test2.txt
// int no_of_nodes = 1000000

[]
// bool stop

[]


[]
do{

scope - pushing do
[]
    stop = false;

[]
    for(int tid = 0; tid < no_of_nodes; tid++ ) {

scope - pushing For
For count stack - pushing 1
[]
        if (h_graph_mask[tid] == true) { //BRATIO0.08 

scope - pushing For
For count stack - pushing 1
[]
            h_graph_mask[tid]=false;

[]
      	    for(int i=h_graph_nodes[tid].starting; i < (h_graph_nodes[tid].no_of_edges + h_graph_nodes[tid].starting); i++) {	// This loop runs an average of 3 times per outer loop. //FRATIO3

scope - pushing For
[]
                int id = h_graph_edges[i];

[]
         	if(!h_graph_visited[id]) {

scope - pushing if
[]
            	    h_cost[id]=h_cost[tid]+1;

[]
            	    h_updating_graph_mask[id]=true;

[]
                }

[]
            }

[]
        }

[]
    }

[]
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
for(int tid=0; tid < no_of_nodes ; tid++ ){ //NTRATIO1000000

scope - pushing For
For count stack - pushing 1
['NTRATIO1000000']
['1000000']
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
44   /
45   /
43    
0; tid < no_of_nodes ; tid++ ){
match
tid < no_of_nodes ; tid++ ){
/NTRATIO1000000

Division Found
####
45   /
46   N
44   /

NTRATIO1000000

generateAST for for(int tid=0; tid < no_of_nodes ; tid++ ){ //NTRATIO1000000
This line is a for
extractEveryVariable
Inserting - for(int tid=0; tid < no_of_nodes ; tid++ ){ //NTRATIO1000000
    if (h_updating_graph_mask[tid] == true){		//BRATIO0.08

scope - pushing For
For count stack - pushing 1
[]
['==', '/', '/']
['//']
1
TotalArithmeticInstructions  3
0
0
TotalArithmeticInstructions  3
Checking double store operation
29   [
28   k
    if (h_updating_graph_mask
match
if (h_updating_graph_mask
Checking double store operation - Done
Division Found
####
46   /
47   /
45   	
= true){		
match
true){
/BRATIO0.08

Division Found
####
47   /
48   B
46   /

BRATIO0.08

Found Control Density
generateAST for if (h_updating_graph_mask[tid] == true){		//BRATIO0.08
if (h_updating_graph_mask[tid] == true){		
if (h_updating_graph_mask[tid] == true){		
if (h_updating_graph_mask[tid] == true){		
if (#1# == true){		
if (#1# == true){		
if (#1# == true){		
0= (#1# == #0#)		
0 =     ( #1#    =  =    #0# )  	  	 
0 =     ( #1#    =  =    #0# )  	  	 
0 =     ( #1#    =  =    #0# )  	  	 
0=(#1#==#0#)
0=(1==0)
Time Taken 2

extractEveryVariable
Inserting - if (h_updating_graph_mask[tid] == true){		//BRATIO0.08
['0.08']
Bratio found
temp bratio is  2.56
Divergence ratio is  2.56
If ratio stack - pushing 0.08
        h_graph_mask[tid]=true;

[]
[]
[]
0
TotalArithmeticInstructions  3.0
0
0
TotalArithmeticInstructions  3.0
Checking double store operation
20   [
19   k
        h_graph_mask
match
h_graph_mask
Checking double store operation - Done
generateAST for h_graph_mask[tid]=true;
h_graph_mask[tid]=true;
h_graph_mask[tid]=true;
h_graph_mask[tid]=true;
#1#=true;
#1#=true;
#1#=true;
#1#=#0#;
#1# = #0# ; 
#1# = #0# ; 
#1# = #0# ; 
#1#=#0#;
1=0
Time Taken 1

extractEveryVariable
Inserting - h_graph_mask[tid]=true;
        h_graph_visited[tid]=true;

[]
[]
[]
0
TotalArithmeticInstructions  3.0
0
0
TotalArithmeticInstructions  3.0
Checking double store operation
23   [
22   d
        h_graph_visited
match
h_graph_visited
Checking double store operation - Done
generateAST for h_graph_visited[tid]=true;
h_graph_visited[tid]=true;
h_graph_visited[tid]=true;
h_graph_visited[tid]=true;
#1#=true;
#1#=true;
#1#=true;
#1#=#0#;
#1# = #0# ; 
#1# = #0# ; 
#1# = #0# ; 
#1#=#0#;
1=0
Time Taken 1

extractEveryVariable
Inserting - h_graph_visited[tid]=true;
        stop=true;

[]
[]
[]
0
TotalArithmeticInstructions  3.0
0
0
TotalArithmeticInstructions  3.0
generateAST for stop=true;
stop=true;
stop=true;
stop=true;
stop=true;
stop=true;
stop=true;
#0#=#0#;
#0# = #0# ; 
#0# = #0# ; 
#0# = #0# ; 
#0#=#0#;
0=0
Time Taken 0

extractEveryVariable
Inserting - stop=true;
        h_updating_graph_mask[tid]=false;

[]
[]
[]
0
TotalArithmeticInstructions  3.0
0
0
TotalArithmeticInstructions  3.0
Checking double store operation
29   [
28   k
        h_updating_graph_mask
match
h_updating_graph_mask
Checking double store operation - Done
generateAST for h_updating_graph_mask[tid]=false;
h_updating_graph_mask[tid]=false;
h_updating_graph_mask[tid]=false;
h_updating_graph_mask[tid]=false;
#1#=false;
#1#=false;
#1#=false;
#1#=#0#;
#1# = #0# ; 
#1# = #0# ; 
#1# = #0# ; 
#1#=#0#;
1=0
Time Taken 1

extractEveryVariable
Inserting - h_updating_graph_mask[tid]=false;
    }

Scope Found For, popping, New Length 4
[]
[]
[]
0
TotalArithmeticInstructions  3.0
0
0
TotalArithmeticInstructions  3.0
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
}

Scope Found For, popping, New Length 3
[]
[]
[]
0
TotalArithmeticInstructions  3.0
0
0
TotalArithmeticInstructions  3.0
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  3.0
0
0
TotalArithmeticInstructions  3.0
Annotation End Found
ILP!!!
******
0
if (h_updating_graph_mask[tid] == true){		//BRATIO0.08
[]
[]
2
1
1


1
h_graph_mask[tid]=true;
[]
[]
1
0.08
1


2
h_graph_visited[tid]=true;
[]
[]
1
0.08
1


3
stop=true;
[]
[]
0
0.08
1


4
h_updating_graph_mask[tid]=false;
[]
[]
1
0.08
1


******
Node 0's -
[0, 1, 2, 3, 4]
DFS Stack - pushing 0
[2, -999, -999, -999, -999]
DFS Stack - pushing 1
[-999, 0.080000000000000002, -999, -999, -999]
DFS Stack - pushing 2
[-999, -999, 0.080000000000000002, -999, -999]
DFS Stack - pushing 3
[-999, -999, -999, 0.0, -999]
DFS Stack - pushing 4
[-999, -999, -999, -999, 0.080000000000000002]
[2, 0.080000000000000002, 0.080000000000000002, 0.0, 0.080000000000000002]
######################################################
**********
The values of this entry are
Name                 -  tid
Scope                -  For
varType              -  0
size                 -  1
value                -  0
iteratorVar          -  True
**********
The values of this entry are
Name                 -  i
Scope                -  For
varType              -  0
size                 -  1
value                -  3
iteratorVar          -  False
**********
The values of this entry are
Name                 -  id
Scope                -  For
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  no_of_nodes
Scope                -  Global
varType              -  0
size                 -  1
value                -  1000000
iteratorVar          -  False
**********
***********
Line 1
LHS -  for tid
RHS -  tid no of nodes tid
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - for(int tid=0; tid < no_of_nodes ; tid++ ){ //NTRATIO1000000
***
Line 2
LHS - 
RHS -  h updating graph mask tid true
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 2
Line	     - if (h_updating_graph_mask[tid] == true){		//BRATIO0.08
***
Line 3
LHS - 
RHS -  h graph mask tid true
For Ratio - 1
If  Ratio - 0.08
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - h_graph_mask[tid]=true;
***
Line 4
LHS - 
RHS -  h graph visited tid true
For Ratio - 1
If  Ratio - 0.08
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - h_graph_visited[tid]=true;
***
Line 5
LHS -  stop
RHS -  rue
For Ratio - 1
If  Ratio - 0.08
Scope     - For
ScopeId   - 4
Cycles    - 0
Line	     - stop=true;
***
Line 6
LHS - 
RHS -  h updating graph mask tid false
For Ratio - 1
If  Ratio - 0.08
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - h_updating_graph_mask[tid]=false;
***
***********


TotalTranscendentals - 0
TotalArithmeticInstructions - 3.0
NumLoadOperations - 0.0
NumStoreOperations - 1.24
NumOffsetAccesses -  0
NumIndirectAccesses -  0
NumDoubleAccesses -  0
CriticalPath -  2
nThreadsCount -  1000000
instCountWithFRatio -  0
ninst       -  4.24
ilp16k       -  4.23775399039
ilp32       -  3.35177865613
ilpRate       -  1.26432990515


######################################################
Transcendental Ratio - L
Arithmetic Intensity - M
Global Memory Operation - H
BranchDivergence - H 2.56
ControlDensity -  H
Floating Point Mul/Div - L
Total Instruction - L
Num Threads - 1000000
Critical Path - L
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test3.txt
count = 10000;

[]
maxheight = 2;

[]
threadsPerBlock = 508;

[]


[]
long currKnode[10000], offset[10000];

[]


[]
typedef struct knode {

scope - pushing struct
[]
        int location;

[]
        int indices [509];

[]
        int  keys [509];

[]
        bool is_leaf;

[]
        int num_keys;

[]
} knode;

[]


[]
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
for(bid = 0; bid < count; bid++){ //NTRATIO10000

scope - pushing For
For count stack - pushing 1
['NTRATIO10000']
['10000']
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
34   /
35   /
33    
 0; bid < count; bid++){
match
bid < count; bid++){
/NTRATIO10000

Division Found
####
35   /
36   N
34   /

NTRATIO10000

generateAST for for(bid = 0; bid < count; bid++){ //NTRATIO10000
This line is a for
extractEveryVariable
Inserting - for(bid = 0; bid < count; bid++){ //NTRATIO10000
    for(thid = 0; thid < threadsPerBlock; thid++){//NTRATIO508

scope - pushing For
For count stack - pushing 1
['NTRATIO508']
['508']
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  4
0
0
TotalArithmeticInstructions  4
Division Found
####
50   /
51   /
49   {
 0; thid < threadsPerBlock; thid++){
match
thid < threadsPerBlock; thid++){
/NTRATIO508

Division Found
####
51   /
52   N
50   /

NTRATIO508

generateAST for for(thid = 0; thid < threadsPerBlock; thid++){//NTRATIO508
This line is a for
extractEveryVariable
Inserting - for(thid = 0; thid < threadsPerBlock; thid++){//NTRATIO508
    int access = currKnode[bid];

[]
[]
[]
0
TotalArithmeticInstructions  4
0
0
TotalArithmeticInstructions  4
Checking double store operation
Checking double store operation - Done
generateAST for int access = currKnode[bid];
int access = currKnode[bid];
int access = currKnode[bid];
int access = currKnode[bid];
int access = #1#;
int access = #1#;
int access = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - int access = currKnode[bid];
    for(i = 0; i < maxheight; i++){ //FRATIO2

scope - pushing For
[]
FRATIO2
For count stack - pushing 2
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  8
0
0
TotalArithmeticInstructions  8
Division Found
####
36   /
37   /
35    
 0; i < maxheight; i++){
match
i < maxheight; i++){
/FRATIO2

Division Found
####
37   /
38   F
36   /

FRATIO2

generateAST for for(i = 0; i < maxheight; i++){ //FRATIO2
This line is a for
extractEveryVariable
Inserting - for(i = 0; i < maxheight; i++){ //FRATIO2
	     *accessKnode = knodes[access];

[]
['*']
[]
1
TotalArithmeticInstructions  10
0
0
TotalArithmeticInstructions  10
Checking double store operation
Checking double store operation - Done
####
6   *
7   a
5    

accessKnode = knodes[access];

match
accessKnode
18    
generateAST for *accessKnode = knodes[access];
*accessKnode = knodes[access];
*accessKnode = knodes[access];
*accessKnode = knodes[access];
*accessKnode = #1#;
*accessKnode = #1#;
*accessKnode = #1#;
*#0# = #1#;
 * #0#    =    #1# ; 
 * #0#    =    #1# ; 
 * #0#    =    #1# ; 
*#0#=#1#;
*0=1
Time Taken 1

extractEveryVariable
Inserting - *accessKnode = knodes[access];
Within Fratio
2
             if((accessKnode.keys[thid]) <= keys[bid] && (accessKnode.keys[thid+1] > keys[bid])){	//taken for less than 1% of the iterations of threadsPerBlock //BRATIO0.01

scope - pushing For
For count stack - pushing 1
[]
['<=', '&&', '+', '>', '/', '/', '/', '/']
['//', '//']
4
TotalArithmeticInstructions  14
1
0
TotalArithmeticInstructions  14
offset pattern is
thid+1
and extracted value is
['1']
Offset is
1
Offset is a int with number <=2
Checking double store operation
33   [
32   s
             if((accessKnode.keys
match
if((accessKnode.keys
Checking double store operation - Done
Division Found
####
98   /
99   /
97   	
 keys[bid] && (accessKnode.keys[thid+1] > keys[bid])){	
match
accessKnode.keys[thid+1] > keys[bid])){
/taken for less than 1% of the iterations of threadsPerBlock //BRATIO0.01

match
taken
105    
Division Found
####
99   /
100   t
98   /

taken for less than 1% of the iterations of threadsPerBlock //BRATIO0.01

match
taken
105    
Division Found
####
160   /
161   /
159    
 for less than 1% of the iterations of threadsPerBlock
match
less than 1% of the iterations of threadsPerBlock
/BRATIO0.01

Division Found
####
161   /
162   B
160   /

BRATIO0.01

Found Control Density
generateAST for if((accessKnode.keys[thid]) <= keys[bid] && (accessKnode.keys[thid+1] > keys[bid])){	//taken for less than 1% of the iterations of threadsPerBlock //BRATIO0.01
if((accessKnode.keys[thid]) <= keys[bid] && (accessKnode.keys[thid+1] > keys[bid])){	
if((accessKnode.keys[thid]) <= keys[bid] && (accessKnode.keys[thid+1] > keys[bid])){	
if((accessKnode.keys[thid]) <= keys[bid] && (accessKnode.keys[thid+1] > keys[bid])){	
if((accessKnode.#1#) <= #1# && (accessKnode.#1# > #1#)){	
if((accessKnode.#1#) <= #1# && (accessKnode.#1# > #1#)){	
if((#2#) <= #1# && (#2# > #1#)){	
0=((#2#) <= #1# && (#2# > #1#))	
0 =  (  ( #2# )     <  =    #1#    &  &     ( #2#    >    #1# )  )  	 
0 =  (  ( #2# )     <  =    #1#    &  &     ( #2#    >    #1# )  )  	 
0 =  (  ( #2# )     <  =    #1#    &  &     ( #2#    >    #1# )  )  	 
0=((#2#)<=#1#&&(#2#>#1#))
0=((2)<=1&&(2>1))
This line does not have an =
extractEveryVariable
Inserting - if((accessKnode.keys[thid]) <= keys[bid] && (accessKnode.keys[thid+1] > keys[bid])){	//taken for less than 1% of the iterations of threadsPerBlock //BRATIO0.01
['0.01']
Bratio found
temp bratio is  0.32
Divergence ratio is  0.32
If ratio stack - pushing 0.01
Within Fratio
11
		  int offaccess = offset[bid];

[]
[]
[]
0
TotalArithmeticInstructions  14.0
0
0
TotalArithmeticInstructions  14.0
Checking double store operation
Checking double store operation - Done
generateAST for int offaccess = offset[bid];
int offaccess = offset[bid];
int offaccess = offset[bid];
int offaccess = offset[bid];
int offaccess = #1#;
int offaccess = #1#;
int offaccess = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - int offaccess = offset[bid];
Within Fratio
12
                  if(knodes[offaccess].indices[thid] < knodes_elem){	//taken once per iteration of maxheight //BRATIO0.01 BRATIO0.01

scope - pushing if
[]
['<', '/', '/', '/', '/']
['//', '//']
1
TotalArithmeticInstructions  14.01
0
0
TotalArithmeticInstructions  14.01
Checking double store operation
Checking double store operation - Done
Division Found
####
69   /
70   /
68   	
                  if(knodes[offaccess].indices[thid] < knodes_elem){	
match
knodes[offaccess].indices[thid] < knodes_elem){
/taken once per iteration of maxheight //BRATIO0.01 BRATIO0.01

match
taken
76    
Division Found
####
70   /
71   t
69   /

taken once per iteration of maxheight //BRATIO0.01 BRATIO0.01

match
taken
76    
Division Found
####
109   /
110   /
108    
 once per iteration of maxheight
match
per iteration of maxheight
/BRATIO0.01 BRATIO0.01

match
BRATIO0.01
121    
Division Found
####
110   /
111   B
109   /

BRATIO0.01 BRATIO0.01

match
BRATIO0.01
121    
Found Control Density
generateAST for if(knodes[offaccess].indices[thid] < knodes_elem){	//taken once per iteration of maxheight //BRATIO0.01 BRATIO0.01
if(knodes[offaccess].indices[thid] < knodes_elem){	
if(knodes[offaccess].indices[thid] < knodes_elem){	
if(knodes[offaccess].indices[thid] < knodes_elem){	
if(#1#.#1# < knodes_elem){	
if(#2# < knodes_elem){	
if(#2# < knodes_elem){	
0=(#2# < #0#)	
0 =  ( #2#    <    #0# )  	 
0 =  ( #2#    <    #0# )  	 
0 =  ( #2#    <    #0# )  	 
0=(#2#<#0#)
0=(2<0)
This line does not have an =
extractEveryVariable
Inserting - if(knodes[offaccess].indices[thid] < knodes_elem){	//taken once per iteration of maxheight //BRATIO0.01 BRATIO0.01
['0.01']
['0.01']
Bratio found
temp bratio is  0.0032
Divergence ratio using old  0.32
If ratio stack - pushing 0.0001
Within Fratio
17
                      offset[bid] = knodes[offaccess].indices[thid];

[]
[]
[]
0
TotalArithmeticInstructions  14.01
0
0
TotalArithmeticInstructions  14.01
Checking double store operation
28   [
27   t
                      offset
match
offset
Checking double store operation - Done
generateAST for offset[bid] = knodes[offaccess].indices[thid];
offset[bid] = knodes[offaccess].indices[thid];
offset[bid] = knodes[offaccess].indices[thid];
offset[bid] = knodes[offaccess].indices[thid];
#1# = #1#.#1#;
#1# = #2#;
#1# = #2#;
#1# = #2#;
#1#    =    #2# ; 
#1#    =    #2# ; 
#1#    =    #2# ; 
#1#=#2#;
1=2
Time Taken 2

extractEveryVariable
Inserting - offset[bid] = knodes[offaccess].indices[thid];
Within Fratio
20
                  }

Scope Found if, popping, New Length 2
[]
[]
[]
0
TotalArithmeticInstructions  14.01
0
0
TotalArithmeticInstructions  14.01
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
Within Fratio
20
             }

Scope Found For, popping, New Length 4
[]
[]
[]
0
TotalArithmeticInstructions  14.01
0
0
TotalArithmeticInstructions  14.01
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
Within Fratio
20
        }

Scope Found For, popping, New Length 3
[]
[]
[]
0
TotalArithmeticInstructions  14.01
0
0
TotalArithmeticInstructions  14.01
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
        currKnode[bid] = offset[bid];

[]
[]
[]
0
TotalArithmeticInstructions  14.01
0
0
TotalArithmeticInstructions  14.01
Checking double store operation
17   [
16   e
        currKnode
match
currKnode
Checking double store operation - Done
generateAST for currKnode[bid] = offset[bid];
currKnode[bid] = offset[bid];
currKnode[bid] = offset[bid];
currKnode[bid] = offset[bid];
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#=#1#;
1=1
Time Taken 1

extractEveryVariable
Inserting - currKnode[bid] = offset[bid];
    }

Scope Found For, popping, New Length 2
[]
[]
[]
0
TotalArithmeticInstructions  14.01
0
0
TotalArithmeticInstructions  14.01
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
    int access2 = currKnode[bid];

[]
[]
[]
0
TotalArithmeticInstructions  14.01
0
0
TotalArithmeticInstructions  14.01
Checking double store operation
Checking double store operation - Done
generateAST for int access2 = currKnode[bid];
int access2 = currKnode[bid];
int access2 = currKnode[bid];
int access2 = currKnode[bid];
int access2 = #1#;
int access2 = #1#;
int access2 = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - int access2 = currKnode[bid];
 

[]
[]
[]
0
TotalArithmeticInstructions  14.01
0
0
TotalArithmeticInstructions  14.01
generateAST for 












This line does not have an =
extractEveryVariable
    for(thid = 0; thid < threadsPerBlock; thid++){

scope - pushing For
For count stack - pushing 1
[]
['<', '++']
[]
2
TotalArithmeticInstructions  14.03
0
0
TotalArithmeticInstructions  14.03
generateAST for for(thid = 0; thid < threadsPerBlock; thid++){
This line is a for
extractEveryVariable
Inserting - for(thid = 0; thid < threadsPerBlock; thid++){
        if(knodes[access2].keys[thid] == keys[bid]){			//taken once per iteration of count //BRATIO0.00001

scope - pushing For
For count stack - pushing 1
[]
['==', '/', '/', '/', '/']
['//', '//']
1
TotalArithmeticInstructions  14.04
0
0
TotalArithmeticInstructions  14.04
Checking double store operation
17   [
16   s
        if(knodes
match
if(knodes
Checking double store operation - Done
Division Found
####
55   /
56   /
54   	
= keys[bid]){			
match
keys[bid]){
/taken once per iteration of count //BRATIO0.00001

match
taken
62    
Division Found
####
56   /
57   t
55   /

taken once per iteration of count //BRATIO0.00001

match
taken
62    
Division Found
####
91   /
92   /
90    
 once per iteration of count
match
per iteration of count
/BRATIO0.00001

Division Found
####
92   /
93   B
91   /

BRATIO0.00001

Found Control Density
generateAST for if(knodes[access2].keys[thid] == keys[bid]){			//taken once per iteration of count //BRATIO0.00001
if(knodes[access2].keys[thid] == keys[bid]){			
if(knodes[access2].keys[thid] == keys[bid]){			
if(knodes[access2].keys[thid] == keys[bid]){			
if(#1#.#1# == #1#){			
if(#2# == #1#){			
if(#2# == #1#){			
0=(#2# == #1#)			
0 =  ( #2#    =  =    #1# )  	  	  	 
0 =  ( #2#    =  =    #1# )  	  	  	 
0 =  ( #2#    =  =    #1# )  	  	  	 
0=(#2#==#1#)
0=(2==1)
Time Taken 3

extractEveryVariable
Inserting - if(knodes[access2].keys[thid] == keys[bid]){			//taken once per iteration of count //BRATIO0.00001
['0.00001']
Bratio found
temp bratio is  0.00032
Divergence ratio using old  0.32
If ratio stack - pushing 1e-05
Within Fratio
26
	    int access5 = knodes[access2].indices[thid];

[]
[]
[]
0
TotalArithmeticInstructions  14.04
0
0
TotalArithmeticInstructions  14.04
Checking double store operation
Checking double store operation - Done
generateAST for int access5 = knodes[access2].indices[thid];
int access5 = knodes[access2].indices[thid];
int access5 = knodes[access2].indices[thid];
int access5 = knodes[access2].indices[thid];
int access5 = #1#.#1#;
int access5 = #2#;
int access5 = #2#;
#0# = #2#;
#0#    =    #2# ; 
#0#    =    #2# ; 
#0#    =    #2# ; 
#0#=#2#;
0=2
Time Taken 2

extractEveryVariable
Inserting - int access5 = knodes[access2].indices[thid];
Within Fratio
28
            ans[bid].value = records[access5].value;

[]
[]
[]
0
TotalArithmeticInstructions  14.04
0
0
TotalArithmeticInstructions  14.04
Checking double store operation
15   [
14   s
            ans
match
ans
Checking double store operation - Done
generateAST for ans[bid].value = records[access5].value;
ans[bid].value = records[access5].value;
ans[bid].value = records[access5].value;
ans[bid].value = records[access5].value;
#1#.value = #1#.value;
#1#.value = #1#.value;
#1#.value = #1#.value;
#1#.#0# = #1#.#0#;
#1#.#0#    =    #1#.#0# ; 
#1#.#0#    =    #1#.#0# ; 
#1#.#0#    =    #1#.#0# ; 
#1#.#0#=#1#.#0#;
1.0=1.0
Time Taken 2

extractEveryVariable
Inserting - ans[bid].value = records[access5].value;
Within Fratio
30
        }

Scope Found For, popping, New Length 3
[]
[]
[]
0
TotalArithmeticInstructions  14.04
0
0
TotalArithmeticInstructions  14.04
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
    }

Scope Found For, popping, New Length 2
[]
[]
[]
0
TotalArithmeticInstructions  14.04
0
0
TotalArithmeticInstructions  14.04
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
}

Scope Found For, popping, New Length 1
[]
[]
[]
0
TotalArithmeticInstructions  14.04
0
0
TotalArithmeticInstructions  14.04
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  14.04
0
0
TotalArithmeticInstructions  14.04
Annotation End Found
ILP!!!
******
0
int access = currKnode[bid];
[]
[2, 10, 11, 12]
1
1
1


1
for(i = 0; i < maxheight; i++){ //FRATIO2
[]
[]
1
1
2


2
*accessKnode = knodes[access];
[0]
[3]
1
1
2


3
if((accessKnode.keys[thid]) <= keys[bid] && (accessKnode.keys[thid+1] > keys[bid])){	//taken for less than 1% of the iterations of threadsPerBlock //BRATIO0.01
[2]
[]
0
1
1


4
int offaccess = offset[bid];
[]
[5, 6]
1
0.01
1


5
if(knodes[offaccess].indices[thid] < knodes_elem){	//taken once per iteration of maxheight //BRATIO0.01 BRATIO0.01
[4]
[]
0
0.01
1


6
offset[bid] = knodes[offaccess].indices[thid];
[4]
[7]
2
0.0001
1


7
currKnode[bid] = offset[bid];
[6]
[8]
1
0.01
1


8
int access2 = currKnode[bid];
[7]
[10, 11, 12]
1
0.01
1


9
for(thid = 0; thid < threadsPerBlock; thid++){
[]
[10, 11]
1
0.01
1


10
if(knodes[access2].keys[thid] == keys[bid]){			//taken once per iteration of count //BRATIO0.00001
[0, 8, 9]
[]
3
0.01
1


11
int access5 = knodes[access2].indices[thid];
[0, 8, 9]
[12]
2
1e-05
1


12
ans[bid].value = records[access5].value;
[0, 8, 11]
[]
2
1e-05
1


******
Node 0's -
[0, 1, 4, 9]
DFS Stack - pushing 0
[1, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 2
(0,1)
(2,2)
3
Selected!
DFS Stack - pushing 10
(0,1)
(10,0.03)
1
Selected!
DFS Stack - pushing 11
(0,1)
(11,2e-05)
1
Selected!
DFS Stack - pushing 12
(0,1)
(12,2e-05)
1
Selected!
[1, -999, 3, -999, -999, -999, -999, -999, -999, -999, 1, 1, 1]
[1, -999, 3, -999, -999, -999, -999, -999, -999, -999, 1, 1, 1]
[1, -999, 3, -999, -999, -999, -999, -999, -999, -999, 1, 1, 1]
[1, -999, 3, -999, -999, -999, -999, -999, -999, -999, 1, 1, 1]
DFS Stack - pushing 3
(2,3)
(3,0)
3
Selected!
[1, -999, 3, 3, -999, -999, -999, -999, -999, -999, 1, 1, 1]
DFS Stack - pushing 1
[-999, 2, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 4
[-999, -999, -999, -999, 0.01, -999, -999, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 5
(4,0.01)
(5,0.0)
0
Selected!
DFS Stack - pushing 6
(4,0.01)
(6,0.0002)
0
Selected!
[-999, -999, -999, -999, 0.01, 0, 0, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 7
(6,0)
(7,0.01)
0
Selected!
[-999, -999, -999, -999, 0.01, 0, 0, 0, -999, -999, -999, -999, -999]
DFS Stack - pushing 8
(7,0)
(8,0.01)
0
Selected!
[-999, -999, -999, -999, 0.01, 0, 0, 0, 0, -999, -999, -999, -999]
DFS Stack - pushing 10
(8,0)
(10,0.03)
0
Selected!
DFS Stack - pushing 11
(8,0)
(11,2e-05)
0
Selected!
DFS Stack - pushing 12
(8,0)
(12,2e-05)
0
Selected!
[-999, -999, -999, -999, 0.01, 0, 0, 0, 0, -999, 0, 0, 0]
[-999, -999, -999, -999, 0.01, 0, 0, 0, 0, -999, 0, 0, 0]
[-999, -999, -999, -999, 0.01, 0, 0, 0, 0, -999, 0, 0, 0]
[-999, -999, -999, -999, 0.01, 0, 0, 0, 0, -999, 0, 0, 0]
DFS Stack - pushing 9
[-999, -999, -999, -999, -999, -999, -999, -999, -999, 0.01, -999, -999, -999]
DFS Stack - pushing 10
(9,0.01)
(10,0.03)
0
Selected!
DFS Stack - pushing 11
(9,0.01)
(11,2e-05)
0
Selected!
[-999, -999, -999, -999, -999, -999, -999, -999, -999, 0.01, 0, 0, -999]
DFS Stack - pushing 12
(11,0)
(12,2e-05)
0
Selected!
[-999, -999, -999, -999, -999, -999, -999, -999, -999, 0.01, 0, 0, 0]
[-999, -999, -999, -999, -999, -999, -999, -999, -999, 0.01, 0, 0, 0]
[3, 2, 0.01, 0.01]
######################################################
**********
The values of this entry are
Name                 -  
Scope                -  struct
varType              -  0
size                 -  0
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  access
Scope                -  For
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  True
**********
The values of this entry are
Name                 -  access5
Scope                -  For
varType              -  0
size                 -  1
value                -  2
iteratorVar          -  True
**********
The values of this entry are
Name                 -  num_keys
Scope                -  struct
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  offaccess
Scope                -  For
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  True
**********
The values of this entry are
Name                 -  location
Scope                -  struct
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  access2
Scope                -  For
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  True
**********
The values of this entry are
Name                 -  indices
Scope                -  struct
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
***********
Line 1
LHS -  for bid
RHS -  bid count bid
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - for(bid = 0; bid < count; bid++){ //NTRATIO10000
***
Line 2
LHS -  for thid
RHS -  thid threadsPerBlock thid
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - for(thid = 0; thid < threadsPerBlock; thid++){//NTRATIO508
***
Line 3
LHS -  access
RHS -  currKnode bid
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - int access = currKnode[bid];
***
Line 4
LHS -  for i
RHS -  i maxheight i
For Ratio - 2
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - for(i = 0; i < maxheight; i++){ //FRATIO2
***
Line 5
LHS -  accessKnode
RHS -  knodes access
For Ratio - 2
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - *accessKnode = knodes[access];
***
Line 6
LHS - 
RHS -  accessKnode keys thid keys bid accessKnode keys thid keys bid
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 5
Cycles    - 0
Line	     - if((accessKnode.keys[thid]) <= keys[bid] && (accessKnode.keys[thid+1] > keys[bid])){	//taken for less than 1% of the iterations of threadsPerBlock //BRATIO0.01
***
Line 7
LHS -  offaccess
RHS -  offset bid
For Ratio - 1
If  Ratio - 0.01
Scope     - For
ScopeId   - 5
Cycles    - 1
Line	     - int offaccess = offset[bid];
***
Line 8
LHS - 
RHS -  knodes offaccess indices thid knodes elem
For Ratio - 1
If  Ratio - 0.01
Scope     - if
ScopeId   - 6
Cycles    - 0
Line	     - if(knodes[offaccess].indices[thid] < knodes_elem){	//taken once per iteration of maxheight //BRATIO0.01 BRATIO0.01
***
Line 9
LHS -  offset
RHS -  knodes offaccess indices thid bid
For Ratio - 1
If  Ratio - 0.0001
Scope     - if
ScopeId   - 6
Cycles    - 2
Line	     - offset[bid] = knodes[offaccess].indices[thid];
***
Line 10
LHS -  currKnode
RHS -  offset bid
For Ratio - 1
If  Ratio - 0.01
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - currKnode[bid] = offset[bid];
***
Line 11
LHS -  access
RHS -  currKnode bid
For Ratio - 1
If  Ratio - 0.01
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - int access2 = currKnode[bid];
***
Line 12
LHS -  for thid
RHS -  thid threadsPerBlock thid
For Ratio - 1
If  Ratio - 0.01
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - for(thid = 0; thid < threadsPerBlock; thid++){
***
Line 13
LHS - 
RHS -  knodes access keys thid keys bid
For Ratio - 1
If  Ratio - 0.01
Scope     - For
ScopeId   - 4
Cycles    - 3
Line	     - if(knodes[access2].keys[thid] == keys[bid]){			//taken once per iteration of count //BRATIO0.00001
***
Line 14
LHS -  access
RHS -  knodes access indices thid
For Ratio - 1
If  Ratio - 1e-05
Scope     - For
ScopeId   - 4
Cycles    - 2
Line	     - int access5 = knodes[access2].indices[thid];
***
Line 15
LHS -  ans
RHS -  records access value bid
For Ratio - 1
If  Ratio - 1e-05
Scope     - For
ScopeId   - 4
Cycles    - 2
Line	     - ans[bid].value = records[access5].value;
***
***********


TotalTranscendentals - 0
TotalArithmeticInstructions - 14.04
NumLoadOperations - 6.07023
NumStoreOperations - 1.02011
NumOffsetAccesses -  0
NumIndirectAccesses -  0
NumDoubleAccesses -  0
CriticalPath -  3
nThreadsCount -  5080000
instCountWithFRatio -  30
ninst       -  21.13034
ilp16k       -  21.0469532603
ilp32       -  7.08841230548
ilpRate       -  2.96920556442


######################################################
Transcendental Ratio - L
Arithmetic Intensity - M
Global Memory Operation - H
BranchDivergence - L 0.32
ControlDensity -  H
Floating Point Mul/Div - L
Total Instruction - L
Num Threads - 5080000
Critical Path - L
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test4.txt
count = 6000;

[]
maxheight = 2;

[]
threadsPerBlock = 508;

[]


[]
long currKnode[10000], offset[10000];

[]


[]
typedef struct knode {

scope - pushing struct
[]
        int location;

[]
        int indices [509];

[]
        int  keys [509];

[]
        bool is_leaf;

[]
        int num_keys;

[]
} knode;

[]


[]
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
for(bid = 0; bid < count; bid++){ //NTRATIO6000

scope - pushing For
For count stack - pushing 1
['NTRATIO6000']
['6000']
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
34   /
35   /
33    
 0; bid < count; bid++){
match
bid < count; bid++){
/NTRATIO6000

Division Found
####
35   /
36   N
34   /

NTRATIO6000

generateAST for for(bid = 0; bid < count; bid++){ //NTRATIO6000
This line is a for
extractEveryVariable
Inserting - for(bid = 0; bid < count; bid++){ //NTRATIO6000
    for(thid = 0; thid < threadsPerBlock; thid++){  //NTRATIO508

scope - pushing For
For count stack - pushing 1
['NTRATIO508']
['508']
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  4
0
0
TotalArithmeticInstructions  4
Division Found
####
52   /
53   /
51    
 0; thid < threadsPerBlock; thid++){
match
thid < threadsPerBlock; thid++){
/NTRATIO508

Division Found
####
53   /
54   N
52   /

NTRATIO508

generateAST for for(thid = 0; thid < threadsPerBlock; thid++){  //NTRATIO508
This line is a for
extractEveryVariable
Inserting - for(thid = 0; thid < threadsPerBlock; thid++){  //NTRATIO508
    access = currKnode[bid];

[]
[]
[]
0
TotalArithmeticInstructions  4
0
0
TotalArithmeticInstructions  4
Checking double store operation
Checking double store operation - Done
generateAST for access = currKnode[bid];
access = currKnode[bid];
access = currKnode[bid];
access = currKnode[bid];
access = #1#;
access = #1#;
access = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - access = currKnode[bid];
    access3 = lastKnode[bid];

[]
[]
[]
0
TotalArithmeticInstructions  4
0
0
TotalArithmeticInstructions  4
Checking double store operation
Checking double store operation - Done
generateAST for access3 = lastKnode[bid];
access3 = lastKnode[bid];
access3 = lastKnode[bid];
access3 = lastKnode[bid];
access3 = #1#;
access3 = #1#;
access3 = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - access3 = lastKnode[bid];
    for(i = 0; i < maxheight; i++){ //FRATIO2

scope - pushing For
[]
FRATIO2
For count stack - pushing 2
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  8
0
0
TotalArithmeticInstructions  8
Division Found
####
36   /
37   /
35    
 0; i < maxheight; i++){
match
i < maxheight; i++){
/FRATIO2

Division Found
####
37   /
38   F
36   /

FRATIO2

generateAST for for(i = 0; i < maxheight; i++){ //FRATIO2
This line is a for
extractEveryVariable
Inserting - for(i = 0; i < maxheight; i++){ //FRATIO2
	     *accessKnode = knodes[access];

[]
['*']
[]
1
TotalArithmeticInstructions  10
0
0
TotalArithmeticInstructions  10
Checking double store operation
Checking double store operation - Done
####
6   *
7   a
5    

accessKnode = knodes[access];

match
accessKnode
18    
generateAST for *accessKnode = knodes[access];
*accessKnode = knodes[access];
*accessKnode = knodes[access];
*accessKnode = knodes[access];
*accessKnode = #1#;
*accessKnode = #1#;
*accessKnode = #1#;
*#0# = #1#;
 * #0#    =    #1# ; 
 * #0#    =    #1# ; 
 * #0#    =    #1# ; 
*#0#=#1#;
*0=1
Time Taken 1

extractEveryVariable
Inserting - *accessKnode = knodes[access];
Within Fratio
2
             if((accessKnode.keys[thid] <= start[bid]) && (accessKnode.keys[thid+1] > start[bid])){	//taken for less than 1% of the iterations of threadsPerBlock //BRATIO0.01

scope - pushing For
For count stack - pushing 1
[]
['<=', '&&', '+', '>', '/', '/', '/', '/']
['//', '//']
4
TotalArithmeticInstructions  14
1
0
TotalArithmeticInstructions  14
offset pattern is
thid+1
and extracted value is
['1']
Offset is
1
Offset is a int with number <=2
Checking double store operation
33   [
32   s
             if((accessKnode.keys
match
if((accessKnode.keys
Checking double store operation - Done
Division Found
####
100   /
101   /
99   	
 start[bid]) && (accessKnode.keys[thid+1] > start[bid])){	
match
accessKnode.keys[thid+1] > start[bid])){
/taken for less than 1% of the iterations of threadsPerBlock //BRATIO0.01

match
taken
107    
Division Found
####
101   /
102   t
100   /

taken for less than 1% of the iterations of threadsPerBlock //BRATIO0.01

match
taken
107    
Division Found
####
162   /
163   /
161    
 for less than 1% of the iterations of threadsPerBlock
match
less than 1% of the iterations of threadsPerBlock
/BRATIO0.01

Division Found
####
163   /
164   B
162   /

BRATIO0.01

Found Control Density
generateAST for if((accessKnode.keys[thid] <= start[bid]) && (accessKnode.keys[thid+1] > start[bid])){	//taken for less than 1% of the iterations of threadsPerBlock //BRATIO0.01
if((accessKnode.keys[thid] <= start[bid]) && (accessKnode.keys[thid+1] > start[bid])){	
if((accessKnode.keys[thid] <= start[bid]) && (accessKnode.keys[thid+1] > start[bid])){	
if((accessKnode.keys[thid] <= start[bid]) && (accessKnode.keys[thid+1] > start[bid])){	
if((accessKnode.#1# <= #1#) && (accessKnode.#1# > #1#)){	
if((accessKnode.#1# <= #1#) && (accessKnode.#1# > #1#)){	
if((#2# <= #1#) && (#2# > #1#)){	
0=((#2# <= #1#) && (#2# > #1#))	
0 =  (  ( #2#    <  =    #1# )     &  &     ( #2#    >    #1# )  )  	 
0 =  (  ( #2#    <  =    #1# )     &  &     ( #2#    >    #1# )  )  	 
0 =  (  ( #2#    <  =    #1# )     &  &     ( #2#    >    #1# )  )  	 
0=((#2#<=#1#)&&(#2#>#1#))
0=((2<=1)&&(2>1))
This line does not have an =
extractEveryVariable
Inserting - if((accessKnode.keys[thid] <= start[bid]) && (accessKnode.keys[thid+1] > start[bid])){	//taken for less than 1% of the iterations of threadsPerBlock //BRATIO0.01
['0.01']
Bratio found
temp bratio is  0.32
Divergence ratio is  0.32
If ratio stack - pushing 0.01
Within Fratio
11
                if(knodes[access].indices[thid] < knodes_elem){		//only taken once for every iteration of maxheight  //BRATIO0.5 //BRATIO0.01

scope - pushing For
For count stack - pushing 1
[]
['<', '/', '/', '/', '/', '/', '/']
['//', '//', '//']
1
TotalArithmeticInstructions  14.01
0
0
TotalArithmeticInstructions  14.01
Checking double store operation
Checking double store operation - Done
Division Found
####
65   /
66   /
64   	
                if(knodes[access].indices[thid] < knodes_elem){		
match
knodes[access].indices[thid] < knodes_elem){
/only taken once for every iteration of maxheight  //BRATIO0.5 //BRATIO0.01

match
only
71    
Division Found
####
66   /
67   o
65   /

only taken once for every iteration of maxheight  //BRATIO0.5 //BRATIO0.01

match
only
71    
Division Found
####
117   /
118   /
116    
 taken once for every iteration of maxheight
match
once for every iteration of maxheight
/BRATIO0.5 //BRATIO0.01

match
BRATIO0.5
128    
Division Found
####
118   /
119   B
117   /

BRATIO0.5 //BRATIO0.01

match
BRATIO0.5
128    
Division Found
####
129   /
130   /
128    

/BRATIO0.01

Division Found
####
130   /
131   B
129   /

BRATIO0.01

Found Control Density
generateAST for if(knodes[access].indices[thid] < knodes_elem){		//only taken once for every iteration of maxheight  //BRATIO0.5 //BRATIO0.01
if(knodes[access].indices[thid] < knodes_elem){		
if(knodes[access].indices[thid] < knodes_elem){		
if(knodes[access].indices[thid] < knodes_elem){		
if(#1#.#1# < knodes_elem){		
if(#2# < knodes_elem){		
if(#2# < knodes_elem){		
0=(#2# < #0#)		
0 =  ( #2#    <    #0# )  	  	 
0 =  ( #2#    <    #0# )  	  	 
0 =  ( #2#    <    #0# )  	  	 
0=(#2#<#0#)
0=(2<0)
This line does not have an =
extractEveryVariable
Inserting - if(knodes[access].indices[thid] < knodes_elem){		//only taken once for every iteration of maxheight  //BRATIO0.5 //BRATIO0.01
['0.5']
['0.01']
Bratio found
temp bratio is  0.16
Divergence ratio using old  0.32
If ratio stack - pushing 0.005
Within Fratio
17
                    offset[bid] = knodes[access].indices[thid];

[]
[]
[]
0
TotalArithmeticInstructions  14.01
0
0
TotalArithmeticInstructions  14.01
Checking double store operation
26   [
25   t
                    offset
match
offset
Checking double store operation - Done
generateAST for offset[bid] = knodes[access].indices[thid];
offset[bid] = knodes[access].indices[thid];
offset[bid] = knodes[access].indices[thid];
offset[bid] = knodes[access].indices[thid];
#1# = #1#.#1#;
#1# = #2#;
#1# = #2#;
#1# = #2#;
#1#    =    #2# ; 
#1#    =    #2# ; 
#1#    =    #2# ; 
#1#=#2#;
1=2
Time Taken 2

extractEveryVariable
Inserting - offset[bid] = knodes[access].indices[thid];
Within Fratio
20
                }

Scope Found For, popping, New Length 5
[]
[]
[]
0
TotalArithmeticInstructions  14.01
0
0
TotalArithmeticInstructions  14.01
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
Within Fratio
20
            }

Scope Found For, popping, New Length 4
[]
[]
[]
0
TotalArithmeticInstructions  14.01
0
0
TotalArithmeticInstructions  14.01
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
Within Fratio
20
            if((knodes[access3].keys[thid] <= end[bid]) && (knodes[access3].keys[thid+1] > end[bid])){	//taken for less than 1% of the iterations of threadsPerBlock #BRATIO0.01

scope - pushing For
For count stack - pushing 1
[]
['<=', '&&', '+', '>', '/', '/']
['//']
4
TotalArithmeticInstructions  14.03
1
0
TotalArithmeticInstructions  14.03
offset pattern is
thid+1
and extracted value is
['1']
Offset is
1
Offset is a int with number <=2
Checking double store operation
22   [
21   s
            if((knodes
match
if((knodes
Checking double store operation - Done
Division Found
####
103   /
104   /
102   	
 end[bid]) && (knodes[access3].keys[thid+1] > end[bid])){	
match
knodes[access3].keys[thid+1] > end[bid])){
/taken for less than 1% of the iterations of threadsPerBlock #BRATIO0.01

match
taken
110    
Division Found
####
104   /
105   t
103   /

taken for less than 1% of the iterations of threadsPerBlock #BRATIO0.01

match
taken
110    
Found Control Density
generateAST for if((knodes[access3].keys[thid] <= end[bid]) && (knodes[access3].keys[thid+1] > end[bid])){	//taken for less than 1% of the iterations of threadsPerBlock #BRATIO0.01
if((knodes[access3].keys[thid] <= end[bid]) && (knodes[access3].keys[thid+1] > end[bid])){	
if((knodes[access3].keys[thid] <= end[bid]) && (knodes[access3].keys[thid+1] > end[bid])){	
if((knodes[access3].keys[thid] <= end[bid]) && (knodes[access3].keys[thid+1] > end[bid])){	
if((#1#.#1# <= #1#) && (#1#.#1# > #1#)){	
if((#2# <= #1#) && (#2# > #1#)){	
if((#2# <= #1#) && (#2# > #1#)){	
0=((#2# <= #1#) && (#2# > #1#))	
0 =  (  ( #2#    <  =    #1# )     &  &     ( #2#    >    #1# )  )  	 
0 =  (  ( #2#    <  =    #1# )     &  &     ( #2#    >    #1# )  )  	 
0 =  (  ( #2#    <  =    #1# )     &  &     ( #2#    >    #1# )  )  	 
0=((#2#<=#1#)&&(#2#>#1#))
0=((2<=1)&&(2>1))
This line does not have an =
extractEveryVariable
Inserting - if((knodes[access3].keys[thid] <= end[bid]) && (knodes[access3].keys[thid+1] > end[bid])){	//taken for less than 1% of the iterations of threadsPerBlock #BRATIO0.01
['0.01']
Bratio found
temp bratio is  0.32
Divergence ratio using old  0.32
If ratio stack - pushing 0.01
Within Fratio
30
                if(knodes[access3].indices[thid] < knodes_elem){		//only taken once for every iteration of maxheight //BRATIO0.01 BRATIO0.5

scope - pushing For
For count stack - pushing 1
[]
['<', '/', '/', '/', '/']
['//', '//']
1
TotalArithmeticInstructions  14.04
0
0
TotalArithmeticInstructions  14.04
Checking double store operation
Checking double store operation - Done
Division Found
####
66   /
67   /
65   	
                if(knodes[access3].indices[thid] < knodes_elem){		
match
knodes[access3].indices[thid] < knodes_elem){
/only taken once for every iteration of maxheight //BRATIO0.01 BRATIO0.5

match
only
72    
Division Found
####
67   /
68   o
66   /

only taken once for every iteration of maxheight //BRATIO0.01 BRATIO0.5

match
only
72    
Division Found
####
117   /
118   /
116    
 taken once for every iteration of maxheight
match
once for every iteration of maxheight
/BRATIO0.01 BRATIO0.5

match
BRATIO0.01
129    
Division Found
####
118   /
119   B
117   /

BRATIO0.01 BRATIO0.5

match
BRATIO0.01
129    
Found Control Density
generateAST for if(knodes[access3].indices[thid] < knodes_elem){		//only taken once for every iteration of maxheight //BRATIO0.01 BRATIO0.5
if(knodes[access3].indices[thid] < knodes_elem){		
if(knodes[access3].indices[thid] < knodes_elem){		
if(knodes[access3].indices[thid] < knodes_elem){		
if(#1#.#1# < knodes_elem){		
if(#2# < knodes_elem){		
if(#2# < knodes_elem){		
0=(#2# < #0#)		
0 =  ( #2#    <    #0# )  	  	 
0 =  ( #2#    <    #0# )  	  	 
0 =  ( #2#    <    #0# )  	  	 
0=(#2#<#0#)
0=(2<0)
This line does not have an =
extractEveryVariable
Inserting - if(knodes[access3].indices[thid] < knodes_elem){		//only taken once for every iteration of maxheight //BRATIO0.01 BRATIO0.5
['0.01']
['0.5']
Bratio found
temp bratio is  0.16
Divergence ratio using old  0.32
If ratio stack - pushing 0.005
Within Fratio
35
                    offset_2[bid] = knodes[access3].indices[thid];

[]
[]
[]
0
TotalArithmeticInstructions  14.04
0
0
TotalArithmeticInstructions  14.04
Checking double store operation
28   [
27   2
                    offset_2
match
offset_2
Checking double store operation - Done
generateAST for offset_2[bid] = knodes[access3].indices[thid];
offset_2[bid] = knodes[access3].indices[thid];
offset_2[bid] = knodes[access3].indices[thid];
offset_2[bid] = knodes[access3].indices[thid];
#1# = #1#.#1#;
#1# = #2#;
#1# = #2#;
#1# = #2#;
#1#    =    #2# ; 
#1#    =    #2# ; 
#1#    =    #2# ; 
#1#=#2#;
1=2
Time Taken 2

extractEveryVariable
Inserting - offset_2[bid] = knodes[access3].indices[thid];
Within Fratio
38
                }

Scope Found For, popping, New Length 5
[]
[]
[]
0
TotalArithmeticInstructions  14.04
0
0
TotalArithmeticInstructions  14.04
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
Within Fratio
38
            }

Scope Found For, popping, New Length 4
[]
[]
[]
0
TotalArithmeticInstructions  14.04
0
0
TotalArithmeticInstructions  14.04
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
Within Fratio
38
        }

Scope Found For, popping, New Length 3
[]
[]
[]
0
TotalArithmeticInstructions  14.04
0
0
TotalArithmeticInstructions  14.04
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
        currKnode[bid] = offset[bid];

[]
[]
[]
0
TotalArithmeticInstructions  14.04
0
0
TotalArithmeticInstructions  14.04
Checking double store operation
17   [
16   e
        currKnode
match
currKnode
Checking double store operation - Done
generateAST for currKnode[bid] = offset[bid];
currKnode[bid] = offset[bid];
currKnode[bid] = offset[bid];
currKnode[bid] = offset[bid];
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#=#1#;
1=1
Time Taken 1

extractEveryVariable
Inserting - currKnode[bid] = offset[bid];
        lastKnode[bid] = offset_2[bid];

[]
[]
[]
0
TotalArithmeticInstructions  14.04
0
0
TotalArithmeticInstructions  14.04
Checking double store operation
17   [
16   e
        lastKnode
match
lastKnode
Checking double store operation - Done
generateAST for lastKnode[bid] = offset_2[bid];
lastKnode[bid] = offset_2[bid];
lastKnode[bid] = offset_2[bid];
lastKnode[bid] = offset_2[bid];
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#=#1#;
1=1
Time Taken 1

extractEveryVariable
Inserting - lastKnode[bid] = offset_2[bid];
    }

Scope Found For, popping, New Length 2
[]
[]
[]
0
TotalArithmeticInstructions  14.04
0
0
TotalArithmeticInstructions  14.04
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
    access2 = currKnode[bid];

[]
[]
[]
0
TotalArithmeticInstructions  14.04
0
0
TotalArithmeticInstructions  14.04
Checking double store operation
Checking double store operation - Done
generateAST for access2 = currKnode[bid];
access2 = currKnode[bid];
access2 = currKnode[bid];
access2 = currKnode[bid];
access2 = #1#;
access2 = #1#;
access2 = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - access2 = currKnode[bid];
    for(thid = 0; thid < threadsPerBlock; thid++){

scope - pushing For
For count stack - pushing 1
[]
['<', '++']
[]
2
TotalArithmeticInstructions  14.05
0
0
TotalArithmeticInstructions  14.05
generateAST for for(thid = 0; thid < threadsPerBlock; thid++){
This line is a for
extractEveryVariable
Inserting - for(thid = 0; thid < threadsPerBlock; thid++){
        if(knodes[access2].keys[thid] == start[bid]){				//only taken once for each iteration of count //BRATIO0.0001

scope - pushing For
For count stack - pushing 1
[]
['==', '/', '/', '/', '/']
['//', '//']
1
TotalArithmeticInstructions  14.055
0
0
TotalArithmeticInstructions  14.055
Checking double store operation
17   [
16   s
        if(knodes
match
if(knodes
Checking double store operation - Done
Division Found
####
57   /
58   /
56   	
= start[bid]){				
match
start[bid]){
/only taken once for each iteration of count //BRATIO0.0001

match
only
63    
Division Found
####
58   /
59   o
57   /

only taken once for each iteration of count //BRATIO0.0001

match
only
63    
Division Found
####
103   /
104   /
102    
 taken once for each iteration of count
match
once for each iteration of count
/BRATIO0.0001

Division Found
####
104   /
105   B
103   /

BRATIO0.0001

Found Control Density
generateAST for if(knodes[access2].keys[thid] == start[bid]){				//only taken once for each iteration of count //BRATIO0.0001
if(knodes[access2].keys[thid] == start[bid]){				
if(knodes[access2].keys[thid] == start[bid]){				
if(knodes[access2].keys[thid] == start[bid]){				
if(#1#.#1# == #1#){				
if(#2# == #1#){				
if(#2# == #1#){				
0=(#2# == #1#)				
0 =  ( #2#    =  =    #1# )  	  	  	  	 
0 =  ( #2#    =  =    #1# )  	  	  	  	 
0 =  ( #2#    =  =    #1# )  	  	  	  	 
0=(#2#==#1#)
0=(2==1)
Time Taken 3

extractEveryVariable
Inserting - if(knodes[access2].keys[thid] == start[bid]){				//only taken once for each iteration of count //BRATIO0.0001
['0.0001']
Bratio found
temp bratio is  0.0032
Divergence ratio using old  0.32
If ratio stack - pushing 0.0001
Within Fratio
44
            recstart[bid] = knodes[access2].indices[thid];

[]
[]
[]
0
TotalArithmeticInstructions  14.055
0
0
TotalArithmeticInstructions  14.055
Checking double store operation
20   [
19   t
            recstart
match
recstart
Checking double store operation - Done
generateAST for recstart[bid] = knodes[access2].indices[thid];
recstart[bid] = knodes[access2].indices[thid];
recstart[bid] = knodes[access2].indices[thid];
recstart[bid] = knodes[access2].indices[thid];
#1# = #1#.#1#;
#1# = #2#;
#1# = #2#;
#1# = #2#;
#1#    =    #2# ; 
#1#    =    #2# ; 
#1#    =    #2# ; 
#1#=#2#;
1=2
Time Taken 2

extractEveryVariable
Inserting - recstart[bid] = knodes[access2].indices[thid];
Within Fratio
47
        }

Scope Found For, popping, New Length 3
[]
[]
[]
0
TotalArithmeticInstructions  14.055
0
0
TotalArithmeticInstructions  14.055
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
    }

Scope Found For, popping, New Length 2
[]
[]
[]
0
TotalArithmeticInstructions  14.055
0
0
TotalArithmeticInstructions  14.055
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
    access4 = lastKnode[bid];

[]
[]
[]
0
TotalArithmeticInstructions  14.055
0
0
TotalArithmeticInstructions  14.055
Checking double store operation
Checking double store operation - Done
generateAST for access4 = lastKnode[bid];
access4 = lastKnode[bid];
access4 = lastKnode[bid];
access4 = lastKnode[bid];
access4 = #1#;
access4 = #1#;
access4 = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - access4 = lastKnode[bid];
    for(thid = 0; thid < threadsPerBlock; thid++){

scope - pushing For
For count stack - pushing 1
[]
['<', '++']
[]
2
TotalArithmeticInstructions  14.0552
0
0
TotalArithmeticInstructions  14.0552
generateAST for for(thid = 0; thid < threadsPerBlock; thid++){
This line is a for
extractEveryVariable
Inserting - for(thid = 0; thid < threadsPerBlock; thid++){
        if(knodes[access4].keys[thid] == end[bid]){				//only taken once for each iteration of count //BRATIO0.0001

scope - pushing For
For count stack - pushing 1
[]
['==', '/', '/', '/', '/']
['//', '//']
1
TotalArithmeticInstructions  14.0553
0
0
TotalArithmeticInstructions  14.0553
Checking double store operation
17   [
16   s
        if(knodes
match
if(knodes
Checking double store operation - Done
Division Found
####
55   /
56   /
54   	
= end[bid]){				
match
end[bid]){
/only taken once for each iteration of count //BRATIO0.0001

match
only
61    
Division Found
####
56   /
57   o
55   /

only taken once for each iteration of count //BRATIO0.0001

match
only
61    
Division Found
####
101   /
102   /
100    
 taken once for each iteration of count
match
once for each iteration of count
/BRATIO0.0001

Division Found
####
102   /
103   B
101   /

BRATIO0.0001

Found Control Density
generateAST for if(knodes[access4].keys[thid] == end[bid]){				//only taken once for each iteration of count //BRATIO0.0001
if(knodes[access4].keys[thid] == end[bid]){				
if(knodes[access4].keys[thid] == end[bid]){				
if(knodes[access4].keys[thid] == end[bid]){				
if(#1#.#1# == #1#){				
if(#2# == #1#){				
if(#2# == #1#){				
0=(#2# == #1#)				
0 =  ( #2#    =  =    #1# )  	  	  	  	 
0 =  ( #2#    =  =    #1# )  	  	  	  	 
0 =  ( #2#    =  =    #1# )  	  	  	  	 
0=(#2#==#1#)
0=(2==1)
Time Taken 3

extractEveryVariable
Inserting - if(knodes[access4].keys[thid] == end[bid]){				//only taken once for each iteration of count //BRATIO0.0001
['0.0001']
Bratio found
temp bratio is  0.0032
Divergence ratio using old  0.32
If ratio stack - pushing 0.0001
Within Fratio
53
            reclength[bid] = knodes[access4].indices[thid] - recstart[bid]+1;

[]
['-', '+']
[]
2
TotalArithmeticInstructions  14.0555
0
0
TotalArithmeticInstructions  14.0555
Checking double store operation
21   [
20   h
            reclength
match
reclength
Checking double store operation - Done
generateAST for reclength[bid] = knodes[access4].indices[thid] - recstart[bid]+1;
reclength[bid] = knodes[access4].indices[thid] - recstart[bid]+1;
reclength[bid] = knodes[access4].indices[thid] - recstart[bid]+1;
reclength[bid] = knodes[access4].indices[thid] - recstart[bid]+1;
#1# = #1#.#1# - #1#+1;
#1# = #2# - #1#+1;
#1# = #2# - #1#+1;
#1# = #2# - #1#+1;
#1#    =    #2#    -    #1# + 1 ; 
#1#    =    #2#    -    #1# + 1 ; 
#1#    =    #2#    -    #1# +#0#; 
#1#=#2#-#1#+#0#;
1=2-1+0
Time Taken 4

extractEveryVariable
Inserting - reclength[bid] = knodes[access4].indices[thid] - recstart[bid]+1;
Within Fratio
59
        }

Scope Found For, popping, New Length 3
[]
[]
[]
0
TotalArithmeticInstructions  14.0555
0
0
TotalArithmeticInstructions  14.0555
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
    }

Scope Found For, popping, New Length 2
[]
[]
[]
0
TotalArithmeticInstructions  14.0555
0
0
TotalArithmeticInstructions  14.0555
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
}

Scope Found For, popping, New Length 1
[]
[]
[]
0
TotalArithmeticInstructions  14.0555
0
0
TotalArithmeticInstructions  14.0555
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  14.0555
0
0
TotalArithmeticInstructions  14.0555
Annotation End Found
ILP!!!
******
0
access = currKnode[bid];
[]
[3, 5, 6, 7, 8, 9, 14, 15, 18, 19]
1
1
1


1
access3 = lastKnode[bid];
[]
[3, 5, 6, 7, 8, 9, 14, 15, 18, 19]
1
1
1


2
for(i = 0; i < maxheight; i++){ //FRATIO2
[]
[]
1
1
2


3
*accessKnode = knodes[access];
[0, 1]
[4]
1
1
2


4
if((accessKnode.keys[thid] <= start[bid]) && (accessKnode.keys[thid+1] > start[bid])){	//taken for less than 1% of the iterations of threadsPerBlock //BRATIO0.01
[3]
[]
0
1
1


5
if(knodes[access].indices[thid] < knodes_elem){		//only taken once for every iteration of maxheight  //BRATIO0.5 //BRATIO0.01
[0, 1]
[]
0
0.01
1


6
offset[bid] = knodes[access].indices[thid];
[0, 1]
[10, 11]
2
0.005
1


7
if((knodes[access3].keys[thid] <= end[bid]) && (knodes[access3].keys[thid+1] > end[bid])){	//taken for less than 1% of the iterations of threadsPerBlock #BRATIO0.01
[0, 1]
[]
0
0.005
1


8
if(knodes[access3].indices[thid] < knodes_elem){		//only taken once for every iteration of maxheight //BRATIO0.01 BRATIO0.5
[0, 1]
[]
0
0.01
1


9
offset_2[bid] = knodes[access3].indices[thid];
[0, 1]
[10, 11]
2
0.005
1


10
currKnode[bid] = offset[bid];
[6, 9]
[12]
1
0.005
1


11
lastKnode[bid] = offset_2[bid];
[6, 9]
[16]
1
0.005
1


12
access2 = currKnode[bid];
[10]
[14, 15, 18, 19]
1
0.005
1


13
for(thid = 0; thid < threadsPerBlock; thid++){
[]
[14, 15, 17, 18, 19]
1
0.005
1


14
if(knodes[access2].keys[thid] == start[bid]){				//only taken once for each iteration of count //BRATIO0.0001
[0, 1, 12, 13]
[]
3
0.005
1


15
recstart[bid] = knodes[access2].indices[thid];
[0, 1, 12, 13]
[19]
2
0.0001
1


16
access4 = lastKnode[bid];
[11]
[18, 19]
1
0.0001
1


17
for(thid = 0; thid < threadsPerBlock; thid++){
[13]
[18, 19]
1
0.0001
1


18
if(knodes[access4].keys[thid] == end[bid]){				//only taken once for each iteration of count //BRATIO0.0001
[0, 1, 12, 13, 16, 17]
[]
3
0.0001
1


19
reclength[bid] = knodes[access4].indices[thid] - recstart[bid]+1;
[0, 1, 12, 13, 15, 16, 17]
[]
4
0.0001
1


******
Node 0's -
[0, 1, 2, 13]
DFS Stack - pushing 0
[1, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 3
(0,1)
(3,2)
3
Selected!
DFS Stack - pushing 5
(0,1)
(5,0.0)
1
Selected!
DFS Stack - pushing 6
(0,1)
(6,0.01)
1
Selected!
DFS Stack - pushing 7
(0,1)
(7,0.0)
1
Selected!
DFS Stack - pushing 8
(0,1)
(8,0.0)
1
Selected!
DFS Stack - pushing 9
(0,1)
(9,0.01)
1
Selected!
DFS Stack - pushing 14
(0,1)
(14,0.015)
1
Selected!
DFS Stack - pushing 15
(0,1)
(15,0.0002)
1
Selected!
DFS Stack - pushing 18
(0,1)
(18,0.0003)
1
Selected!
DFS Stack - pushing 19
(0,1)
(19,0.0004)
1
Selected!
[1, -999, -999, 3, -999, 1, 1, 1, 1, 1, -999, -999, -999, -999, 1, 1, -999, -999, 1, 1]
[1, -999, -999, 3, -999, 1, 1, 1, 1, 1, -999, -999, -999, -999, 1, 1, -999, -999, 1, 1]
[1, -999, -999, 3, -999, 1, 1, 1, 1, 1, -999, -999, -999, -999, 1, 1, -999, -999, 1, 1]
[1, -999, -999, 3, -999, 1, 1, 1, 1, 1, -999, -999, -999, -999, 1, 1, -999, -999, 1, 1]
[1, -999, -999, 3, -999, 1, 1, 1, 1, 1, -999, -999, -999, -999, 1, 1, -999, -999, 1, 1]
DFS Stack - pushing 10
(9,1)
(10,0.005)
1
Selected!
DFS Stack - pushing 11
(9,1)
(11,0.005)
1
Selected!
[1, -999, -999, 3, -999, 1, 1, 1, 1, 1, 1, 1, -999, -999, 1, 1, -999, -999, 1, 1]
DFS Stack - pushing 16
(11,1)
(16,0.0001)
1
Selected!
[1, -999, -999, 3, -999, 1, 1, 1, 1, 1, 1, 1, -999, -999, 1, 1, 1, -999, 1, 1]
[1, -999, -999, 3, -999, 1, 1, 1, 1, 1, 1, 1, -999, -999, 1, 1, 1, -999, 1, 1]
DFS Stack - pushing 12
(10,1)
(12,0.005)
1
Selected!
[1, -999, -999, 3, -999, 1, 1, 1, 1, 1, 1, 1, 1, -999, 1, 1, 1, -999, 1, 1]
[1, -999, -999, 3, -999, 1, 1, 1, 1, 1, 1, 1, 1, -999, 1, 1, 1, -999, 1, 1]
[1, -999, -999, 3, -999, 1, 1, 1, 1, 1, 1, 1, 1, -999, 1, 1, 1, -999, 1, 1]
[1, -999, -999, 3, -999, 1, 1, 1, 1, 1, 1, 1, 1, -999, 1, 1, 1, -999, 1, 1]
[1, -999, -999, 3, -999, 1, 1, 1, 1, 1, 1, 1, 1, -999, 1, 1, 1, -999, 1, 1]
[1, -999, -999, 3, -999, 1, 1, 1, 1, 1, 1, 1, 1, -999, 1, 1, 1, -999, 1, 1]
DFS Stack - pushing 4
(3,3)
(4,0)
3
Selected!
[1, -999, -999, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, -999, 1, 1, 1, -999, 1, 1]
DFS Stack - pushing 1
[-999, 1, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 3
(1,1)
(3,2)
3
Selected!
DFS Stack - pushing 5
(1,1)
(5,0.0)
1
Selected!
DFS Stack - pushing 6
(1,1)
(6,0.01)
1
Selected!
DFS Stack - pushing 7
(1,1)
(7,0.0)
1
Selected!
DFS Stack - pushing 8
(1,1)
(8,0.0)
1
Selected!
DFS Stack - pushing 9
(1,1)
(9,0.01)
1
Selected!
DFS Stack - pushing 14
(1,1)
(14,0.015)
1
Selected!
DFS Stack - pushing 15
(1,1)
(15,0.0002)
1
Selected!
DFS Stack - pushing 18
(1,1)
(18,0.0003)
1
Selected!
DFS Stack - pushing 19
(1,1)
(19,0.0004)
1
Selected!
[-999, 1, -999, 3, -999, 1, 1, 1, 1, 1, -999, -999, -999, -999, 1, 1, -999, -999, 1, 1]
[-999, 1, -999, 3, -999, 1, 1, 1, 1, 1, -999, -999, -999, -999, 1, 1, -999, -999, 1, 1]
[-999, 1, -999, 3, -999, 1, 1, 1, 1, 1, -999, -999, -999, -999, 1, 1, -999, -999, 1, 1]
[-999, 1, -999, 3, -999, 1, 1, 1, 1, 1, -999, -999, -999, -999, 1, 1, -999, -999, 1, 1]
[-999, 1, -999, 3, -999, 1, 1, 1, 1, 1, -999, -999, -999, -999, 1, 1, -999, -999, 1, 1]
DFS Stack - pushing 10
(9,1)
(10,0.005)
1
Selected!
DFS Stack - pushing 11
(9,1)
(11,0.005)
1
Selected!
[-999, 1, -999, 3, -999, 1, 1, 1, 1, 1, 1, 1, -999, -999, 1, 1, -999, -999, 1, 1]
DFS Stack - pushing 16
(11,1)
(16,0.0001)
1
Selected!
[-999, 1, -999, 3, -999, 1, 1, 1, 1, 1, 1, 1, -999, -999, 1, 1, 1, -999, 1, 1]
[-999, 1, -999, 3, -999, 1, 1, 1, 1, 1, 1, 1, -999, -999, 1, 1, 1, -999, 1, 1]
DFS Stack - pushing 12
(10,1)
(12,0.005)
1
Selected!
[-999, 1, -999, 3, -999, 1, 1, 1, 1, 1, 1, 1, 1, -999, 1, 1, 1, -999, 1, 1]
[-999, 1, -999, 3, -999, 1, 1, 1, 1, 1, 1, 1, 1, -999, 1, 1, 1, -999, 1, 1]
[-999, 1, -999, 3, -999, 1, 1, 1, 1, 1, 1, 1, 1, -999, 1, 1, 1, -999, 1, 1]
[-999, 1, -999, 3, -999, 1, 1, 1, 1, 1, 1, 1, 1, -999, 1, 1, 1, -999, 1, 1]
[-999, 1, -999, 3, -999, 1, 1, 1, 1, 1, 1, 1, 1, -999, 1, 1, 1, -999, 1, 1]
[-999, 1, -999, 3, -999, 1, 1, 1, 1, 1, 1, 1, 1, -999, 1, 1, 1, -999, 1, 1]
DFS Stack - pushing 4
(3,3)
(4,0)
3
Selected!
[-999, 1, -999, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, -999, 1, 1, 1, -999, 1, 1]
DFS Stack - pushing 2
[-999, -999, 2, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 13
[-999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, 0.0050000000000000001, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 14
(13,0.005)
(14,0.015)
0
Selected!
DFS Stack - pushing 15
(13,0.005)
(15,0.0002)
0
Selected!
DFS Stack - pushing 17
(13,0.005)
(17,0.0001)
0
Selected!
DFS Stack - pushing 18
(13,0.005)
(18,0.0003)
0
Selected!
DFS Stack - pushing 19
(13,0.005)
(19,0.0004)
0
Selected!
[-999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, 0.0050000000000000001, 0, 0, -999, 0, 0, 0]
[-999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, 0.0050000000000000001, 0, 0, -999, 0, 0, 0]
[-999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, 0.0050000000000000001, 0, 0, -999, 0, 0, 0]
[-999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, 0.0050000000000000001, 0, 0, -999, 0, 0, 0]
[-999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, 0.0050000000000000001, 0, 0, -999, 0, 0, 0]
[3, 3, 2, 0.0050000000000000001]
######################################################
**********
The values of this entry are
Name                 -  indices
Scope                -  struct
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  
Scope                -  struct
varType              -  0
size                 -  0
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  location
Scope                -  struct
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  num_keys
Scope                -  struct
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
***********
Line 1
LHS -  for bid
RHS -  bid count bid
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - for(bid = 0; bid < count; bid++){ //NTRATIO6000
***
Line 2
LHS -  for thid
RHS -  thid threadsPerBlock thid
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - for(thid = 0; thid < threadsPerBlock; thid++){  //NTRATIO508
***
Line 3
LHS -  access
RHS -  currKnode bid
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - access = currKnode[bid];
***
Line 4
LHS -  access
RHS -  lastKnode bid
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - access3 = lastKnode[bid];
***
Line 5
LHS -  for i
RHS -  i maxheight i
For Ratio - 2
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - for(i = 0; i < maxheight; i++){ //FRATIO2
***
Line 6
LHS -  accessKnode
RHS -  knodes access
For Ratio - 2
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - *accessKnode = knodes[access];
***
Line 7
LHS - 
RHS -  accessKnode keys thid start bid accessKnode keys thid start bid
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 5
Cycles    - 0
Line	     - if((accessKnode.keys[thid] <= start[bid]) && (accessKnode.keys[thid+1] > start[bid])){	//taken for less than 1% of the iterations of threadsPerBlock //BRATIO0.01
***
Line 8
LHS - 
RHS -  knodes access indices thid knodes elem
For Ratio - 1
If  Ratio - 0.01
Scope     - For
ScopeId   - 6
Cycles    - 0
Line	     - if(knodes[access].indices[thid] < knodes_elem){		//only taken once for every iteration of maxheight  //BRATIO0.5 //BRATIO0.01
***
Line 9
LHS -  offset
RHS -  knodes access indices thid bid
For Ratio - 1
If  Ratio - 0.005
Scope     - For
ScopeId   - 6
Cycles    - 2
Line	     - offset[bid] = knodes[access].indices[thid];
***
Line 10
LHS - 
RHS -  knodes access keys thid end bid knodes access keys thid end bid
For Ratio - 1
If  Ratio - 0.005
Scope     - For
ScopeId   - 5
Cycles    - 0
Line	     - if((knodes[access3].keys[thid] <= end[bid]) && (knodes[access3].keys[thid+1] > end[bid])){	//taken for less than 1% of the iterations of threadsPerBlock #BRATIO0.01
***
Line 11
LHS - 
RHS -  knodes access indices thid knodes elem
For Ratio - 1
If  Ratio - 0.01
Scope     - For
ScopeId   - 6
Cycles    - 0
Line	     - if(knodes[access3].indices[thid] < knodes_elem){		//only taken once for every iteration of maxheight //BRATIO0.01 BRATIO0.5
***
Line 12
LHS -  offset
RHS -  knodes access indices thid bid
For Ratio - 1
If  Ratio - 0.005
Scope     - For
ScopeId   - 6
Cycles    - 2
Line	     - offset_2[bid] = knodes[access3].indices[thid];
***
Line 13
LHS -  currKnode
RHS -  offset bid
For Ratio - 1
If  Ratio - 0.005
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - currKnode[bid] = offset[bid];
***
Line 14
LHS -  lastKnode
RHS -  offset bid
For Ratio - 1
If  Ratio - 0.005
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - lastKnode[bid] = offset_2[bid];
***
Line 15
LHS -  access
RHS -  currKnode bid
For Ratio - 1
If  Ratio - 0.005
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - access2 = currKnode[bid];
***
Line 16
LHS -  for thid
RHS -  thid threadsPerBlock thid
For Ratio - 1
If  Ratio - 0.005
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - for(thid = 0; thid < threadsPerBlock; thid++){
***
Line 17
LHS - 
RHS -  knodes access keys thid start bid
For Ratio - 1
If  Ratio - 0.005
Scope     - For
ScopeId   - 4
Cycles    - 3
Line	     - if(knodes[access2].keys[thid] == start[bid]){				//only taken once for each iteration of count //BRATIO0.0001
***
Line 18
LHS -  recstart
RHS -  knodes access indices thid bid
For Ratio - 1
If  Ratio - 0.0001
Scope     - For
ScopeId   - 4
Cycles    - 2
Line	     - recstart[bid] = knodes[access2].indices[thid];
***
Line 19
LHS -  access
RHS -  lastKnode bid
For Ratio - 1
If  Ratio - 0.0001
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - access4 = lastKnode[bid];
***
Line 20
LHS -  for thid
RHS -  thid threadsPerBlock thid
For Ratio - 1
If  Ratio - 0.0001
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - for(thid = 0; thid < threadsPerBlock; thid++){
***
Line 21
LHS - 
RHS -  knodes access keys thid end bid
For Ratio - 1
If  Ratio - 0.0001
Scope     - For
ScopeId   - 4
Cycles    - 3
Line	     - if(knodes[access4].keys[thid] == end[bid]){				//only taken once for each iteration of count //BRATIO0.0001
***
Line 22
LHS -  reclength
RHS -  knodes access indices thid recstart bid
For Ratio - 1
If  Ratio - 0.0001
Scope     - For
ScopeId   - 4
Cycles    - 4
Line	     - reclength[bid] = knodes[access4].indices[thid] - recstart[bid]+1;
***
***********


TotalTranscendentals - 0
TotalArithmeticInstructions - 14.0555
NumLoadOperations - 7.1108
NumStoreOperations - 1.0303
NumOffsetAccesses -  0
NumIndirectAccesses -  0
NumDoubleAccesses -  0
CriticalPath -  3
nThreadsCount -  3048000
instCountWithFRatio -  59
ninst       -  22.1966
ilp16k       -  22.1046036789
ilp32       -  7.20451000002
ilpRate       -  3.0681619817


######################################################
Transcendental Ratio - L
Arithmetic Intensity - M
Global Memory Operation - H
BranchDivergence - L 0.32
ControlDensity -  H
Floating Point Mul/Div - L
Total Instruction - L
Num Threads - 3048000
Critical Path - L
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test5.txt
int nelr = 97046;

[]
int NVAR = 5;

[]
float variables[nelr*NVAR], ff_variable[NVAR];

[]


[]
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
for(int i = 0; i < nelr; i++){ //NTRATIO97046

scope - pushing For
For count stack - pushing 1
['NTRATIO97046']
['97046']
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
31   /
32   /
30    
 0; i < nelr; i++){
match
i < nelr; i++){
/NTRATIO97046

Division Found
####
32   /
33   N
31   /

NTRATIO97046

generateAST for for(int i = 0; i < nelr; i++){ //NTRATIO97046
This line is a for
extractEveryVariable
Inserting - for(int i = 0; i < nelr; i++){ //NTRATIO97046
    variables[i*NVAR + 0] = ff_variable[0];

[]
['*', '+']
[]
2
TotalArithmeticInstructions  4
1
1
TotalArithmeticInstructions  2
offset pattern is
i*NVAR + 0
and extracted value is
[' 0']
Offset is
0
Offset is a int with number <=2
Checking double store operation
13   [
12   s
    variables
match
variables
Found variable in List!
Checking double store operation - Done
####
15   *
16   N
14   i

NVAR + 0] = ff_variable[0];

match
NVAR
20    
generateAST for variables[i*NVAR + 0] = ff_variable[0];
variables[i*NVAR + 0] = ff_variable[0];
variables[i*NVAR + 0] = ff_variable[0];
variables[i*NVAR + 0] = ff_variable[0];
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#=#1#;
1=1
Time Taken 1

extractEveryVariable
Inserting - variables[i*NVAR + 0] = ff_variable[0];
    variables[i*NVAR + 1] = ff_v[1];

[]
['*', '+']
[]
2
TotalArithmeticInstructions  4
1
1
TotalArithmeticInstructions  2
offset pattern is
i*NVAR + 1
and extracted value is
[' 1']
Offset is
1
Offset is a int with number <=2
Checking double store operation
13   [
12   s
    variables
match
variables
Found variable in List!
Checking double store operation - Done
####
15   *
16   N
14   i

NVAR + 1] = ff_v[1];

match
NVAR
20    
generateAST for variables[i*NVAR + 1] = ff_v[1];
variables[i*NVAR + 1] = ff_v[1];
variables[i*NVAR + 1] = ff_v[1];
variables[i*NVAR + 1] = ff_v[1];
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#=#1#;
1=1
Time Taken 1

extractEveryVariable
Inserting - variables[i*NVAR + 1] = ff_v[1];
    variables[i*NVAR + 2] = ff_variable[2];

[]
['*', '+']
[]
2
TotalArithmeticInstructions  4
1
1
TotalArithmeticInstructions  2
offset pattern is
i*NVAR + 2
and extracted value is
[' 2']
Offset is
2
Offset is a int with number <=2
Checking double store operation
13   [
12   s
    variables
match
variables
Found variable in List!
Checking double store operation - Done
####
15   *
16   N
14   i

NVAR + 2] = ff_variable[2];

match
NVAR
20    
generateAST for variables[i*NVAR + 2] = ff_variable[2];
variables[i*NVAR + 2] = ff_variable[2];
variables[i*NVAR + 2] = ff_variable[2];
variables[i*NVAR + 2] = ff_variable[2];
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#=#1#;
1=1
Time Taken 1

extractEveryVariable
Inserting - variables[i*NVAR + 2] = ff_variable[2];
    variables[i*NVAR + 3] = ff_variable[3];

[]
['*', '+']
[]
2
TotalArithmeticInstructions  4
1
1
TotalArithmeticInstructions  2
offset pattern is
i*NVAR + 3
and extracted value is
[' 3']
Offset is
3
Offset is a int with number <=2
Checking double store operation
13   [
12   s
    variables
match
variables
Found variable in List!
Checking double store operation - Done
####
15   *
16   N
14   i

NVAR + 3] = ff_variable[3];

match
NVAR
20    
generateAST for variables[i*NVAR + 3] = ff_variable[3];
variables[i*NVAR + 3] = ff_variable[3];
variables[i*NVAR + 3] = ff_variable[3];
variables[i*NVAR + 3] = ff_variable[3];
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#=#1#;
1=1
Time Taken 1

extractEveryVariable
Inserting - variables[i*NVAR + 3] = ff_variable[3];
    variables[i*NVAR + 4] = ff_variable[4];

[]
['*', '+']
[]
2
TotalArithmeticInstructions  4
1
1
TotalArithmeticInstructions  2
offset pattern is
i*NVAR + 4
and extracted value is
[' 4']
Offset is
4
Offset is a int with number <=2
Checking double store operation
13   [
12   s
    variables
match
variables
Found variable in List!
Checking double store operation - Done
####
15   *
16   N
14   i

NVAR + 4] = ff_variable[4];

match
NVAR
20    
generateAST for variables[i*NVAR + 4] = ff_variable[4];
variables[i*NVAR + 4] = ff_variable[4];
variables[i*NVAR + 4] = ff_variable[4];
variables[i*NVAR + 4] = ff_variable[4];
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#=#1#;
1=1
Time Taken 1

extractEveryVariable
Inserting - variables[i*NVAR + 4] = ff_variable[4];
}

Scope Found For, popping, New Length 1
[]
[]
[]
0
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Annotation End Found
ILP!!!
******
0
variables[i*NVAR + 0] = ff_variable[0];
[]
[]
1
1
1


1
variables[i*NVAR + 1] = ff_v[1];
[]
[]
1
1
1


2
variables[i*NVAR + 2] = ff_variable[2];
[]
[]
1
1
1


3
variables[i*NVAR + 3] = ff_variable[3];
[]
[]
1
1
1


4
variables[i*NVAR + 4] = ff_variable[4];
[]
[]
1
1
1


******
Node 0's -
[0, 1, 2, 3, 4]
DFS Stack - pushing 0
[1, -999, -999, -999, -999]
DFS Stack - pushing 1
[-999, 1, -999, -999, -999]
DFS Stack - pushing 2
[-999, -999, 1, -999, -999]
DFS Stack - pushing 3
[-999, -999, -999, 1, -999]
DFS Stack - pushing 4
[-999, -999, -999, -999, 1]
[1, 1, 1, 1, 1]
######################################################
**********
The values of this entry are
Name                 -  i
Scope                -  For
varType              -  0
size                 -  1
value                -  0
iteratorVar          -  True
**********
The values of this entry are
Name                 -  NVAR
Scope                -  Global
varType              -  0
size                 -  1
value                -  5
iteratorVar          -  False
**********
The values of this entry are
Name                 -  variables
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  nelr
Scope                -  Global
varType              -  0
size                 -  1
value                -  97046
iteratorVar          -  False
**********
***********
Line 1
LHS -  for i
RHS -  i nelr i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - for(int i = 0; i < nelr; i++){ //NTRATIO97046
***
Line 2
LHS -  variables
RHS -  ff variable NVAR i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - variables[i*NVAR + 0] = ff_variable[0];
***
Line 3
LHS -  variables
RHS -  ff v NVAR i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - variables[i*NVAR + 1] = ff_v[1];
***
Line 4
LHS -  variables
RHS -  ff variable NVAR i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - variables[i*NVAR + 2] = ff_variable[2];
***
Line 5
LHS -  variables
RHS -  ff variable NVAR i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - variables[i*NVAR + 3] = ff_variable[3];
***
Line 6
LHS -  variables
RHS -  ff variable NVAR i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - variables[i*NVAR + 4] = ff_variable[4];
***
***********


TotalTranscendentals - 0
TotalArithmeticInstructions - 2
NumLoadOperations - 5
NumStoreOperations - 5
NumOffsetAccesses -  0
NumIndirectAccesses -  0
NumDoubleAccesses -  0
CriticalPath -  1
nThreadsCount -  97046
instCountWithFRatio -  0
ninst       -  12
ilp16k       -  11
ilp32       -  10
ilpRate       -  1


######################################################
Transcendental Ratio - L
Arithmetic Intensity - L
Global Memory Operation - H
BranchDivergence - L 0
ControlDensity -  L
Floating Point Mul/Div - L
Total Instruction - L
Num Threads - 97046
Critical Path - L
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test6.txt
truct float3 { float x, y, z; };

scope - pushing struct/class
[]
iterations = 2000;

[]
nelr = 97046;

[]
NVAR = 5;

[]
GAMMA = 1.4;

[]
VAR_MOMENTUM = 1;

[]
VAR_DENSITY = 0;

[]
VAR_DENSITY_ENERGY = 4;

[]
float variables[nelr*NVAR], ff_variable[NVAR], step_factors[nelr], areas[nelr];

[]


[]


[]
for(int iter=0; iter < iterations; iter++){

scope - pushing For
For count stack - pushing 1
[]
    for(int i = 0; i < nelr*NVAR; i++){

scope - pushing For
For count stack - pushing 1
[]
        old_variables[i] = variables[i];

[]
    }

[]


[]
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
    for(int i = 0; i < nelr; i++){ //NTRATIO97046

scope - pushing For
For count stack - pushing 1
['NTRATIO97046']
['97046']
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
35   /
36   /
34    
 0; i < nelr; i++){
match
i < nelr; i++){
/NTRATIO97046

Division Found
####
36   /
37   N
35   /

NTRATIO97046

generateAST for for(int i = 0; i < nelr; i++){ //NTRATIO97046
This line is a for
extractEveryVariable
Inserting - for(int i = 0; i < nelr; i++){ //NTRATIO97046
        float density = variables[NVAR*i + VAR_DENSITY];

[]
['*', '+']
[]
2
TotalArithmeticInstructions  4
1
1
TotalArithmeticInstructions  2
offset pattern is
NVAR*i + VAR_DENSITY
and extracted value is
[' VAR_DENSITY']
Offset is
VAR_DENSITY
1. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- float density = variables[NVAR*i + VAR_DENSITY];

Checking double store operation
Checking double store operation - Done
####
38   *
39   i
37   R
 variables[NVAR
match
variables[NVAR
i + VAR_DENSITY];

match
i
40    
generateAST for float density = variables[NVAR*i + VAR_DENSITY];
float density = variables[NVAR*i + VAR_DENSITY];
float density = variables[NVAR*i + VAR_DENSITY];
float density = variables[NVAR*i + VAR_DENSITY];
float density = #1#;
float density = #1#;
float density = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - float density = variables[NVAR*i + VAR_DENSITY];
        float3 momentum;

[]
[]
[]
0
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
generateAST for float3 momentum;
float3 momentum;
float3 momentum;
float3 momentum;
float3 momentum;
float3 momentum;
float3 momentum;
#0# #0#;
#0#   #0# ; 
#0#   #0# ; 
#0#   #0# ; 
#0##0#;
00
This line does not have an =
extractEveryVariable
Inserting - float3 momentum;
        momentum.x = variables[NVAR*i + (VAR_MOMENTUM+0)];

[]
['*', '+', '+']
[]
3
TotalArithmeticInstructions  5
1
1
TotalArithmeticInstructions  3
offset pattern is
NVAR*i + (VAR_MOMENTUM+0)
and extracted value is
[' (VAR_MOMENTUM+0)']
Offset is
(VAR_MOMENTUM+0)
2. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- momentum.x = variables[NVAR*i + (VAR_MOMENTUM+0)];

Checking double store operation
Checking double store operation - Done
####
35   *
36   i
34   R
 variables[NVAR
match
variables[NVAR
i + (VAR_MOMENTUM+0)];

match
i
37    
generateAST for momentum.x = variables[NVAR*i + (VAR_MOMENTUM+0)];
momentum.x = variables[NVAR*i + (VAR_MOMENTUM+0)];
momentum.x = variables[NVAR*i + (VAR_MOMENTUM+0)];
momentum.x = variables[NVAR*i + (VAR_MOMENTUM+0)];
momentum.x = #1#;
momentum.x = #1#;
momentum.x = #1#;
#0#.#0# = #1#;
#0#.#0#    =    #1# ; 
#0#.#0#    =    #1# ; 
#0#.#0#    =    #1# ; 
#0#.#0#=#1#;
0.0=1
Time Taken 1

extractEveryVariable
Inserting - momentum.x = variables[NVAR*i + (VAR_MOMENTUM+0)];
        momentum.y = variables[NVAR*i + (VAR_MOMENTUM+1)];

[]
['*', '+', '+']
[]
3
TotalArithmeticInstructions  6
1
1
TotalArithmeticInstructions  4
offset pattern is
NVAR*i + (VAR_MOMENTUM+1)
and extracted value is
[' (VAR_MOMENTUM+1)']
Offset is
(VAR_MOMENTUM+1)
3. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- momentum.y = variables[NVAR*i + (VAR_MOMENTUM+1)];

Checking double store operation
Checking double store operation - Done
####
35   *
36   i
34   R
 variables[NVAR
match
variables[NVAR
i + (VAR_MOMENTUM+1)];

match
i
37    
generateAST for momentum.y = variables[NVAR*i + (VAR_MOMENTUM+1)];
momentum.y = variables[NVAR*i + (VAR_MOMENTUM+1)];
momentum.y = variables[NVAR*i + (VAR_MOMENTUM+1)];
momentum.y = variables[NVAR*i + (VAR_MOMENTUM+1)];
momentum.y = #1#;
momentum.y = #1#;
momentum.y = #1#;
#0#.#0# = #1#;
#0#.#0#    =    #1# ; 
#0#.#0#    =    #1# ; 
#0#.#0#    =    #1# ; 
#0#.#0#=#1#;
0.0=1
Time Taken 1

extractEveryVariable
Inserting - momentum.y = variables[NVAR*i + (VAR_MOMENTUM+1)];
        momentum.z = variables[NVAR*i + (VAR_MOMENTUM+2)];

[]
['*', '+', '+']
[]
3
TotalArithmeticInstructions  7
1
1
TotalArithmeticInstructions  5
offset pattern is
NVAR*i + (VAR_MOMENTUM+2)
and extracted value is
[' (VAR_MOMENTUM+2)']
Offset is
(VAR_MOMENTUM+2)
4. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- momentum.z = variables[NVAR*i + (VAR_MOMENTUM+2)];

Checking double store operation
Checking double store operation - Done
####
35   *
36   i
34   R
 variables[NVAR
match
variables[NVAR
i + (VAR_MOMENTUM+2)];

match
i
37    
generateAST for momentum.z = variables[NVAR*i + (VAR_MOMENTUM+2)];
momentum.z = variables[NVAR*i + (VAR_MOMENTUM+2)];
momentum.z = variables[NVAR*i + (VAR_MOMENTUM+2)];
momentum.z = variables[NVAR*i + (VAR_MOMENTUM+2)];
momentum.z = #1#;
momentum.z = #1#;
momentum.z = #1#;
#0#.#0# = #1#;
#0#.#0#    =    #1# ; 
#0#.#0#    =    #1# ; 
#0#.#0#    =    #1# ; 
#0#.#0#=#1#;
0.0=1
Time Taken 1

extractEveryVariable
Inserting - momentum.z = variables[NVAR*i + (VAR_MOMENTUM+2)];
 

[]
[]
[]
0
TotalArithmeticInstructions  5
0
0
TotalArithmeticInstructions  5
generateAST for 












This line does not have an =
extractEveryVariable
        float density_energy = variables[NVAR*i + VAR_DENSITY_ENERGY];

[]
['*', '+']
[]
2
TotalArithmeticInstructions  7
1
1
TotalArithmeticInstructions  5
offset pattern is
NVAR*i + VAR_DENSITY_ENERGY
and extracted value is
[' VAR_DENSITY_ENERGY']
Offset is
VAR_DENSITY_ENERGY
5. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- float density_energy = variables[NVAR*i + VAR_DENSITY_ENERGY];

Checking double store operation
Checking double store operation - Done
####
45   *
46   i
44   R
 variables[NVAR
match
variables[NVAR
i + VAR_DENSITY_ENERGY];

match
i
47    
generateAST for float density_energy = variables[NVAR*i + VAR_DENSITY_ENERGY];
float density_energy = variables[NVAR*i + VAR_DENSITY_ENERGY];
float density_energy = variables[NVAR*i + VAR_DENSITY_ENERGY];
float density_energy = variables[NVAR*i + VAR_DENSITY_ENERGY];
float density_energy = #1#;
float density_energy = #1#;
float density_energy = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - float density_energy = variables[NVAR*i + VAR_DENSITY_ENERGY];
 

[]
[]
[]
0
TotalArithmeticInstructions  5
0
0
TotalArithmeticInstructions  5
generateAST for 












This line does not have an =
extractEveryVariable
        float3 velocity;

[]
[]
[]
0
TotalArithmeticInstructions  5
0
0
TotalArithmeticInstructions  5
generateAST for float3 velocity;
float3 velocity;
float3 velocity;
float3 velocity;
float3 velocity;
float3 velocity;
float3 velocity;
#0# #0#;
#0#   #0# ; 
#0#   #0# ; 
#0#   #0# ; 
#0##0#;
00
This line does not have an =
extractEveryVariable
Inserting - float3 velocity;
        velocity.x = momentum.x / density;

[]
['/']
[]
1
TotalArithmeticInstructions  6
0
0
TotalArithmeticInstructions  6
Division Found
####
32   /
33    
31    
 momentum.x
 density;

generateAST for velocity.x = momentum.x / density;
velocity.x = momentum.x / density;
velocity.x = momentum.x / density;
velocity.x = momentum.x / density;
velocity.x = momentum.x / density;
velocity.x = momentum.x / density;
velocity.x = momentum.x / density;
#0#.#0# = #0#.#0# / #0#;
#0#.#0#    =    #0#.#0#    /    #0# ; 
#0#.#0#    =    #0#.#0#    /    #0# ; 
#0#.#0#    =    #0#.#0#    /    #0# ; 
#0#.#0#=#0#.#0#/#0#;
0.0=0.0/0
Time Taken 2

extractEveryVariable
Inserting - velocity.x = momentum.x / density;
        velocity.y = momentum.y / density;

[]
['/']
[]
1
TotalArithmeticInstructions  7
0
0
TotalArithmeticInstructions  7
Division Found
####
32   /
33    
31    
 momentum.y
 density;

generateAST for velocity.y = momentum.y / density;
velocity.y = momentum.y / density;
velocity.y = momentum.y / density;
velocity.y = momentum.y / density;
velocity.y = momentum.y / density;
velocity.y = momentum.y / density;
velocity.y = momentum.y / density;
#0#.#0# = #0#.#0# / #0#;
#0#.#0#    =    #0#.#0#    /    #0# ; 
#0#.#0#    =    #0#.#0#    /    #0# ; 
#0#.#0#    =    #0#.#0#    /    #0# ; 
#0#.#0#=#0#.#0#/#0#;
0.0=0.0/0
Time Taken 2

extractEveryVariable
Inserting - velocity.y = momentum.y / density;
        velocity.z = momentum.z / density;

[]
['/']
[]
1
TotalArithmeticInstructions  8
0
0
TotalArithmeticInstructions  8
Division Found
####
32   /
33    
31    
 momentum.z
 density;

generateAST for velocity.z = momentum.z / density;
velocity.z = momentum.z / density;
velocity.z = momentum.z / density;
velocity.z = momentum.z / density;
velocity.z = momentum.z / density;
velocity.z = momentum.z / density;
velocity.z = momentum.z / density;
#0#.#0# = #0#.#0# / #0#;
#0#.#0#    =    #0#.#0#    /    #0# ; 
#0#.#0#    =    #0#.#0#    /    #0# ; 
#0#.#0#    =    #0#.#0#    /    #0# ; 
#0#.#0#=#0#.#0#/#0#;
0.0=0.0/0
Time Taken 2

extractEveryVariable
Inserting - velocity.z = momentum.z / density;
 

[]
[]
[]
0
TotalArithmeticInstructions  8
0
0
TotalArithmeticInstructions  8
generateAST for 












This line does not have an =
extractEveryVariable
        float speed_sqd = velocity.x*velocity.x + velocity.y*velocity.y + velocity.z*velocity.z;

[]
['*', '+', '*', '+', '*']
[]
5
TotalArithmeticInstructions  13
0
0
TotalArithmeticInstructions  13
####
36   *
37   v
35   x
 velocity.x
match
velocity.x
velocity.x + velocity.y*velocity.y + velocity.z*velocity.z;

match
velocity.x
47    
####
60   *
61   v
59   y
 + velocity.y
match
velocity.y
velocity.y + velocity.z*velocity.z;

match
velocity.y
71    
####
84   *
85   v
83   z
 + velocity.z
match
velocity.z
velocity.z;

generateAST for float speed_sqd = velocity.x*velocity.x + velocity.y*velocity.y + velocity.z*velocity.z;
float speed_sqd = velocity.x*velocity.x + velocity.y*velocity.y + velocity.z*velocity.z;
float speed_sqd = velocity.x*velocity.x + velocity.y*velocity.y + velocity.z*velocity.z;
float speed_sqd = velocity.x*velocity.x + velocity.y*velocity.y + velocity.z*velocity.z;
float speed_sqd = velocity.x*velocity.x + velocity.y*velocity.y + velocity.z*velocity.z;
float speed_sqd = velocity.x*velocity.x + velocity.y*velocity.y + velocity.z*velocity.z;
float speed_sqd = velocity.x*velocity.x + velocity.y*velocity.y + velocity.z*velocity.z;
#0# = #0#.#0#*#0#.#0# + #0#.#0#*#0#.#0# + #0#.#0#*#0#.#0#;
#0#    =    #0#.#0# * #0#.#0#    +    #0#.#0# * #0#.#0#    +    #0#.#0# * #0#.#0# ; 
#0#    =    #0#.#0# * #0#.#0#    +    #0#.#0# * #0#.#0#    +    #0#.#0# * #0#.#0# ; 
#0#    =    #0#.#0# * #0#.#0#    +    #0#.#0# * #0#.#0#    +    #0#.#0# * #0#.#0# ; 
#0#=#0#.#0#*#0#.#0#+#0#.#0#*#0#.#0#+#0#.#0#*#0#.#0#;
0=0.0*0.0+0.0*0.0+0.0*0.0
Time Taken 4

extractEveryVariable
Inserting - float speed_sqd = velocity.x*velocity.x + velocity.y*velocity.y + velocity.z*velocity.z;
        float pressure = (float(GAMMA)-float(1.0f))*(density_energy - float(0.5f)*density*speed_sqd);

[]
['-', '*', '-', '*', '*']
[]
5
TotalArithmeticInstructions  18
0
0
TotalArithmeticInstructions  18
####
51   *
52   (
50   )
(1.0f)
match
1.0f)
(density_energy - float(0.5f)*density*speed_sqd);

match
density_energy
67    
####
81   *
82   d
80   )
(0.5f
match
0.5f
density*speed_sqd);

match
density
89   *
####
89   *
90   s
88   y

speed_sqd);

match
speed_sqd
99   )
generateAST for float pressure = (float(GAMMA)-float(1.0f))*(density_energy - float(0.5f)*density*speed_sqd);
float pressure = (float(GAMMA)-float(1.0f))*(density_energy - float(0.5f)*density*speed_sqd);
float pressure = (float(GAMMA)-float(1.0f))*(density_energy - float(0.5f)*density*speed_sqd);
float pressure = (float(GAMMA)-float(1.0f))*(density_energy - float(0.5f)*density*speed_sqd);
float pressure = (float(GAMMA)-float(1.0f))*(density_energy - float(0.5f)*density*speed_sqd);
float pressure = (float(GAMMA)-float(1.0f))*(density_energy - float(0.5f)*density*speed_sqd);
float pressure = (float(GAMMA)-float(1.0f))*(density_energy - float(0.5f)*density*speed_sqd);
#0# = (#0#(#0#)-#0#(#0#))*(#0# - #0#(#0#)*#0#*#0#);
#0#    =     ( #0# ( #0# )  - #0# ( #0# )  )  *  ( #0#    -    #0# ( #0# )  * #0# * #0# )  ; 
#0#    =     ( #0# ( #0# )  - #0# ( #0# )  )  *  ( #0#    -    #0# ( #0# )  * #0# * #0# )  ; 
#0#    =     ( #0# ( #0# )  - #0# ( #0# )  )  *  ( #0#    -    #0# ( #0# )  * #0# * #0# )  ; 
#0#=(#0#(#0#)-#0#(#0#))*(#0#-#0#(#0#)*#0#*#0#);
0=(0(0)-0(0))*(0-0(0)*0*0)
Time Taken 4

extractEveryVariable
Inserting - float pressure = (float(GAMMA)-float(1.0f))*(density_energy - float(0.5f)*density*speed_sqd);
        float speed_of_sound = sqrtf(float(GAMMA)*pressure/density);

[]
['*', '/']
[]
2
TotalArithmeticInstructions  20
0
0
TotalArithmeticInstructions  20
####
49   *
50   p
48   )
(GAMMA
match
GAMMA
pressure/density);

match
pressure
58   /
Division Found
####
58   /
59   d
57   e
 sqrtf(float(GAMMA)*pressure
match
float(GAMMA)*pressure
density);

match
density
66   )
generateAST for float speed_of_sound = sqrtf(float(GAMMA)*pressure/density);
float speed_of_sound = sqrtf(float(GAMMA)*pressure/density);
float speed_of_sound = sqrtf(float(GAMMA)*pressure/density);
float speed_of_sound = sqrtf(float(GAMMA)*pressure/density);
float speed_of_sound = sqrtf(float(GAMMA)*pressure/density);
float speed_of_sound = sqrtf(float(GAMMA)*pressure/density);
float speed_of_sound = sqrtf(float(GAMMA)*pressure/density);
#0#_#0# = #0#(#0#(#0#)*#0#/#0#);
#0# _ #0#    =    #0# ( #0# ( #0# )  * #0# / #0# )  ; 
#0# _ #0#    =    #0# ( #0# ( #0# )  * #0# / #0# )  ; 
#0# _ #0#    =    #0# ( #0# ( #0# )  * #0# / #0# )  ; 
#0#_#0#=#0#(#0#(#0#)*#0#/#0#);
0_0=0(0(0)*0/0)
Time Taken 3

extractEveryVariable
Inserting - float speed_of_sound = sqrtf(float(GAMMA)*pressure/density);
        step_factors[i] = float(0.5f) / (sqrtf(areas[i]) * (sqrtf(speed_sqd) + speed_of_sound));

[]
['/', '*', '+']
[]
3
TotalArithmeticInstructions  23
0
0
TotalArithmeticInstructions  23
Checking double store operation
20   [
19   s
        step_factors
match
step_factors
Checking double store operation - Done
####
57   *
58    
56    
(areas
match
areas
 (sqrtf(speed_sqd) + speed_of_sound));

match
sqrtf(speed_sqd
75   )
Division Found
####
38   /
39    
37    
(0.5f
match
0.5f
 (sqrtf(areas[i]) * (sqrtf(speed_sqd) + speed_of_sound));

match
sqrtf(areas
52   [
55
generateAST for step_factors[i] = float(0.5f) / (sqrtf(areas[i]) * (sqrtf(speed_sqd) + speed_of_sound));
step_factors[i] = float(0.5f) / (sqrtf(areas[i]) * (sqrtf(speed_sqd) + speed_of_sound));
step_factors[i] = float(0.5f) / (sqrtf(areas[i]) * (sqrtf(speed_sqd) + speed_of_sound));
step_factors[i] = float(0.5f) / (sqrtf(areas[i]) * (sqrtf(speed_sqd) + speed_of_sound));
#1# = float(0.5f) / (sqrtf(#1#) * (sqrtf(speed_sqd) + speed_of_sound));
#1# = float(0.5f) / (sqrtf(#1#) * (sqrtf(speed_sqd) + speed_of_sound));
#1# = float(0.5f) / (sqrtf(#1#) * (sqrtf(speed_sqd) + speed_of_sound));
#1# = #0#(#0#) / (#0#(#1#) * (#0#(#0#) + #0#_#0#));
#1#    =    #0# ( #0# )     /     ( #0# ( #1# )     *     ( #0# ( #0# )     +    #0# _ #0# )  )  ; 
#1#    =    #0# ( #0# )     /     ( #0# ( #1# )     *     ( #0# ( #0# )     +    #0# _ #0# )  )  ; 
#1#    =    #0# ( #0# )     /     ( #0# ( #1# )     *     ( #0# ( #0# )     +    #0# _ #0# )  )  ; 
#1#=#0#(#0#)/(#0#(#1#)*(#0#(#0#)+#0#_#0#));
1=0(0)/(0(1)*(0(0)+0_0))
Time Taken 4

extractEveryVariable
Inserting - step_factors[i] = float(0.5f) / (sqrtf(areas[i]) * (sqrtf(speed_sqd) + speed_of_sound));
    }

Scope Found For, popping, New Length 3
[]
[]
[]
0
TotalArithmeticInstructions  23
0
0
TotalArithmeticInstructions  23
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  23
0
0
TotalArithmeticInstructions  23
Annotation End Found
ILP!!!
******
0
float density = variables[NVAR*i + VAR_DENSITY];
[]
[7, 8, 9, 11, 12]
1
1
1


1
float3 momentum;
[]
[]
0
1
1


2
momentum.x = variables[NVAR*i + (VAR_MOMENTUM+0)];
[]
[7, 8, 9]
1
1
1


3
momentum.y = variables[NVAR*i + (VAR_MOMENTUM+1)];
[]
[7, 8, 9]
1
1
1


4
momentum.z = variables[NVAR*i + (VAR_MOMENTUM+2)];
[]
[7, 8, 9]
1
1
1


5
float density_energy = variables[NVAR*i + VAR_DENSITY_ENERGY];
[]
[7, 8, 9, 11, 12]
1
1
1


6
float3 velocity;
[]
[]
0
1
1


7
velocity.x = momentum.x / density;
[0, 2, 3, 4, 5]
[10]
2
1
1


8
velocity.y = momentum.y / density;
[0, 2, 3, 4, 5]
[10]
2
1
1


9
velocity.z = momentum.z / density;
[0, 2, 3, 4, 5]
[10]
2
1
1


10
float speed_sqd = velocity.x*velocity.x + velocity.y*velocity.y + velocity.z*velocity.z;
[7, 8, 9]
[11, 13]
4
1
1


11
float pressure = (float(GAMMA)-float(1.0f))*(density_energy - float(0.5f)*density*speed_sqd);
[0, 5, 10]
[12]
4
1
1


12
float speed_of_sound = sqrtf(float(GAMMA)*pressure/density);
[0, 5, 11]
[13]
3
1
1


13
step_factors[i] = float(0.5f) / (sqrtf(areas[i]) * (sqrtf(speed_sqd) + speed_of_sound));
[10, 12]
[]
4
1
1


******
Node 0's -
[0, 1, 2, 3, 4, 5, 6]
DFS Stack - pushing 0
[1, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 7
(0,1)
(7,2)
3
Selected!
DFS Stack - pushing 8
(0,1)
(8,2)
3
Selected!
DFS Stack - pushing 9
(0,1)
(9,2)
3
Selected!
DFS Stack - pushing 11
(0,1)
(11,4)
5
Selected!
DFS Stack - pushing 12
(0,1)
(12,3)
4
Selected!
[1, -999, -999, -999, -999, -999, -999, 3, 3, 3, -999, 5, 4, -999]
DFS Stack - pushing 13
(12,4)
(13,4)
8
Selected!
[1, -999, -999, -999, -999, -999, -999, 3, 3, 3, -999, 5, 4, 8]
[1, -999, -999, -999, -999, -999, -999, 3, 3, 3, -999, 5, 4, 8]
[1, -999, -999, -999, -999, -999, -999, 3, 3, 3, -999, 5, 4, 8]
DFS Stack - pushing 10
(9,3)
(10,4)
7
Selected!
[1, -999, -999, -999, -999, -999, -999, 3, 3, 3, 7, 5, 4, 8]
[1, -999, -999, -999, -999, -999, -999, 3, 3, 3, 7, 5, 4, 8]
[1, -999, -999, -999, -999, -999, -999, 3, 3, 3, 7, 5, 4, 8]
DFS Stack - pushing 1
[-999, 0, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 2
[-999, -999, 1, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 7
(2,1)
(7,2)
3
Selected!
DFS Stack - pushing 8
(2,1)
(8,2)
3
Selected!
DFS Stack - pushing 9
(2,1)
(9,2)
3
Selected!
[-999, -999, 1, -999, -999, -999, -999, 3, 3, 3, -999, -999, -999, -999]
DFS Stack - pushing 10
(9,3)
(10,4)
7
Selected!
[-999, -999, 1, -999, -999, -999, -999, 3, 3, 3, 7, -999, -999, -999]
DFS Stack - pushing 11
(10,7)
(11,4)
11
Selected!
DFS Stack - pushing 13
(10,7)
(13,4)
11
Selected!
[-999, -999, 1, -999, -999, -999, -999, 3, 3, 3, 7, 11, -999, 11]
[-999, -999, 1, -999, -999, -999, -999, 3, 3, 3, 7, 11, -999, 11]
DFS Stack - pushing 12
(11,11)
(12,3)
14
Selected!
[-999, -999, 1, -999, -999, -999, -999, 3, 3, 3, 7, 11, 14, 11]
[-999, -999, 1, -999, -999, -999, -999, 3, 3, 3, 7, 11, 14, 11]
[-999, -999, 1, -999, -999, -999, -999, 3, 3, 3, 7, 11, 14, 11]
DFS Stack - pushing 3
[-999, -999, -999, 1, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 7
(3,1)
(7,2)
3
Selected!
DFS Stack - pushing 8
(3,1)
(8,2)
3
Selected!
DFS Stack - pushing 9
(3,1)
(9,2)
3
Selected!
[-999, -999, -999, 1, -999, -999, -999, 3, 3, 3, -999, -999, -999, -999]
DFS Stack - pushing 10
(9,3)
(10,4)
7
Selected!
[-999, -999, -999, 1, -999, -999, -999, 3, 3, 3, 7, -999, -999, -999]
DFS Stack - pushing 11
(10,7)
(11,4)
11
Selected!
DFS Stack - pushing 13
(10,7)
(13,4)
11
Selected!
[-999, -999, -999, 1, -999, -999, -999, 3, 3, 3, 7, 11, -999, 11]
[-999, -999, -999, 1, -999, -999, -999, 3, 3, 3, 7, 11, -999, 11]
DFS Stack - pushing 12
(11,11)
(12,3)
14
Selected!
[-999, -999, -999, 1, -999, -999, -999, 3, 3, 3, 7, 11, 14, 11]
[-999, -999, -999, 1, -999, -999, -999, 3, 3, 3, 7, 11, 14, 11]
[-999, -999, -999, 1, -999, -999, -999, 3, 3, 3, 7, 11, 14, 11]
DFS Stack - pushing 4
[-999, -999, -999, -999, 1, -999, -999, -999, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 7
(4,1)
(7,2)
3
Selected!
DFS Stack - pushing 8
(4,1)
(8,2)
3
Selected!
DFS Stack - pushing 9
(4,1)
(9,2)
3
Selected!
[-999, -999, -999, -999, 1, -999, -999, 3, 3, 3, -999, -999, -999, -999]
DFS Stack - pushing 10
(9,3)
(10,4)
7
Selected!
[-999, -999, -999, -999, 1, -999, -999, 3, 3, 3, 7, -999, -999, -999]
DFS Stack - pushing 11
(10,7)
(11,4)
11
Selected!
DFS Stack - pushing 13
(10,7)
(13,4)
11
Selected!
[-999, -999, -999, -999, 1, -999, -999, 3, 3, 3, 7, 11, -999, 11]
[-999, -999, -999, -999, 1, -999, -999, 3, 3, 3, 7, 11, -999, 11]
DFS Stack - pushing 12
(11,11)
(12,3)
14
Selected!
[-999, -999, -999, -999, 1, -999, -999, 3, 3, 3, 7, 11, 14, 11]
[-999, -999, -999, -999, 1, -999, -999, 3, 3, 3, 7, 11, 14, 11]
[-999, -999, -999, -999, 1, -999, -999, 3, 3, 3, 7, 11, 14, 11]
DFS Stack - pushing 5
[-999, -999, -999, -999, -999, 1, -999, -999, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 7
(5,1)
(7,2)
3
Selected!
DFS Stack - pushing 8
(5,1)
(8,2)
3
Selected!
DFS Stack - pushing 9
(5,1)
(9,2)
3
Selected!
DFS Stack - pushing 11
(5,1)
(11,4)
5
Selected!
DFS Stack - pushing 12
(5,1)
(12,3)
4
Selected!
[-999, -999, -999, -999, -999, 1, -999, 3, 3, 3, -999, 5, 4, -999]
DFS Stack - pushing 13
(12,4)
(13,4)
8
Selected!
[-999, -999, -999, -999, -999, 1, -999, 3, 3, 3, -999, 5, 4, 8]
[-999, -999, -999, -999, -999, 1, -999, 3, 3, 3, -999, 5, 4, 8]
[-999, -999, -999, -999, -999, 1, -999, 3, 3, 3, -999, 5, 4, 8]
DFS Stack - pushing 10
(9,3)
(10,4)
7
Selected!
[-999, -999, -999, -999, -999, 1, -999, 3, 3, 3, 7, 5, 4, 8]
[-999, -999, -999, -999, -999, 1, -999, 3, 3, 3, 7, 5, 4, 8]
[-999, -999, -999, -999, -999, 1, -999, 3, 3, 3, 7, 5, 4, 8]
DFS Stack - pushing 6
[-999, -999, -999, -999, -999, -999, 0, -999, -999, -999, -999, -999, -999, -999]
[8, 0, 14, 14, 14, 8, 0]
######################################################
**********
The values of this entry are
Name                 -  density
Scope                -  For
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  True
**********
The values of this entry are
Name                 -  i
Scope                -  For
varType              -  0
size                 -  1
value                -  0
iteratorVar          -  True
**********
The values of this entry are
Name                 -  speed_of_sound
Scope                -  For
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  True
**********
The values of this entry are
Name                 -  variables
Scope                -  struct/class
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  iter
Scope                -  For
varType              -  0
size                 -  1
value                -  0
iteratorVar          -  False
**********
The values of this entry are
Name                 -  density_energy
Scope                -  For
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  True
**********
The values of this entry are
Name                 -  speed_sqd
Scope                -  For
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  True
**********
The values of this entry are
Name                 -  x
Scope                -  struct/class
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  pressure
Scope                -  For
varType              -  1
size                 -  1
value                -  1
iteratorVar          -  True
**********
***********
Line 1
LHS -  for i
RHS -  i nelr i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - for(int i = 0; i < nelr; i++){ //NTRATIO97046
***
Line 2
LHS -  density
RHS -  variables NVAR i VAR DENSITY
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - float density = variables[NVAR*i + VAR_DENSITY];
***
Line 3
LHS - 
RHS -  float momentum
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 0
Line	     - float3 momentum;
***
Line 4
LHS -  momentum
RHS -  variables NVAR i VAR MOMENTUM x
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - momentum.x = variables[NVAR*i + (VAR_MOMENTUM+0)];
***
Line 5
LHS -  momentum
RHS -  variables NVAR i VAR MOMENTUM y
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - momentum.y = variables[NVAR*i + (VAR_MOMENTUM+1)];
***
Line 6
LHS -  momentum
RHS -  variables NVAR i VAR MOMENTUM z
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - momentum.z = variables[NVAR*i + (VAR_MOMENTUM+2)];
***
Line 7
LHS -  density
RHS -  variables NVAR i VAR DENSITY ENERGY energy
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - float density_energy = variables[NVAR*i + VAR_DENSITY_ENERGY];
***
Line 8
LHS - 
RHS -  float velocity
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 0
Line	     - float3 velocity;
***
Line 9
LHS -  velocity
RHS -  momentum x density
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 2
Line	     - velocity.x = momentum.x / density;
***
Line 10
LHS -  velocity
RHS -  momentum y density
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 2
Line	     - velocity.y = momentum.y / density;
***
Line 11
LHS -  velocity
RHS -  momentum z density
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 2
Line	     - velocity.z = momentum.z / density;
***
Line 12
LHS -  speed
RHS -  velocity x velocity x velocity y velocity y velocity z velocity z sqd
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 4
Line	     - float speed_sqd = velocity.x*velocity.x + velocity.y*velocity.y + velocity.z*velocity.z;
***
Line 13
LHS -  pressure
RHS -  GAMMA f density energy f density speed sqd
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 4
Line	     - float pressure = (float(GAMMA)-float(1.0f))*(density_energy - float(0.5f)*density*speed_sqd);
***
Line 14
LHS -  speed
RHS -  sqrtf GAMMA pressure density sound of
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 3
Line	     - float speed_of_sound = sqrtf(float(GAMMA)*pressure/density);
***
Line 15
LHS -  step
RHS -  f sqrtf areas i sqrtf speed sqd speed of sound factors
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 4
Line	     - step_factors[i] = float(0.5f) / (sqrtf(areas[i]) * (sqrtf(speed_sqd) + speed_of_sound));
***
***********


TotalTranscendentals - 3
TotalArithmeticInstructions - 23
NumLoadOperations - 6
NumStoreOperations - 1
NumOffsetAccesses -  0
NumIndirectAccesses -  0
NumDoubleAccesses -  0
CriticalPath -  14
nThreadsCount -  97046
instCountWithFRatio -  0
ninst       -  33
ilp16k       -  32
ilp32       -  2
ilpRate       -  16
Warnings!!!!
1. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- float density = variables[NVAR*i + VAR_DENSITY];

2. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- momentum.x = variables[NVAR*i + (VAR_MOMENTUM+0)];

3. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- momentum.y = variables[NVAR*i + (VAR_MOMENTUM+1)];

4. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- momentum.z = variables[NVAR*i + (VAR_MOMENTUM+2)];

5. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- float density_energy = variables[NVAR*i + VAR_DENSITY_ENERGY];



######################################################
Transcendental Ratio - M0.1
Arithmetic Intensity - M
Global Memory Operation - H
BranchDivergence - L 0
ControlDensity -  L
Floating Point Mul/Div - H
Total Instruction - L
Num Threads - 97046
Critical Path - L
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test7.txt
struct float3 { float x, y, z; };

scope - pushing struct
[]
iterations = 2000;

[]
nelr = 97046;

[]
NVAR = 5;

[]
GAMMA = 1.4;

[]
VAR_MOMENTUM = 1;

[]
VAR_DENSITY = 0;

[]
VAR_DENSITY_ENERGY = 4;

[]
float variables[nelr*NVAR]

[]
float old_variables[nelr*NVAR]

[]
float fluxes[nelr*NVAR];

[]
float ff_variable[NVAR], step_factors[nelr], areas[nelr];

[]


[]


[]
for(int iter=0; iter < iterations; iter++){

scope - pushing For
For count stack - pushing 1
[]
    for(int i = 0; i < nelr*NVAR; i++){

scope - pushing For
For count stack - pushing 1
[]
        old_variables[i] = variables[i];

[]
    }

[]
    for(int i = 0; i < nelr; i++){

scope - pushing For
For count stack - pushing 1
[]
        float density = variables[NVAR*i + VAR_DENSITY];

[]
        float3 momentum;

[]
        momentum.x = variables[NVAR*i + (VAR_MOMENTUM+0)];

[]
        momentum.y = variables[NVAR*i + (VAR_MOMENTUM+1)];

[]
        momentum.z = variables[NVAR*i + (VAR_MOMENTUM+2)];

[]


[]
        float density_energy = variables[NVAR*i + VAR_DENSITY_ENERGY];

[]


[]
        float3 velocity;

[]
        velocity.x = momentum.x / density;

[]
        velocity.y = momentum.y / density;

[]
        velocity.z = momentum.z / density;

[]


[]
        float speed_sqd = velocity.x*velocity.x + velocity.y*velocity.y + velocity.z*velocity.z;

[]
        float pressure = (float(GAMMA)-float(1.0f))*(density_energy - float(0.5f)*density*speed_sqd);

[]
        float speed_of_sound = sqrtf(float(GAMMA)*pressure/density);

[]
        step_factors[i] = float(0.5f) / (sqrtf(areas[i]) * (sqrtf(speed_sqd) + speed_of_sound));

[]
    }

[]


[]
    for(int j = 0; j < RK; j++){

scope - pushing For
For count stack - pushing 1
[]
        compute_flux(nelr, elements_surrounding_elements, normals, variables, fluxes);

[]
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
        for(int i = 0; i < nelr; i++){ ##NTRATIO97046

scope - pushing For
For count stack - pushing 1
['NTRATIO97046']
['97046']
['<', '++']
[]
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
generateAST for for(int i = 0; i < nelr; i++){ ##NTRATIO97046
This line is a for
extractEveryVariable
Inserting - for(int i = 0; i < nelr; i++){ ##NTRATIO97046
            float factor = step_factors[i]/float(RK+1-j);

[]
['/', '+', '-']
[]
3
TotalArithmeticInstructions  5
0
0
TotalArithmeticInstructions  5
Checking double store operation
Checking double store operation - Done
Division Found
####
42   /
43   f
41   ]
 step_factors
float(RK+1-j);

match
float(RK
51   +
generateAST for float factor = step_factors[i]/float(RK+1-j);
float factor = step_factors[i]/float(RK+1-j);
float factor = step_factors[i]/float(RK+1-j);
float factor = step_factors[i]/float(RK+1-j);
float factor = #1#/float(RK+1-j);
float factor = #1#/float(RK+1-j);
float factor = #1#/float(RK+1-j);
#0# = #1#/#0#(#0#+1-#0#);
#0#    =    #1# / #0# ( #0# + 1 - #0# )  ; 
#0#    =    #1# / #0# ( #0# + 1 - #0# )  ; 
#0#    =    #1# / #0# ( #0# +#0#- #0# )  ; 
#0#=#1#/#0#(#0#+#0#-#0#);
0=1/0(0+0-0)
Time Taken 3

extractEveryVariable
Inserting - float factor = step_factors[i]/float(RK+1-j);
 

[]
[]
[]
0
TotalArithmeticInstructions  5
0
0
TotalArithmeticInstructions  5
generateAST for 












This line does not have an =
extractEveryVariable
            variables[NVAR*i + VAR_DENSITY] = old_variables[NVAR*i + VAR_DENSITY] + factor*fluxes[NVAR*i + VAR_DENSITY];

[]
['*', '+', '*', '+', '+', '*', '*', '+']
[]
8
TotalArithmeticInstructions  13
3
3
TotalArithmeticInstructions  7
offset pattern is
NVAR*i + VAR_DENSITY
and extracted value is
[' VAR_DENSITY']
Offset is
VAR_DENSITY
1. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- variables[NVAR*i + VAR_DENSITY] = old_variables[NVAR*i + VAR_DENSITY] + factor*fluxes[NVAR*i + VAR_DENSITY];

offset pattern is
NVAR*i + VAR_DENSITY
and extracted value is
[' VAR_DENSITY']
Offset is
VAR_DENSITY
2. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- variables[NVAR*i + VAR_DENSITY] = old_variables[NVAR*i + VAR_DENSITY] + factor*fluxes[NVAR*i + VAR_DENSITY];

offset pattern is
NVAR*i + VAR_DENSITY
and extracted value is
[' VAR_DENSITY']
Offset is
VAR_DENSITY
3. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- variables[NVAR*i + VAR_DENSITY] = old_variables[NVAR*i + VAR_DENSITY] + factor*fluxes[NVAR*i + VAR_DENSITY];

Checking double store operation
21   [
20   s
            variables
match
variables
Found variable in List!
Checking double store operation - Done
####
26   *
27   i
25   R

i + VAR_DENSITY] = old_variables[NVAR*i + VAR_DENSITY] + factor*fluxes[NVAR*i + VAR_DENSITY];

match
i
28    
####
64   *
65   i
63   R
 + VAR_DENSITY] = old_variables[NVAR
match
VAR_DENSITY] = old_variables[NVAR
i + VAR_DENSITY] + factor*fluxes[NVAR*i + VAR_DENSITY];

match
i
66    
####
90   *
91   f
89   r
 + VAR_DENSITY] + factor
match
VAR_DENSITY] + factor
fluxes[NVAR*i + VAR_DENSITY];

match
fluxes
97   [
119
####
102   *
103   i
101   R

i + VAR_DENSITY];

match
i
104    
generateAST for variables[NVAR*i + VAR_DENSITY] = old_variables[NVAR*i + VAR_DENSITY] + factor*fluxes[NVAR*i + VAR_DENSITY];
variables[NVAR*i + VAR_DENSITY] = old_variables[NVAR*i + VAR_DENSITY] + factor*fluxes[NVAR*i + VAR_DENSITY];
variables[NVAR*i + VAR_DENSITY] = old_variables[NVAR*i + VAR_DENSITY] + factor*fluxes[NVAR*i + VAR_DENSITY];
variables[NVAR*i + VAR_DENSITY] = old_variables[NVAR*i + VAR_DENSITY] + factor*fluxes[NVAR*i + VAR_DENSITY];
#1# = #1# + factor*#1#;
#1# = #1# + factor*#1#;
#1# = #1# + factor*#1#;
#1# = #1# + #0#*#1#;
#1#    =    #1#    +    #0# * #1# ; 
#1#    =    #1#    +    #0# * #1# ; 
#1#    =    #1#    +    #0# * #1# ; 
#1#=#1#+#0#*#1#;
1=1+0*1
Time Taken 3

extractEveryVariable
Inserting - variables[NVAR*i + VAR_DENSITY] = old_variables[NVAR*i + VAR_DENSITY] + factor*fluxes[NVAR*i + VAR_DENSITY];
            variables[NVAR*i + VAR_DENSITY_ENERGY] = old_variables[NVAR*i + VAR_DENSITY_ENERGY] + factor*fluxes[NVAR*i + VAR_DENSITY_ENERGY];

[]
['*', '+', '*', '+', '+', '*', '*', '+']
[]
8
TotalArithmeticInstructions  15
3
3
TotalArithmeticInstructions  9
offset pattern is
NVAR*i + VAR_DENSITY_ENERGY
and extracted value is
[' VAR_DENSITY_ENERGY']
Offset is
VAR_DENSITY_ENERGY
4. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- variables[NVAR*i + VAR_DENSITY_ENERGY] = old_variables[NVAR*i + VAR_DENSITY_ENERGY] + factor*fluxes[NVAR*i + VAR_DENSITY_ENERGY];

offset pattern is
NVAR*i + VAR_DENSITY_ENERGY
and extracted value is
[' VAR_DENSITY_ENERGY']
Offset is
VAR_DENSITY_ENERGY
5. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- variables[NVAR*i + VAR_DENSITY_ENERGY] = old_variables[NVAR*i + VAR_DENSITY_ENERGY] + factor*fluxes[NVAR*i + VAR_DENSITY_ENERGY];

offset pattern is
NVAR*i + VAR_DENSITY_ENERGY
and extracted value is
[' VAR_DENSITY_ENERGY']
Offset is
VAR_DENSITY_ENERGY
6. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- variables[NVAR*i + VAR_DENSITY_ENERGY] = old_variables[NVAR*i + VAR_DENSITY_ENERGY] + factor*fluxes[NVAR*i + VAR_DENSITY_ENERGY];

Checking double store operation
21   [
20   s
            variables
match
variables
Found variable in List!
Checking double store operation - Done
####
26   *
27   i
25   R

i + VAR_DENSITY_ENERGY] = old_variables[NVAR*i + VAR_DENSITY_ENERGY] + factor*fluxes[NVAR*i + VAR_DENSITY_ENERGY];

match
i
28    
####
71   *
72   i
70   R
 + VAR_DENSITY_ENERGY] = old_variables[NVAR
match
VAR_DENSITY_ENERGY] = old_variables[NVAR
i + VAR_DENSITY_ENERGY] + factor*fluxes[NVAR*i + VAR_DENSITY_ENERGY];

match
i
73    
####
104   *
105   f
103   r
 + VAR_DENSITY_ENERGY] + factor
match
VAR_DENSITY_ENERGY] + factor
fluxes[NVAR*i + VAR_DENSITY_ENERGY];

match
fluxes
111   [
140
####
116   *
117   i
115   R

i + VAR_DENSITY_ENERGY];

match
i
118    
generateAST for variables[NVAR*i + VAR_DENSITY_ENERGY] = old_variables[NVAR*i + VAR_DENSITY_ENERGY] + factor*fluxes[NVAR*i + VAR_DENSITY_ENERGY];
variables[NVAR*i + VAR_DENSITY_ENERGY] = old_variables[NVAR*i + VAR_DENSITY_ENERGY] + factor*fluxes[NVAR*i + VAR_DENSITY_ENERGY];
variables[NVAR*i + VAR_DENSITY_ENERGY] = old_variables[NVAR*i + VAR_DENSITY_ENERGY] + factor*fluxes[NVAR*i + VAR_DENSITY_ENERGY];
variables[NVAR*i + VAR_DENSITY_ENERGY] = old_variables[NVAR*i + VAR_DENSITY_ENERGY] + factor*fluxes[NVAR*i + VAR_DENSITY_ENERGY];
#1# = #1# + factor*#1#;
#1# = #1# + factor*#1#;
#1# = #1# + factor*#1#;
#1# = #1# + #0#*#1#;
#1#    =    #1#    +    #0# * #1# ; 
#1#    =    #1#    +    #0# * #1# ; 
#1#    =    #1#    +    #0# * #1# ; 
#1#=#1#+#0#*#1#;
1=1+0*1
Time Taken 3

extractEveryVariable
Inserting - variables[NVAR*i + VAR_DENSITY_ENERGY] = old_variables[NVAR*i + VAR_DENSITY_ENERGY] + factor*fluxes[NVAR*i + VAR_DENSITY_ENERGY];
            variables[NVAR*i + 1] = old_variables[NVAR*i + 1] + factor*fluxes[NVAR*i + 1];

[]
['*', '+', '*', '+', '+', '*', '*', '+']
[]
8
TotalArithmeticInstructions  17
3
3
TotalArithmeticInstructions  11
offset pattern is
NVAR*i + 1
and extracted value is
[' 1']
Offset is
1
Offset is a int with number <=2
offset pattern is
NVAR*i + 1
and extracted value is
[' 1']
Offset is
1
Offset is a int with number <=2
offset pattern is
NVAR*i + 1
and extracted value is
[' 1']
Offset is
1
Offset is a int with number <=2
Checking double store operation
21   [
20   s
            variables
match
variables
Found variable in List!
Checking double store operation - Done
####
26   *
27   i
25   R

i + 1] = old_variables[NVAR*i + 1] + factor*fluxes[NVAR*i + 1];

match
i
28    
####
54   *
55   i
53   R
 + 1] = old_variables[NVAR
match
1] = old_variables[NVAR
i + 1] + factor*fluxes[NVAR*i + 1];

match
i
56    
####
70   *
71   f
69   r
 + 1] + factor
match
1] + factor
fluxes[NVAR*i + 1];

match
fluxes
77   [
89
####
82   *
83   i
81   R

i + 1];

match
i
84    
generateAST for variables[NVAR*i + 1] = old_variables[NVAR*i + 1] + factor*fluxes[NVAR*i + 1];
variables[NVAR*i + 1] = old_variables[NVAR*i + 1] + factor*fluxes[NVAR*i + 1];
variables[NVAR*i + 1] = old_variables[NVAR*i + 1] + factor*fluxes[NVAR*i + 1];
variables[NVAR*i + 1] = old_variables[NVAR*i + 1] + factor*fluxes[NVAR*i + 1];
#1# = #1# + factor*#1#;
#1# = #1# + factor*#1#;
#1# = #1# + factor*#1#;
#1# = #1# + #0#*#1#;
#1#    =    #1#    +    #0# * #1# ; 
#1#    =    #1#    +    #0# * #1# ; 
#1#    =    #1#    +    #0# * #1# ; 
#1#=#1#+#0#*#1#;
1=1+0*1
Time Taken 3

extractEveryVariable
Inserting - variables[NVAR*i + 1] = old_variables[NVAR*i + 1] + factor*fluxes[NVAR*i + 1];
            variables[NVAR*i + 2] = old_variables[NVAR*i + 2] + factor*fluxes[NVAR*i + 2];

[]
['*', '+', '*', '+', '+', '*', '*', '+']
[]
8
TotalArithmeticInstructions  19
3
3
TotalArithmeticInstructions  13
offset pattern is
NVAR*i + 2
and extracted value is
[' 2']
Offset is
2
Offset is a int with number <=2
offset pattern is
NVAR*i + 2
and extracted value is
[' 2']
Offset is
2
Offset is a int with number <=2
offset pattern is
NVAR*i + 2
and extracted value is
[' 2']
Offset is
2
Offset is a int with number <=2
Checking double store operation
21   [
20   s
            variables
match
variables
Found variable in List!
Checking double store operation - Done
####
26   *
27   i
25   R

i + 2] = old_variables[NVAR*i + 2] + factor*fluxes[NVAR*i + 2];

match
i
28    
####
54   *
55   i
53   R
 + 2] = old_variables[NVAR
match
2] = old_variables[NVAR
i + 2] + factor*fluxes[NVAR*i + 2];

match
i
56    
####
70   *
71   f
69   r
 + 2] + factor
match
2] + factor
fluxes[NVAR*i + 2];

match
fluxes
77   [
89
####
82   *
83   i
81   R

i + 2];

match
i
84    
generateAST for variables[NVAR*i + 2] = old_variables[NVAR*i + 2] + factor*fluxes[NVAR*i + 2];
variables[NVAR*i + 2] = old_variables[NVAR*i + 2] + factor*fluxes[NVAR*i + 2];
variables[NVAR*i + 2] = old_variables[NVAR*i + 2] + factor*fluxes[NVAR*i + 2];
variables[NVAR*i + 2] = old_variables[NVAR*i + 2] + factor*fluxes[NVAR*i + 2];
#1# = #1# + factor*#1#;
#1# = #1# + factor*#1#;
#1# = #1# + factor*#1#;
#1# = #1# + #0#*#1#;
#1#    =    #1#    +    #0# * #1# ; 
#1#    =    #1#    +    #0# * #1# ; 
#1#    =    #1#    +    #0# * #1# ; 
#1#=#1#+#0#*#1#;
1=1+0*1
Time Taken 3

extractEveryVariable
Inserting - variables[NVAR*i + 2] = old_variables[NVAR*i + 2] + factor*fluxes[NVAR*i + 2];
            variables[NVAR*i + 3] = old_variables[NVAR*i + 3] + factor*fluxes[NVAR*i + 3];

[]
['*', '+', '*', '+', '+', '*', '*', '+']
[]
8
TotalArithmeticInstructions  21
3
3
TotalArithmeticInstructions  15
offset pattern is
NVAR*i + 3
and extracted value is
[' 3']
Offset is
3
Offset is a int with number <=2
offset pattern is
NVAR*i + 3
and extracted value is
[' 3']
Offset is
3
Offset is a int with number <=2
offset pattern is
NVAR*i + 3
and extracted value is
[' 3']
Offset is
3
Offset is a int with number <=2
Checking double store operation
21   [
20   s
            variables
match
variables
Found variable in List!
Checking double store operation - Done
####
26   *
27   i
25   R

i + 3] = old_variables[NVAR*i + 3] + factor*fluxes[NVAR*i + 3];

match
i
28    
####
54   *
55   i
53   R
 + 3] = old_variables[NVAR
match
3] = old_variables[NVAR
i + 3] + factor*fluxes[NVAR*i + 3];

match
i
56    
####
70   *
71   f
69   r
 + 3] + factor
match
3] + factor
fluxes[NVAR*i + 3];

match
fluxes
77   [
89
####
82   *
83   i
81   R

i + 3];

match
i
84    
generateAST for variables[NVAR*i + 3] = old_variables[NVAR*i + 3] + factor*fluxes[NVAR*i + 3];
variables[NVAR*i + 3] = old_variables[NVAR*i + 3] + factor*fluxes[NVAR*i + 3];
variables[NVAR*i + 3] = old_variables[NVAR*i + 3] + factor*fluxes[NVAR*i + 3];
variables[NVAR*i + 3] = old_variables[NVAR*i + 3] + factor*fluxes[NVAR*i + 3];
#1# = #1# + factor*#1#;
#1# = #1# + factor*#1#;
#1# = #1# + factor*#1#;
#1# = #1# + #0#*#1#;
#1#    =    #1#    +    #0# * #1# ; 
#1#    =    #1#    +    #0# * #1# ; 
#1#    =    #1#    +    #0# * #1# ; 
#1#=#1#+#0#*#1#;
1=1+0*1
Time Taken 3

extractEveryVariable
Inserting - variables[NVAR*i + 3] = old_variables[NVAR*i + 3] + factor*fluxes[NVAR*i + 3];
        }

Scope Found For, popping, New Length 5
[]
[]
[]
0
TotalArithmeticInstructions  15
0
0
TotalArithmeticInstructions  15
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  15
0
0
TotalArithmeticInstructions  15
Annotation End Found
ILP!!!
******
0
float factor = step_factors[i]/float(RK+1-j);
[]
[1, 2, 3, 4, 5]
3
1
1


1
variables[NVAR*i + VAR_DENSITY] = old_variables[NVAR*i + VAR_DENSITY] + factor*fluxes[NVAR*i + VAR_DENSITY];
[0]
[2, 3, 4, 5]
3
1
1


2
variables[NVAR*i + VAR_DENSITY_ENERGY] = old_variables[NVAR*i + VAR_DENSITY_ENERGY] + factor*fluxes[NVAR*i + VAR_DENSITY_ENERGY];
[0, 1]
[3, 4, 5]
3
1
1


3
variables[NVAR*i + 1] = old_variables[NVAR*i + 1] + factor*fluxes[NVAR*i + 1];
[0, 1, 2]
[4, 5]
3
1
1


4
variables[NVAR*i + 2] = old_variables[NVAR*i + 2] + factor*fluxes[NVAR*i + 2];
[0, 1, 2, 3]
[5]
3
1
1


5
variables[NVAR*i + 3] = old_variables[NVAR*i + 3] + factor*fluxes[NVAR*i + 3];
[0, 1, 2, 3, 4]
[]
3
1
1


******
Node 0's -
[0]
DFS Stack - pushing 0
[3, -999, -999, -999, -999, -999]
DFS Stack - pushing 1
(0,3)
(1,3)
6
Selected!
DFS Stack - pushing 2
(0,3)
(2,3)
6
Selected!
DFS Stack - pushing 3
(0,3)
(3,3)
6
Selected!
DFS Stack - pushing 4
(0,3)
(4,3)
6
Selected!
DFS Stack - pushing 5
(0,3)
(5,3)
6
Selected!
[3, 6, 6, 6, 6, 6]
[3, 6, 6, 6, 6, 6]
[3, 6, 6, 6, 6, 6]
[3, 6, 6, 6, 6, 6]
[3, 6, 6, 6, 6, 6]
[6]
######################################################
**********
The values of this entry are
Name                 -  ff_variable
Scope                -  struct
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  factor
Scope                -  For
varType              -  1
size                 -  1
value                -  1
iteratorVar          -  True
**********
The values of this entry are
Name                 -  old_variables
Scope                -  struct
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  density
Scope                -  For
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  i
Scope                -  For
varType              -  0
size                 -  1
value                -  0
iteratorVar          -  True
**********
The values of this entry are
Name                 -  speed_of_sound
Scope                -  For
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  variables
Scope                -  struct
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  j
Scope                -  For
varType              -  0
size                 -  1
value                -  0
iteratorVar          -  False
**********
The values of this entry are
Name                 -  iter
Scope                -  For
varType              -  0
size                 -  1
value                -  0
iteratorVar          -  False
**********
The values of this entry are
Name                 -  density_energy
Scope                -  For
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  speed_sqd
Scope                -  For
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  x
Scope                -  struct
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  pressure
Scope                -  For
varType              -  1
size                 -  1
value                -  1
iteratorVar          -  False
**********
The values of this entry are
Name                 -  fluxes
Scope                -  struct
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
***********
Line 1
LHS -  for i
RHS -  i nelr i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 5
Cycles    - 1
Line	     - for(int i = 0; i < nelr; i++){ ##NTRATIO97046
***
Line 2
LHS -  factor
RHS -  step factors i RK j
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 5
Cycles    - 3
Line	     - float factor = step_factors[i]/float(RK+1-j);
***
Line 3
LHS -  variables
RHS -  old variables NVAR i VAR DENSITY factor fluxes NVAR i VAR DENSITY
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 5
Cycles    - 3
Line	     - variables[NVAR*i + VAR_DENSITY] = old_variables[NVAR*i + VAR_DENSITY] + factor*fluxes[NVAR*i + VAR_DENSITY];
***
Line 4
LHS -  variables
RHS -  old variables NVAR i VAR DENSITY ENERGY factor fluxes NVAR i VAR DENSITY ENERGY
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 5
Cycles    - 3
Line	     - variables[NVAR*i + VAR_DENSITY_ENERGY] = old_variables[NVAR*i + VAR_DENSITY_ENERGY] + factor*fluxes[NVAR*i + VAR_DENSITY_ENERGY];
***
Line 5
LHS -  variables
RHS -  old variables NVAR i factor fluxes NVAR i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 5
Cycles    - 3
Line	     - variables[NVAR*i + 1] = old_variables[NVAR*i + 1] + factor*fluxes[NVAR*i + 1];
***
Line 6
LHS -  variables
RHS -  old variables NVAR i factor fluxes NVAR i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 5
Cycles    - 3
Line	     - variables[NVAR*i + 2] = old_variables[NVAR*i + 2] + factor*fluxes[NVAR*i + 2];
***
Line 7
LHS -  variables
RHS -  old variables NVAR i factor fluxes NVAR i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 5
Cycles    - 3
Line	     - variables[NVAR*i + 3] = old_variables[NVAR*i + 3] + factor*fluxes[NVAR*i + 3];
***
***********


TotalTranscendentals - 0
TotalArithmeticInstructions - 15
NumLoadOperations - 11
NumStoreOperations - 5
NumOffsetAccesses -  0
NumIndirectAccesses -  0
NumDoubleAccesses -  0
CriticalPath -  6
nThreadsCount -  97046
instCountWithFRatio -  0
ninst       -  31
ilp16k       -  30
ilp32       -  4
ilpRate       -  7
Warnings!!!!
1. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- variables[NVAR*i + VAR_DENSITY] = old_variables[NVAR*i + VAR_DENSITY] + factor*fluxes[NVAR*i + VAR_DENSITY];

2. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- variables[NVAR*i + VAR_DENSITY] = old_variables[NVAR*i + VAR_DENSITY] + factor*fluxes[NVAR*i + VAR_DENSITY];

3. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- variables[NVAR*i + VAR_DENSITY] = old_variables[NVAR*i + VAR_DENSITY] + factor*fluxes[NVAR*i + VAR_DENSITY];

4. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- variables[NVAR*i + VAR_DENSITY_ENERGY] = old_variables[NVAR*i + VAR_DENSITY_ENERGY] + factor*fluxes[NVAR*i + VAR_DENSITY_ENERGY];

5. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- variables[NVAR*i + VAR_DENSITY_ENERGY] = old_variables[NVAR*i + VAR_DENSITY_ENERGY] + factor*fluxes[NVAR*i + VAR_DENSITY_ENERGY];

6. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- variables[NVAR*i + VAR_DENSITY_ENERGY] = old_variables[NVAR*i + VAR_DENSITY_ENERGY] + factor*fluxes[NVAR*i + VAR_DENSITY_ENERGY];



######################################################
Transcendental Ratio - L
Arithmetic Intensity - L
Global Memory Operation - H
BranchDivergence - L 0
ControlDensity -  L
Floating Point Mul/Div - H
Total Instruction - L
Num Threads - 97046
Critical Path - L
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test8.txt
#define NTOTAL 8388608

[]


[]
int *indexmap;

[]
int i, k, j, id;

[]
int ii, ii2, jj, ij2, kk;

[]
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
for(int idx=0; idx<NTOTAL; idx++){ //NTRATIO8388608

scope - pushing For
For count stack - pushing 1
['NTRATIO8388608']
['8388608']
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
35   /
36   /
34    
0; idx<NTOTAL; idx++){
match
idx<NTOTAL; idx++){
/NTRATIO8388608

Division Found
####
36   /
37   N
35   /

NTRATIO8388608

generateAST for for(int idx=0; idx<NTOTAL; idx++){ //NTRATIO8388608
This line is a for
extractEveryVariable
Inserting - for(int idx=0; idx<NTOTAL; idx++){ //NTRATIO8388608
    i = idx % NX;

[]
[]
[]
0
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
generateAST for i = idx % NX;
i = idx % NX;
i = idx % NX;
i = idx % NX;
i = idx % NX;
i = idx % NX;
i = idx % NX;
#0# = #0# % #0#;
#0#    =    #0#    %    #0# ; 
#0#    =    #0#    %    #0# ; 
#0#    =    #0#    %    #0# ; 
#0#=#0#%#0#;
0=0%0
Time Taken 1

extractEveryVariable
Inserting - i = idx % NX;
    k = idx / NX;

[]
['/']
[]
1
TotalArithmeticInstructions  3
0
0
TotalArithmeticInstructions  3
Division Found
####
12   /
13    
11    
 idx
 NX;

generateAST for k = idx / NX;
k = idx / NX;
k = idx / NX;
k = idx / NX;
k = idx / NX;
k = idx / NX;
k = idx / NX;
#0# = #0# / #0#;
#0#    =    #0#    /    #0# ; 
#0#    =    #0#    /    #0# ; 
#0#    =    #0#    /    #0# ; 
#0#=#0#/#0#;
0=0/0
Time Taken 1

extractEveryVariable
Inserting - k = idx / NX;
    j = k % NY;

[]
[]
[]
0
TotalArithmeticInstructions  3
0
0
TotalArithmeticInstructions  3
generateAST for j = k % NY;
j = k % NY;
j = k % NY;
j = k % NY;
j = k % NY;
j = k % NY;
j = k % NY;
#0# = #0# % #0#;
#0#    =    #0#    %    #0# ; 
#0#    =    #0#    %    #0# ; 
#0#    =    #0#    %    #0# ; 
#0#=#0#%#0#;
0=0%0
Time Taken 1

extractEveryVariable
Inserting - j = k % NY;
    k = k / NY;

[]
['/']
[]
1
TotalArithmeticInstructions  4
0
0
TotalArithmeticInstructions  4
Division Found
####
10   /
11    
9    
 k
 NY;

generateAST for k = k / NY;
k = k / NY;
k = k / NY;
k = k / NY;
k = k / NY;
k = k / NY;
k = k / NY;
#0# = #0# / #0#;
#0#    =    #0#    /    #0# ; 
#0#    =    #0#    /    #0# ; 
#0#    =    #0#    /    #0# ; 
#0#=#0#/#0#;
0=0/0
Time Taken 1

extractEveryVariable
Inserting - k = k / NY;
 

[]
[]
[]
0
TotalArithmeticInstructions  4
0
0
TotalArithmeticInstructions  4
generateAST for 












This line does not have an =
extractEveryVariable
    ii =  (i+NX/2)%NX - NX/2;

[]
['+', '/', '-', '/']
[]
4
TotalArithmeticInstructions  8
0
0
TotalArithmeticInstructions  8
Division Found
####
15   /
16   2
14   X
  (i+NX
match
i+NX
2)%NX - NX/2;

match
2
17   )
Division Found
####
26   /
27   2
25   X
)%NX - NX
match
NX
2;

generateAST for ii =  (i+NX/2)%NX - NX/2;
ii =  (i+NX/2)%NX - NX/2;
ii =  (i+NX/2)%NX - NX/2;
ii =  (i+NX/2)%NX - NX/2;
ii =  (i+NX/2)%NX - NX/2;
ii =  (i+NX/2)%NX - NX/2;
ii =  (i+NX/2)%NX - NX/2;
#0# =  (#0#+#0#/2)%#0# - #0#/2;
#0#    =        ( #0# + #0# / 2 )  % #0#    -    #0# / 2 ; 
#0#    =        ( #0# + #0# / 2 )  % #0#    -    #0# / 2 ; 
#0#    =        ( #0# + #0# /#0#)  % #0#    -    #0# /#0#; 
#0#=(#0#+#0#/#0#)%#0#-#0#/#0#;
0=(0+0/0)%0-0/0
Time Taken 4

extractEveryVariable
Inserting - ii =  (i+NX/2)%NX - NX/2;
    ii2 = ii*ii;

[]
['*']
[]
1
TotalArithmeticInstructions  9
0
0
TotalArithmeticInstructions  9
####
12   *
13   i
11   i
 ii
match
ii
ii;

generateAST for ii2 = ii*ii;
ii2 = ii*ii;
ii2 = ii*ii;
ii2 = ii*ii;
ii2 = ii*ii;
ii2 = ii*ii;
ii2 = ii*ii;
#0# = #0#*#0#;
#0#    =    #0# * #0# ; 
#0#    =    #0# * #0# ; 
#0#    =    #0# * #0# ; 
#0#=#0#*#0#;
0=0*0
Time Taken 1

extractEveryVariable
Inserting - ii2 = ii*ii;
    jj = (j+NY/2)%NY - NY/2;

[]
['+', '/', '-', '/']
[]
4
TotalArithmeticInstructions  13
0
0
TotalArithmeticInstructions  13
Division Found
####
14   /
15   2
13   Y
 (j+NY
match
j+NY
2)%NY - NY/2;

match
2
16   )
Division Found
####
25   /
26   2
24   Y
)%NY - NY
match
NY
2;

generateAST for jj = (j+NY/2)%NY - NY/2;
jj = (j+NY/2)%NY - NY/2;
jj = (j+NY/2)%NY - NY/2;
jj = (j+NY/2)%NY - NY/2;
jj = (j+NY/2)%NY - NY/2;
jj = (j+NY/2)%NY - NY/2;
jj = (j+NY/2)%NY - NY/2;
#0# = (#0#+#0#/2)%#0# - #0#/2;
#0#    =     ( #0# + #0# / 2 )  % #0#    -    #0# / 2 ; 
#0#    =     ( #0# + #0# / 2 )  % #0#    -    #0# / 2 ; 
#0#    =     ( #0# + #0# /#0#)  % #0#    -    #0# /#0#; 
#0#=(#0#+#0#/#0#)%#0#-#0#/#0#;
0=(0+0/0)%0-0/0
Time Taken 4

extractEveryVariable
Inserting - jj = (j+NY/2)%NY - NY/2;
    ij2 = jj*jj+ii2;

[]
['*', '+']
[]
2
TotalArithmeticInstructions  15
0
0
TotalArithmeticInstructions  15
####
12   *
13   j
11   j
 jj
match
jj
jj+ii2;

match
jj
15   +
generateAST for ij2 = jj*jj+ii2;
ij2 = jj*jj+ii2;
ij2 = jj*jj+ii2;
ij2 = jj*jj+ii2;
ij2 = jj*jj+ii2;
ij2 = jj*jj+ii2;
ij2 = jj*jj+ii2;
#0# = #0#*#0#+#0#;
#0#    =    #0# * #0# + #0# ; 
#0#    =    #0# * #0# + #0# ; 
#0#    =    #0# * #0# + #0# ; 
#0#=#0#*#0#+#0#;
0=0*0+0
Time Taken 2

extractEveryVariable
Inserting - ij2 = jj*jj+ii2;
    kk = (k+NZ/2)%NZ - NZ/2;

[]
['+', '/', '-', '/']
[]
4
TotalArithmeticInstructions  19
0
0
TotalArithmeticInstructions  19
Division Found
####
14   /
15   2
13   Z
 (k+NZ
match
k+NZ
2)%NZ - NZ/2;

match
2
16   )
Division Found
####
25   /
26   2
24   Z
)%NZ - NZ
match
NZ
2;

generateAST for kk = (k+NZ/2)%NZ - NZ/2;
kk = (k+NZ/2)%NZ - NZ/2;
kk = (k+NZ/2)%NZ - NZ/2;
kk = (k+NZ/2)%NZ - NZ/2;
kk = (k+NZ/2)%NZ - NZ/2;
kk = (k+NZ/2)%NZ - NZ/2;
kk = (k+NZ/2)%NZ - NZ/2;
#0# = (#0#+#0#/2)%#0# - #0#/2;
#0#    =     ( #0# + #0# / 2 )  % #0#    -    #0# / 2 ; 
#0#    =     ( #0# + #0# / 2 )  % #0#    -    #0# / 2 ; 
#0#    =     ( #0# + #0# /#0#)  % #0#    -    #0# /#0#; 
#0#=(#0#+#0#/#0#)%#0#-#0#/#0#;
0=(0+0/0)%0-0/0
Time Taken 4

extractEveryVariable
Inserting - kk = (k+NZ/2)%NZ - NZ/2;
 

[]
[]
[]
0
TotalArithmeticInstructions  19
0
0
TotalArithmeticInstructions  19
generateAST for 












This line does not have an =
extractEveryVariable
    indexmap[idx] = kk*kk+ij2;

[]
['*', '+']
[]
2
TotalArithmeticInstructions  21
0
0
TotalArithmeticInstructions  21
Checking double store operation
12   [
11   p
    indexmap
match
indexmap
Checking double store operation - Done
####
22   *
23   k
21   k
 kk
match
kk
kk+ij2;

match
kk
25   +
generateAST for indexmap[idx] = kk*kk+ij2;
indexmap[idx] = kk*kk+ij2;
indexmap[idx] = kk*kk+ij2;
indexmap[idx] = kk*kk+ij2;
#1# = kk*kk+ij2;
#1# = kk*kk+ij2;
#1# = kk*kk+ij2;
#1# = #0#*#0#+#0#;
#1#    =    #0# * #0# + #0# ; 
#1#    =    #0# * #0# + #0# ; 
#1#    =    #0# * #0# + #0# ; 
#1#=#0#*#0#+#0#;
1=0*0+0
Time Taken 2

extractEveryVariable
Inserting - indexmap[idx] = kk*kk+ij2;
}

Scope Found For, popping, New Length 1
[]
[]
[]
0
TotalArithmeticInstructions  21
0
0
TotalArithmeticInstructions  21
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  21
0
0
TotalArithmeticInstructions  21
Annotation End Found
ILP!!!
******
0
i = idx % NX;
[]
[4]
1
1
1


1
k = idx / NX;
[]
[2, 3, 8]
1
1
1


2
j = k % NY;
[1]
[6]
1
1
1


3
k = k / NY;
[1]
[8]
1
1
1


4
ii =  (i+NX/2)%NX - NX/2;
[0]
[5, 7]
4
1
1


5
ii2 = ii*ii;
[4]
[7]
1
1
1


6
jj = (j+NY/2)%NY - NY/2;
[2]
[7]
4
1
1


7
ij2 = jj*jj+ii2;
[4, 5, 6]
[9]
2
1
1


8
kk = (k+NZ/2)%NZ - NZ/2;
[1, 3]
[9]
4
1
1


9
indexmap[idx] = kk*kk+ij2;
[7, 8]
[]
2
1
1


******
Node 0's -
[0, 1]
DFS Stack - pushing 0
[1, -999, -999, -999, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 4
(0,1)
(4,4)
5
Selected!
[1, -999, -999, -999, 5, -999, -999, -999, -999, -999]
DFS Stack - pushing 5
(4,5)
(5,1)
6
Selected!
DFS Stack - pushing 7
(4,5)
(7,2)
7
Selected!
[1, -999, -999, -999, 5, 6, -999, 7, -999, -999]
DFS Stack - pushing 9
(7,7)
(9,2)
9
Selected!
[1, -999, -999, -999, 5, 6, -999, 7, -999, 9]
[1, -999, -999, -999, 5, 6, -999, 7, -999, 9]
DFS Stack - pushing 1
[-999, 1, -999, -999, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 2
(1,1)
(2,1)
2
Selected!
DFS Stack - pushing 3
(1,1)
(3,1)
2
Selected!
DFS Stack - pushing 8
(1,1)
(8,4)
5
Selected!
[-999, 1, 2, 2, -999, -999, -999, -999, 5, -999]
DFS Stack - pushing 9
(8,5)
(9,2)
7
Selected!
[-999, 1, 2, 2, -999, -999, -999, -999, 5, 7]
[-999, 1, 2, 2, -999, -999, -999, -999, 5, 7]
[-999, 1, 2, 2, -999, -999, -999, -999, 5, 7]
DFS Stack - pushing 6
(2,2)
(6,4)
6
Selected!
[-999, 1, 2, 2, -999, -999, 6, -999, 5, 7]
DFS Stack - pushing 7
(6,6)
(7,2)
8
Selected!
[-999, 1, 2, 2, -999, -999, 6, 8, 5, 7]
[9, 8]
######################################################
**********
The values of this entry are
Name                 -  
Scope                -  Global
varType              -  0
size                 -  0
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  i
Scope                -  Global
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  ii
Scope                -  Global
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  idx
Scope                -  For
varType              -  0
size                 -  1
value                -  0
iteratorVar          -  True
**********
***********
Line 1
LHS -  for idx
RHS -  idx NTOTAL idx
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - for(int idx=0; idx<NTOTAL; idx++){ //NTRATIO8388608
***
Line 2
LHS -  i
RHS -  idx NX
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - i = idx % NX;
***
Line 3
LHS -  k
RHS -  idx NX
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - k = idx / NX;
***
Line 4
LHS -  j
RHS -  k NY
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - j = k % NY;
***
Line 5
LHS -  k
RHS -  k NY
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - k = k / NY;
***
Line 6
LHS -  ii
RHS -  i NX NX NX
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 4
Line	     - ii =  (i+NX/2)%NX - NX/2;
***
Line 7
LHS -  ii
RHS -  ii ii
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - ii2 = ii*ii;
***
Line 8
LHS -  jj
RHS -  j NY NY NY
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 4
Line	     - jj = (j+NY/2)%NY - NY/2;
***
Line 9
LHS -  ij
RHS -  jj jj ii
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 2
Line	     - ij2 = jj*jj+ii2;
***
Line 10
LHS -  kk
RHS -  k NZ NZ NZ
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 4
Line	     - kk = (k+NZ/2)%NZ - NZ/2;
***
Line 11
LHS -  indexmap
RHS -  kk kk ij idx
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 2
Line	     - indexmap[idx] = kk*kk+ij2;
***
***********


TotalTranscendentals - 0
TotalArithmeticInstructions - 21
NumLoadOperations - 0
NumStoreOperations - 1
NumOffsetAccesses -  0
NumIndirectAccesses -  0
NumDoubleAccesses -  0
CriticalPath -  9
nThreadsCount -  8388608
instCountWithFRatio -  0
ninst       -  22
ilp16k       -  21
ilp32       -  3
ilpRate       -  7


######################################################
Transcendental Ratio - L
Arithmetic Intensity - H
Global Memory Operation - H
BranchDivergence - L 0
ControlDensity -  L
Floating Point Mul/Div - L
Total Instruction - L
Num Threads - 8388608
Critical Path - L
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test9.txt
#define NTOTAL 8388608

[]
#define NX 256

[]
#define NY 256

[]
#define NZ 128

[]
int i, k, j, var;

[]
int niter = 2;

[]
double y0_r[NTOTAL];

[]
double y0_i[NTOTAL];

[]
double x_r[NTOTAL;

[]
double x_i[NTOTAL];

[]


[]
for (iter = 1; iteri<=niter; iter++) { //NTRATIO2

scope - pushing For
For count stack - pushing 1
['NTRATIO2']
['2']
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
    for(int idx=0; idx<NTOTAL; idx++){ //NTRATIO8388608

scope - pushing For
For count stack - pushing 1
['NTRATIO8388608']
['8388608']
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
39   /
40   /
38    
0; idx<NTOTAL; idx++){
match
idx<NTOTAL; idx++){
/NTRATIO8388608

Division Found
####
40   /
41   N
39   /

NTRATIO8388608

generateAST for for(int idx=0; idx<NTOTAL; idx++){ //NTRATIO8388608
This line is a for
extractEveryVariable
Inserting - for(int idx=0; idx<NTOTAL; idx++){ //NTRATIO8388608
        i = idx % NX;

[]
[]
[]
0
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
generateAST for i = idx % NX;
i = idx % NX;
i = idx % NX;
i = idx % NX;
i = idx % NX;
i = idx % NX;
i = idx % NX;
#0# = #0# % #0#;
#0#    =    #0#    %    #0# ; 
#0#    =    #0#    %    #0# ; 
#0#    =    #0#    %    #0# ; 
#0#=#0#%#0#;
0=0%0
Time Taken 1

extractEveryVariable
Inserting - i = idx % NX;
        k = idx / NX;

[]
['/']
[]
1
TotalArithmeticInstructions  3
0
0
TotalArithmeticInstructions  3
Division Found
####
16   /
17    
15    
 idx
 NX;

generateAST for k = idx / NX;
k = idx / NX;
k = idx / NX;
k = idx / NX;
k = idx / NX;
k = idx / NX;
k = idx / NX;
#0# = #0# / #0#;
#0#    =    #0#    /    #0# ; 
#0#    =    #0#    /    #0# ; 
#0#    =    #0#    /    #0# ; 
#0#=#0#/#0#;
0=0/0
Time Taken 1

extractEveryVariable
Inserting - k = idx / NX;
        j = k % NY;

[]
[]
[]
0
TotalArithmeticInstructions  3
0
0
TotalArithmeticInstructions  3
generateAST for j = k % NY;
j = k % NY;
j = k % NY;
j = k % NY;
j = k % NY;
j = k % NY;
j = k % NY;
#0# = #0# % #0#;
#0#    =    #0#    %    #0# ; 
#0#    =    #0#    %    #0# ; 
#0#    =    #0#    %    #0# ; 
#0#=#0#%#0#;
0=0%0
Time Taken 1

extractEveryVariable
Inserting - j = k % NY;
        k = k / NY;

[]
['/']
[]
1
TotalArithmeticInstructions  4
0
0
TotalArithmeticInstructions  4
Division Found
####
14   /
15    
13    
 k
 NY;

generateAST for k = k / NY;
k = k / NY;
k = k / NY;
k = k / NY;
k = k / NY;
k = k / NY;
k = k / NY;
#0# = #0# / #0#;
#0#    =    #0#    /    #0# ; 
#0#    =    #0#    /    #0# ; 
#0#    =    #0#    /    #0# ; 
#0#=#0#/#0#;
0=0/0
Time Taken 1

extractEveryVariable
Inserting - k = k / NY;
        var = j*NX*NZ + k*NX + i;

[]
['*', '*', '+', '*', '+']
[]
5
TotalArithmeticInstructions  9
0
0
TotalArithmeticInstructions  9
####
15   *
16   N
14   j
 j
match
j
NX*NZ + k*NX + i;

match
NX
18   *
####
18   *
19   N
17   X

NZ + k*NX + i;

match
NZ
21    
####
25   *
26   N
24   k
 + k
match
k
NX + i;

match
NX
28    
generateAST for var = j*NX*NZ + k*NX + i;
var = j*NX*NZ + k*NX + i;
var = j*NX*NZ + k*NX + i;
var = j*NX*NZ + k*NX + i;
var = j*NX*NZ + k*NX + i;
var = j*NX*NZ + k*NX + i;
var = j*NX*NZ + k*NX + i;
#0# = #0#*#0#*#0# + #0#*#0# + #0#;
#0#    =    #0# * #0# * #0#    +    #0# * #0#    +    #0# ; 
#0#    =    #0# * #0# * #0#    +    #0# * #0#    +    #0# ; 
#0#    =    #0# * #0# * #0#    +    #0# * #0#    +    #0# ; 
#0#=#0#*#0#*#0#+#0#*#0#+#0#;
0=0*0*0+0*0+0
Time Taken 3

extractEveryVariable
Inserting - var = j*NX*NZ + k*NX + i;
 

[]
[]
[]
0
TotalArithmeticInstructions  9
0
0
TotalArithmeticInstructions  9
generateAST for 












This line does not have an =
extractEveryVariable
        y0_r[var] = x_r[idx];

[]
[]
[]
0
TotalArithmeticInstructions  9
0
0
TotalArithmeticInstructions  9
Checking double store operation
12   [
11   r
        y0_r
match
y0_r
Found variable in List!
Checking double store operation - Done
generateAST for y0_r[var] = x_r[idx];
y0_r[var] = x_r[idx];
y0_r[var] = x_r[idx];
y0_r[var] = x_r[idx];
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#=#1#;
1=1
Time Taken 1

extractEveryVariable
Inserting - y0_r[var] = x_r[idx];
        y0_i[var] = x_i[idx];

[]
[]
[]
0
TotalArithmeticInstructions  9
0
0
TotalArithmeticInstructions  9
Checking double store operation
12   [
11   i
        y0_i
match
y0_i
Found variable in List!
Checking double store operation - Done
generateAST for y0_i[var] = x_i[idx];
y0_i[var] = x_i[idx];
y0_i[var] = x_i[idx];
y0_i[var] = x_i[idx];
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#=#1#;
1=1
Time Taken 1

extractEveryVariable
Inserting - y0_i[var] = x_i[idx];
    }

Scope Found For, popping, New Length 2
[]
[]
[]
0
TotalArithmeticInstructions  9
0
0
TotalArithmeticInstructions  9
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
}

Scope Found For, popping, New Length 1
[]
[]
[]
0
TotalArithmeticInstructions  9
0
0
TotalArithmeticInstructions  9
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  9
0
0
TotalArithmeticInstructions  9
Annotation End Found
ILP!!!
******
0
i = idx % NX;
[]
[4, 6]
1
1
1


1
k = idx / NX;
[]
[2, 3, 4]
1
1
1


2
j = k % NY;
[1]
[4]
1
1
1


3
k = k / NY;
[1]
[4]
1
1
1


4
var = j*NX*NZ + k*NX + i;
[0, 1, 2, 3]
[5, 6]
3
1
1


5
y0_r[var] = x_r[idx];
[4]
[]
1
1
1


6
y0_i[var] = x_i[idx];
[0, 4]
[]
1
1
1


******
Node 0's -
[0, 1]
DFS Stack - pushing 0
[1, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 4
(0,1)
(4,3)
4
Selected!
DFS Stack - pushing 6
(0,1)
(6,1)
2
Selected!
[1, -999, -999, -999, 4, -999, 2]
[1, -999, -999, -999, 4, -999, 2]
DFS Stack - pushing 5
(4,4)
(5,1)
5
Selected!
[1, -999, -999, -999, 4, 5, 2]
DFS Stack - pushing 1
[-999, 1, -999, -999, -999, -999, -999]
DFS Stack - pushing 2
(1,1)
(2,1)
2
Selected!
DFS Stack - pushing 3
(1,1)
(3,1)
2
Selected!
DFS Stack - pushing 4
(1,1)
(4,3)
4
Selected!
[-999, 1, 2, 2, 4, -999, -999]
DFS Stack - pushing 5
(4,4)
(5,1)
5
Selected!
DFS Stack - pushing 6
(4,4)
(6,1)
5
Selected!
[-999, 1, 2, 2, 4, 5, 5]
[-999, 1, 2, 2, 4, 5, 5]
[-999, 1, 2, 2, 4, 5, 5]
[-999, 1, 2, 2, 4, 5, 5]
[5, 5]
######################################################
**********
The values of this entry are
Name                 -  niter
Scope                -  Global
varType              -  0
size                 -  1
value                -  2
iteratorVar          -  False
**********
The values of this entry are
Name                 -  idx
Scope                -  For
varType              -  0
size                 -  1
value                -  0
iteratorVar          -  True
**********
The values of this entry are
Name                 -  y0_i
Scope                -  Global
varType              -  2
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  i
Scope                -  Global
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  x_i
Scope                -  Global
varType              -  2
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  x_r
Scope                -  Global
varType              -  2
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  y0_r
Scope                -  Global
varType              -  2
size                 -  1
value                -  None
iteratorVar          -  False
**********
***********
Line 1
LHS -  for idx
RHS -  idx NTOTAL idx
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - for(int idx=0; idx<NTOTAL; idx++){ //NTRATIO8388608
***
Line 2
LHS -  i
RHS -  idx NX
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - i = idx % NX;
***
Line 3
LHS -  k
RHS -  idx NX
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - k = idx / NX;
***
Line 4
LHS -  j
RHS -  k NY
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - j = k % NY;
***
Line 5
LHS -  k
RHS -  k NY
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - k = k / NY;
***
Line 6
LHS -  var
RHS -  j NX NZ k NX i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 3
Line	     - var = j*NX*NZ + k*NX + i;
***
Line 7
LHS -  y
RHS -  x r idx var
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - y0_r[var] = x_r[idx];
***
Line 8
LHS -  y
RHS -  x i idx var
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - y0_i[var] = x_i[idx];
***
***********


TotalTranscendentals - 0
TotalArithmeticInstructions - 9
NumLoadOperations - 2
NumStoreOperations - 2
NumOffsetAccesses -  0
NumIndirectAccesses -  0
NumDoubleAccesses -  2
CriticalPath -  5
nThreadsCount -  16777216
instCountWithFRatio -  0
ninst       -  13
ilp16k       -  12
ilp32       -  4
ilpRate       -  3


######################################################
Transcendental Ratio - L
Arithmetic Intensity - M
Global Memory Operation - L
BranchDivergence - L 0
ControlDensity -  L
Floating Point Mul/Div - L
Total Instruction - L
Num Threads - 16777216
Critical Path - L
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test10.txt
#define NTOTAL 8388608

[]
#define NX 256

[]
#define NY 256

[]
#define NZ 128

[]
int i, k, j, id;

[]
int niter = 2;

[]
double y1_r[NTOTAL], y1_i[NTOTAL], x_r[NTOTAL], x_i[NTOTAL];

[]
double xout_r[NTOTAL], xout_i[NTOTAL];

[]


[]
for (iter = 1; iteri<=niter; iter++) {

scope - pushing For
For count stack - pushing 1
[]


[]
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
        for(int idx=0; idx<NTOTAL; idx++){//NTRATIO8388608

scope - pushing For
For count stack - pushing 1
['NTRATIO8388608']
['8388608']
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
42   /
43   /
41   {
0; idx<NTOTAL; idx++){
match
idx<NTOTAL; idx++){
/NTRATIO8388608

Division Found
####
43   /
44   N
42   /

NTRATIO8388608

generateAST for for(int idx=0; idx<NTOTAL; idx++){//NTRATIO8388608
This line is a for
extractEveryVariable
Inserting - for(int idx=0; idx<NTOTAL; idx++){//NTRATIO8388608
                xout_r[idx] = y1_r[idx];

[]
[]
[]
0
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Checking double store operation
22   [
21   r
                xout_r
match
xout_r
Found variable in List!
Checking double store operation - Done
generateAST for xout_r[idx] = y1_r[idx];
xout_r[idx] = y1_r[idx];
xout_r[idx] = y1_r[idx];
xout_r[idx] = y1_r[idx];
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#=#1#;
1=1
Time Taken 1

extractEveryVariable
Inserting - xout_r[idx] = y1_r[idx];
                xout_i[idx] = y1_i[idx];

[]
[]
[]
0
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Checking double store operation
22   [
21   i
                xout_i
match
xout_i
Checking double store operation - Done
generateAST for xout_i[idx] = y1_i[idx];
xout_i[idx] = y1_i[idx];
xout_i[idx] = y1_i[idx];
xout_i[idx] = y1_i[idx];
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#=#1#;
1=1
Time Taken 1

extractEveryVariable
Inserting - xout_i[idx] = y1_i[idx];
        }

Scope Found For, popping, New Length 2
[]
[]
[]
0
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
}

Scope Found For, popping, New Length 1
[]
[]
[]
0
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Annotation End Found
ILP!!!
******
0
xout_r[idx] = y1_r[idx];
[]
[]
1
1
1


1
xout_i[idx] = y1_i[idx];
[]
[]
1
1
1


******
Node 0's -
[0, 1]
DFS Stack - pushing 0
[1, -999]
DFS Stack - pushing 1
[-999, 1]
[1, 1]
######################################################
**********
The values of this entry are
Name                 -  i
Scope                -  Global
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  niter
Scope                -  Global
varType              -  0
size                 -  1
value                -  2
iteratorVar          -  False
**********
The values of this entry are
Name                 -  y1_r
Scope                -  Global
varType              -  2
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  idx
Scope                -  For
varType              -  0
size                 -  1
value                -  0
iteratorVar          -  True
**********
The values of this entry are
Name                 -  xout_r
Scope                -  Global
varType              -  2
size                 -  1
value                -  None
iteratorVar          -  False
**********
***********
Line 1
LHS -  for idx
RHS -  idx NTOTAL idx
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - for(int idx=0; idx<NTOTAL; idx++){//NTRATIO8388608
***
Line 2
LHS -  xout
RHS -  y r idx
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - xout_r[idx] = y1_r[idx];
***
Line 3
LHS -  xout
RHS -  y i idx
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - xout_i[idx] = y1_i[idx];
***
***********


TotalTranscendentals - 0
TotalArithmeticInstructions - 2
NumLoadOperations - 2
NumStoreOperations - 2
NumOffsetAccesses -  0
NumIndirectAccesses -  0
NumDoubleAccesses -  1
CriticalPath -  1
nThreadsCount -  8388608
instCountWithFRatio -  0
ninst       -  6
ilp16k       -  5
ilp32       -  5
ilpRate       -  1


######################################################
Transcendental Ratio - L
Arithmetic Intensity - L
Global Memory Operation - L
BranchDivergence - L 0
ControlDensity -  L
Floating Point Mul/Div - L
Total Instruction - L
Num Threads - 8388608
Critical Path - L
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test11.txt
#define NTOTAL 8388608

[]
#define EXPMAX 36864

[]
#define NX 256

[]
#define NY 256

[]
#define NZ 128

[]
int i, k, j, id;

[]
int niter = 1;

[]
int indexmap[NTOTAL];

[]
double u1_r[NTOTAL], u0_r[NTOTAL], u1_r[NTOTAL], u1_i[NTOTAL];

[]
double ex[EXPMAX+1];

[]


[]
for (iter = 1; iteri<=niter; iter++) {

scope - pushing For
For count stack - pushing 1
[]
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
    for(int idx=0; idx < NTOTAL; idx++){ //NTRATIO8388608

scope - pushing For
For count stack - pushing 1
['NTRATIO8388608']
['8388608']
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
41   /
42   /
40    
0; idx < NTOTAL; idx++){
match
idx < NTOTAL; idx++){
/NTRATIO8388608

Division Found
####
42   /
43   N
41   /

NTRATIO8388608

generateAST for for(int idx=0; idx < NTOTAL; idx++){ //NTRATIO8388608
This line is a for
extractEveryVariable
Inserting - for(int idx=0; idx < NTOTAL; idx++){ //NTRATIO8388608
        u1_r[idx] = u0_r[idx] * ex[t*indexmap[idx]];

[]
['*', '*']
[]
2
TotalArithmeticInstructions  4
0
1
TotalArithmeticInstructions  4
Indirect Warning
Checking double store operation
12   [
11   r
        u1_r
match
u1_r
Found variable in List!
Checking double store operation - Done
####
30   *
31    
29    
 u0_r
match
u0_r
 ex[t*indexmap[idx]];

match
ex
34   [
50
####
36   *
37   i
35   t

indexmap[idx]];

match
indexmap
45   [
50
generateAST for u1_r[idx] = u0_r[idx] * ex[t*indexmap[idx]];
u1_r[idx] = u0_r[idx] * ex[t*indexmap[idx]];
u1_r[idx] = u0_r[idx] * ex[t*indexmap[idx]];
u1_r[idx] = u0_r[idx] * #2#;
#1# = #1# * #2#;
#1# = #1# * #2#;
#1# = #1# * #2#;
#1# = #1# * #2#;
#1#    =    #1#    *    #2# ; 
#1#    =    #1#    *    #2# ; 
#1#    =    #1#    *    #2# ; 
#1#=#1#*#2#;
1=1*2
Time Taken 3

extractEveryVariable
Inserting - u1_r[idx] = u0_r[idx] * ex[t*indexmap[idx]];
        u1_i[idx] = u0_i[idx] * ex[t*indexmap[idx]];

[]
['*', '*']
[]
2
TotalArithmeticInstructions  6
0
1
TotalArithmeticInstructions  6
Indirect Warning
Checking double store operation
12   [
11   i
        u1_i
match
u1_i
Checking double store operation - Done
####
30   *
31    
29    
 u0_i
match
u0_i
 ex[t*indexmap[idx]];

match
ex
34   [
50
####
36   *
37   i
35   t

indexmap[idx]];

match
indexmap
45   [
50
generateAST for u1_i[idx] = u0_i[idx] * ex[t*indexmap[idx]];
u1_i[idx] = u0_i[idx] * ex[t*indexmap[idx]];
u1_i[idx] = u0_i[idx] * ex[t*indexmap[idx]];
u1_i[idx] = u0_i[idx] * #2#;
#1# = #1# * #2#;
#1# = #1# * #2#;
#1# = #1# * #2#;
#1# = #1# * #2#;
#1#    =    #1#    *    #2# ; 
#1#    =    #1#    *    #2# ; 
#1#    =    #1#    *    #2# ; 
#1#=#1#*#2#;
1=1*2
Time Taken 3

extractEveryVariable
Inserting - u1_i[idx] = u0_i[idx] * ex[t*indexmap[idx]];
    }

Scope Found For, popping, New Length 2
[]
[]
[]
0
TotalArithmeticInstructions  6
0
0
TotalArithmeticInstructions  6
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  6
0
0
TotalArithmeticInstructions  6
Annotation End Found
ILP!!!
******
0
u1_r[idx] = u0_r[idx] * ex[t*indexmap[idx]];
[]
[1]
3
1
1


1
u1_i[idx] = u0_i[idx] * ex[t*indexmap[idx]];
[0]
[]
3
1
1


******
Node 0's -
[0]
DFS Stack - pushing 0
[3, -999]
DFS Stack - pushing 1
(0,3)
(1,3)
6
Selected!
[3, 6]
[6]
######################################################
**********
The values of this entry are
Name                 -  niter
Scope                -  Global
varType              -  0
size                 -  1
value                -  1
iteratorVar          -  False
**********
The values of this entry are
Name                 -  idx
Scope                -  For
varType              -  0
size                 -  1
value                -  0
iteratorVar          -  True
**********
The values of this entry are
Name                 -  i
Scope                -  Global
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  u1_r
Scope                -  Global
varType              -  2
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  ex
Scope                -  Global
varType              -  2
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  indexmap
Scope                -  Global
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
***********
Line 1
LHS -  for idx
RHS -  idx NTOTAL idx
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - for(int idx=0; idx < NTOTAL; idx++){ //NTRATIO8388608
***
Line 2
LHS -  u
RHS -  u r idx ex t indexmap idx
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 3
Line	     - u1_r[idx] = u0_r[idx] * ex[t*indexmap[idx]];
***
Line 3
LHS -  u
RHS -  u i idx ex t indexmap idx
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 3
Line	     - u1_i[idx] = u0_i[idx] * ex[t*indexmap[idx]];
***
***********


TotalTranscendentals - 0
TotalArithmeticInstructions - 6
NumLoadOperations - 6
NumStoreOperations - 2
NumOffsetAccesses -  0
NumIndirectAccesses -  2
NumDoubleAccesses -  1
CriticalPath -  6
nThreadsCount -  8388608
instCountWithFRatio -  0
ninst       -  14
ilp16k       -  13
ilp32       -  4
ilpRate       -  3
Warnings!!!!
1. Memory Coalescing Warning - ***t*indexmap[idx]*** is an indirect access in line u1_r[idx] = u0_r[idx] * ex[t*indexmap[idx]];

2. Memory Coalescing Warning - ***t*indexmap[idx]*** is an indirect access in line u1_i[idx] = u0_i[idx] * ex[t*indexmap[idx]];



######################################################
Transcendental Ratio - L
Arithmetic Intensity - L
Global Memory Operation - L
BranchDivergence - L 0
ControlDensity -  L
Floating Point Mul/Div - L
Total Instruction - L
Num Threads - 8388608
Critical Path - L
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test12.txt
n = 1024000;

[]
float sx[1024000], sy[1024000];

[]
int randIndex[1024000], window[1024000];

[]
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
    for (i = 0; i<=n; ++i) { //NTRATIO1024000

scope - pushing For
For count stack - pushing 1
['NTRATIO1024000']
['1024000']
['<=', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
29   /
30   /
28    
 0; i<=n; ++i) {
match
i<=n; ++i) {
/NTRATIO1024000

Division Found
####
30   /
31   N
29   /

NTRATIO1024000

generateAST for for (i = 0; i<=n; ++i) { //NTRATIO1024000
This line is a for
extractEveryVariable
Inserting - for (i = 0; i<=n; ++i) { //NTRATIO1024000
        if(window[i] == 1){		//BRATIO0.03125

scope - pushing For
For count stack - pushing 1
[]
['==', '/', '/']
['//']
1
TotalArithmeticInstructions  3
0
0
TotalArithmeticInstructions  3
Checking double store operation
17   [
16   w
        if(window
match
if(window
Checking double store operation - Done
Division Found
####
29   /
30   /
28   	
= 1){		
match
1){
/BRATIO0.03125

Division Found
####
30   /
31   B
29   /

BRATIO0.03125

Found Control Density
generateAST for if(window[i] == 1){		//BRATIO0.03125
if(window[i] == 1){		
if(window[i] == 1){		
if(window[i] == 1){		
if(#1# == 1){		
if(#1# == 1){		
if(#1# == 1){		
0=(#1# == 1)		
0 =  ( #1#    =  =    1 )  	  	 
0 =  ( #1#    =  =    1 )  	  	 
0 =  ( #1#    =  =   #0#)  	  	 
0=(#1#==#0#)
0=(1==0)
Time Taken 2

extractEveryVariable
Inserting - if(window[i] == 1){		//BRATIO0.03125
['0.03125']
Bratio found
temp bratio is  1.0
Divergence ratio is  1.0
If ratio stack - pushing 0.03125
            float temp = 0.0f;

[]
[]
[]
0
TotalArithmeticInstructions  3.0
0
0
TotalArithmeticInstructions  3.0
generateAST for float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
#0# = #0#;
#0#    =    #0# ; 
#0#    =    #0# ; 
#0#    =    #0# ; 
#0#=#0#;
0=0
Time Taken 0

extractEveryVariable
Inserting - float temp = 0.0f;
            int upperBound = randIndex[i]+768;

[]
['+']
[]
1
TotalArithmeticInstructions  3.03125
0
0
TotalArithmeticInstructions  3.03125
Checking double store operation
Checking double store operation - Done
generateAST for int upperBound = randIndex[i]+768;
int upperBound = randIndex[i]+768;
int upperBound = randIndex[i]+768;
int upperBound = randIndex[i]+768;
int upperBound = #1#+768;
int upperBound = #1#+768;
int upperBound = #1#+768;
#0# = #1#+768;
#0#    =    #1# + 768 ; 
#0#    =    #1# + 768 ; 
#0#    =    #1# +#0#; 
#0#=#1#+#0#;
0=1+0
Time Taken 2

extractEveryVariable
Inserting - int upperBound = randIndex[i]+768;
            for(j=randIndex[i]; j<upperBound && j<n; j++){ //FRATIO768

scope - pushing For
[]
FRATIO768
For count stack - pushing 768
['<', '&&', '<', '++', '/', '/']
['//']
4
TotalArithmeticInstructions  99.03125
0
0
TotalArithmeticInstructions  99.03125
Checking double store operation
Checking double store operation - Done
Division Found
####
59   /
60   /
58    
randIndex[i]; j<upperBound && j<n; j++){
match
j<upperBound && j<n; j++){
/FRATIO768

Division Found
####
60   /
61   F
59   /

FRATIO768

generateAST for for(j=randIndex[i]; j<upperBound && j<n; j++){ //FRATIO768
This line is a for
extractEveryVariable
Inserting - for(j=randIndex[i]; j<upperBound && j<n; j++){ //FRATIO768
                temp += sa * sx[randIndex[j]];

[]
['+', '*']
[]
2
TotalArithmeticInstructions  147.03125
0
0
TotalArithmeticInstructions  147.03125
Indirect Warning
Checking double store operation
Checking double store operation - Done
####
27   *
28    
26    
 sa
match
sa
 sx[randIndex[j]];

match
sx
31   [
44
generateAST for temp += sa * sx[randIndex[j]];
temp += sa * sx[randIndex[j]];
temp += sa * sx[randIndex[j]];
temp += sa * #2#;
temp += sa * #2#;
temp += sa * #2#;
temp += sa * #2#;
#0# += #0# * #2#;
#0#    +  =    #0#    *    #2# ; 
#0#    +  =    #0#    *    #2# ; 
#0#    +  =    #0#    *    #2# ; 
#0#+=#0#*#2#;
0=0\+0*2
Time Taken 3

extractEveryVariable
Inserting - temp += sa * sx[randIndex[j]];
Within Fratio
4
            }

Scope Found For, popping, New Length 3
[]
[]
[]
0
TotalArithmeticInstructions  147.03125
0
0
TotalArithmeticInstructions  147.03125
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
            sy[i] = temp;

[]
[]
[]
0
TotalArithmeticInstructions  147.03125
0
0
TotalArithmeticInstructions  147.03125
Checking double store operation
14   [
13   y
            sy
match
sy
Checking double store operation - Done
generateAST for sy[i] = temp;
sy[i] = temp;
sy[i] = temp;
sy[i] = temp;
#1# = temp;
#1# = temp;
#1# = temp;
#1# = #0#;
#1#    =    #0# ; 
#1#    =    #0# ; 
#1#    =    #0# ; 
#1#=#0#;
1=0
Time Taken 1

extractEveryVariable
Inserting - sy[i] = temp;
        }

Scope Found For, popping, New Length 2
[]
[]
[]
0
TotalArithmeticInstructions  147.03125
0
0
TotalArithmeticInstructions  147.03125
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
}

Scope Found For, popping, New Length 1
[]
[]
[]
0
TotalArithmeticInstructions  147.03125
0
0
TotalArithmeticInstructions  147.03125
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  147.03125
0
0
TotalArithmeticInstructions  147.03125
Annotation End Found
ILP!!!
******
0
for(j=randIndex[i]; j<upperBound && j<n; j++){ //FRATIO768
[]
[1]
1
1.0
1


1
temp += sa * sx[randIndex[j]];
[0]
[]
3
1.0
1


******
Node 0's -
[0]
DFS Stack - pushing 0
[1.0, -999]
DFS Stack - pushing 1
(0,1.0)
(1,3.0)
4
Selected!
[1.0, 4]
[4]
######################################################
**********
The values of this entry are
Name                 -  upperBound
Scope                -  For
varType              -  0
size                 -  1
value                -  768
iteratorVar          -  True
**********
The values of this entry are
Name                 -  sx
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  temp
Scope                -  For
varType              -  1
size                 -  1
value                -  0
iteratorVar          -  True
**********
The values of this entry are
Name                 -  randIndex
Scope                -  Global
varType              -  0
size                 -  1024000
value                -  None
iteratorVar          -  False
**********
***********
Line 1
LHS -  for i
RHS -  i n i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - for (i = 0; i<=n; ++i) { //NTRATIO1024000
***
Line 2
LHS - 
RHS -  window i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 2
Line	     - if(window[i] == 1){		//BRATIO0.03125
***
Line 3
LHS -  temp
RHS -  f
For Ratio - 1
If  Ratio - 0.03125
Scope     - For
ScopeId   - 3
Cycles    - 0
Line	     - float temp = 0.0f;
***
Line 4
LHS -  upperBound
RHS -  randIndex i
For Ratio - 1
If  Ratio - 0.03125
Scope     - For
ScopeId   - 3
Cycles    - 2
Line	     - int upperBound = randIndex[i]+768;
***
Line 5
LHS -  for j
RHS -  andIndex i j upperBound j n j
For Ratio - 1
If  Ratio - 1.0
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - for(j=randIndex[i]; j<upperBound && j<n; j++){ //FRATIO768
***
Line 6
LHS - 
RHS -  temp sa sx randIndex j
For Ratio - 1
If  Ratio - 1.0
Scope     - For
ScopeId   - 4
Cycles    - 3
Line	     - temp += sa * sx[randIndex[j]];
***
Line 7
LHS -  sy
RHS -  temp i
For Ratio - 1
If  Ratio - 0.03125
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - sy[i] = temp;
***
***********


TotalTranscendentals - 0
TotalArithmeticInstructions - 147.03125
NumLoadOperations - 72.03125
NumStoreOperations - 1.03125
NumOffsetAccesses -  0
NumIndirectAccesses -  1
NumDoubleAccesses -  0
CriticalPath -  4
nThreadsCount -  1024000
instCountWithFRatio -  4
ninst       -  220.09375
ilp16k       -  208.61503373
ilp32       -  7.7194136183
ilpRate       -  27.0247254578
Warnings!!!!
1. Memory Coalescing Warning - ***randIndex[j]*** is an indirect access in line temp += sa * sx[randIndex[j]];



######################################################
Transcendental Ratio - L
Arithmetic Intensity - M
Global Memory Operation - L
BranchDivergence - H 1.0
ControlDensity -  H
Floating Point Mul/Div - H
Total Instruction - L
Num Threads - 1024000
Critical Path - L
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test13.txt
n = 1024000;

[]
float sx[1024000], sy[1024000];

[]
int randIndex[1024000], window[1024000];

[]
float randArray[1024000];

[]
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
    for (i = 0; i<=n; ++i) { //NTRATIO1024000

scope - pushing For
For count stack - pushing 1
['NTRATIO1024000']
['1024000']
['<=', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
29   /
30   /
28    
 0; i<=n; ++i) {
match
i<=n; ++i) {
/NTRATIO1024000

Division Found
####
30   /
31   N
29   /

NTRATIO1024000

generateAST for for (i = 0; i<=n; ++i) { //NTRATIO1024000
This line is a for
extractEveryVariable
Inserting - for (i = 0; i<=n; ++i) { //NTRATIO1024000
        if(window[i] == 1){		//this condition is met once every 32 iterations //BRATIO0.03125

scope - pushing For
For count stack - pushing 1
[]
['==', '/', '/', '/', '/']
['//', '//']
1
TotalArithmeticInstructions  3
0
0
TotalArithmeticInstructions  3
Checking double store operation
17   [
16   w
        if(window
match
if(window
Checking double store operation - Done
Division Found
####
29   /
30   /
28   	
= 1){		
match
1){
/this condition is met once every 32 iterations //BRATIO0.03125

match
this
35    
Division Found
####
30   /
31   t
29   /

this condition is met once every 32 iterations //BRATIO0.03125

match
this
35    
Division Found
####
78   /
79   /
77    
 condition is met once every 32 iterations
match
is met once every 32 iterations
/BRATIO0.03125

Division Found
####
79   /
80   B
78   /

BRATIO0.03125

Found Control Density
generateAST for if(window[i] == 1){		//this condition is met once every 32 iterations //BRATIO0.03125
if(window[i] == 1){		
if(window[i] == 1){		
if(window[i] == 1){		
if(#1# == 1){		
if(#1# == 1){		
if(#1# == 1){		
0=(#1# == 1)		
0 =  ( #1#    =  =    1 )  	  	 
0 =  ( #1#    =  =    1 )  	  	 
0 =  ( #1#    =  =   #0#)  	  	 
0=(#1#==#0#)
0=(1==0)
Time Taken 2

extractEveryVariable
Inserting - if(window[i] == 1){		//this condition is met once every 32 iterations //BRATIO0.03125
['0.03125']
Bratio found
temp bratio is  1.0
Divergence ratio is  1.0
If ratio stack - pushing 0.03125
            float temp = 0.0f;

[]
[]
[]
0
TotalArithmeticInstructions  3.0
0
0
TotalArithmeticInstructions  3.0
generateAST for float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
#0# = #0#;
#0#    =    #0# ; 
#0#    =    #0# ; 
#0#    =    #0# ; 
#0#=#0#;
0=0
Time Taken 0

extractEveryVariable
Inserting - float temp = 0.0f;
            int upperBound = randIndex[i]+1024;

[]
['+']
[]
1
TotalArithmeticInstructions  3.03125
0
0
TotalArithmeticInstructions  3.03125
Checking double store operation
Checking double store operation - Done
generateAST for int upperBound = randIndex[i]+1024;
int upperBound = randIndex[i]+1024;
int upperBound = randIndex[i]+1024;
int upperBound = randIndex[i]+1024;
int upperBound = #1#+1024;
int upperBound = #1#+1024;
int upperBound = #1#+1024;
#0# = #1#+1024;
#0#    =    #1# + 1024 ; 
#0#    =    #1# + 1024 ; 
#0#    =    #1# +#0#; 
#0#=#1#+#0#;
0=1+0
Time Taken 2

extractEveryVariable
Inserting - int upperBound = randIndex[i]+1024;
            for(j=randIndex[i]; j<upperBound && j<n; j++){ //FRATIO1024

scope - pushing For
[]
FRATIO1024
For count stack - pushing 1024
['<', '&&', '<', '++', '/', '/']
['//']
4
TotalArithmeticInstructions  131.03125
0
0
TotalArithmeticInstructions  131.03125
Checking double store operation
Checking double store operation - Done
Division Found
####
59   /
60   /
58    
randIndex[i]; j<upperBound && j<n; j++){
match
j<upperBound && j<n; j++){
/FRATIO1024

Division Found
####
60   /
61   F
59   /

FRATIO1024

generateAST for for(j=randIndex[i]; j<upperBound && j<n; j++){ //FRATIO1024
This line is a for
extractEveryVariable
Inserting - for(j=randIndex[i]; j<upperBound && j<n; j++){ //FRATIO1024
                temp += sa * (sx[randIndex[j]] + randArray[randIndex[j]]);

[]
['+', '*', '+']
[]
3
TotalArithmeticInstructions  227.03125
1
0
TotalArithmeticInstructions  227.03125
Indirect Warning
Indirect Warning
Checking double store operation
Checking double store operation - Done
####
27   *
28    
26    
 sa
match
sa
 (sx[randIndex[j]] + randArray[randIndex[j]]);

match
sx
32   [
45
generateAST for temp += sa * (sx[randIndex[j]] + randArray[randIndex[j]]);
temp += sa * (sx[randIndex[j]] + randArray[randIndex[j]]);
temp += sa * (sx[randIndex[j]] + randArray[randIndex[j]]);
temp += sa * (#2# + #2#);
temp += sa * (#2# + #2#);
temp += sa * (#2# + #2#);
temp += sa * (#2# + #2#);
#0# += #0# * (#2# + #2#);
#0#    +  =    #0#    *     ( #2#    +    #2# )  ; 
#0#    +  =    #0#    *     ( #2#    +    #2# )  ; 
#0#    +  =    #0#    *     ( #2#    +    #2# )  ; 
#0#+=#0#*(#2#+#2#);
0=0\+0*(2+2)
Time Taken 4

extractEveryVariable
Inserting - temp += sa * (sx[randIndex[j]] + randArray[randIndex[j]]);
Within Fratio
7
            }

Scope Found For, popping, New Length 3
[]
[]
[]
0
TotalArithmeticInstructions  227.03125
0
0
TotalArithmeticInstructions  227.03125
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
            sy[i] = temp;

[]
[]
[]
0
TotalArithmeticInstructions  227.03125
0
0
TotalArithmeticInstructions  227.03125
Checking double store operation
14   [
13   y
            sy
match
sy
Checking double store operation - Done
generateAST for sy[i] = temp;
sy[i] = temp;
sy[i] = temp;
sy[i] = temp;
#1# = temp;
#1# = temp;
#1# = temp;
#1# = #0#;
#1#    =    #0# ; 
#1#    =    #0# ; 
#1#    =    #0# ; 
#1#=#0#;
1=0
Time Taken 1

extractEveryVariable
Inserting - sy[i] = temp;
        }

Scope Found For, popping, New Length 2
[]
[]
[]
0
TotalArithmeticInstructions  227.03125
0
0
TotalArithmeticInstructions  227.03125
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
    }

Scope Found For, popping, New Length 1
[]
[]
[]
0
TotalArithmeticInstructions  227.03125
0
0
TotalArithmeticInstructions  227.03125
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  227.03125
0
0
TotalArithmeticInstructions  227.03125
Annotation End Found
ILP!!!
******
0
for(j=randIndex[i]; j<upperBound && j<n; j++){ //FRATIO1024
[]
[1]
1
1.0
1


1
temp += sa * (sx[randIndex[j]] + randArray[randIndex[j]]);
[0]
[]
4
1.0
1


******
Node 0's -
[0]
DFS Stack - pushing 0
[1.0, -999]
DFS Stack - pushing 1
(0,1.0)
(1,4.0)
5
Selected!
[1.0, 5]
[5]
######################################################
**********
The values of this entry are
Name                 -  upperBound
Scope                -  For
varType              -  0
size                 -  1
value                -  1024
iteratorVar          -  True
**********
The values of this entry are
Name                 -  temp
Scope                -  For
varType              -  1
size                 -  1
value                -  0
iteratorVar          -  True
**********
The values of this entry are
Name                 -  sx
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  randArray
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  randIndex
Scope                -  Global
varType              -  0
size                 -  1024000
value                -  None
iteratorVar          -  False
**********
***********
Line 1
LHS -  for i
RHS -  i n i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - for (i = 0; i<=n; ++i) { //NTRATIO1024000
***
Line 2
LHS - 
RHS -  window i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 2
Line	     - if(window[i] == 1){		//this condition is met once every 32 iterations //BRATIO0.03125
***
Line 3
LHS -  temp
RHS -  f
For Ratio - 1
If  Ratio - 0.03125
Scope     - For
ScopeId   - 3
Cycles    - 0
Line	     - float temp = 0.0f;
***
Line 4
LHS -  upperBound
RHS -  randIndex i
For Ratio - 1
If  Ratio - 0.03125
Scope     - For
ScopeId   - 3
Cycles    - 2
Line	     - int upperBound = randIndex[i]+1024;
***
Line 5
LHS -  for j
RHS -  andIndex i j upperBound j n j
For Ratio - 1
If  Ratio - 1.0
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - for(j=randIndex[i]; j<upperBound && j<n; j++){ //FRATIO1024
***
Line 6
LHS - 
RHS -  temp sa sx randIndex j randArray randIndex j
For Ratio - 1
If  Ratio - 1.0
Scope     - For
ScopeId   - 4
Cycles    - 4
Line	     - temp += sa * (sx[randIndex[j]] + randArray[randIndex[j]]);
***
Line 7
LHS -  sy
RHS -  temp i
For Ratio - 1
If  Ratio - 0.03125
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - sy[i] = temp;
***
***********


TotalTranscendentals - 0
TotalArithmeticInstructions - 227.03125
NumLoadOperations - 160.03125
NumStoreOperations - 1.03125
NumOffsetAccesses -  0
NumIndirectAccesses -  2
NumDoubleAccesses -  0
CriticalPath -  5
nThreadsCount -  1024000
instCountWithFRatio -  7
ninst       -  388.09375
ilp16k       -  346.116931867
ilp32       -  6.29617072514
ilpRate       -  54.972609063
Warnings!!!!
1. Memory Coalescing Warning - ***randIndex[j]*** is an indirect access in line temp += sa * (sx[randIndex[j]] + randArray[randIndex[j]]);

2. Memory Coalescing Warning - ***randIndex[j]*** is an indirect access in line temp += sa * (sx[randIndex[j]] + randArray[randIndex[j]]);



######################################################
Transcendental Ratio - L
Arithmetic Intensity - M
Global Memory Operation - L
BranchDivergence - H 1.0
ControlDensity -  H
Floating Point Mul/Div - H
Total Instruction - L
Num Threads - 1024000
Critical Path - L
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test14.txt
n = 1024000;

[]
float sx[1024000], sy[1024000];

[]
int randIndex[1024000], window[1024000], emrIndex[1024000];

[]
float randArray[1024000];

[]
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
    for (i = 0; i<=n; ++i) { //NTRATIO1024000

scope - pushing For
For count stack - pushing 1
['NTRATIO1024000']
['1024000']
['<=', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
29   /
30   /
28    
 0; i<=n; ++i) {
match
i<=n; ++i) {
/NTRATIO1024000

Division Found
####
30   /
31   N
29   /

NTRATIO1024000

generateAST for for (i = 0; i<=n; ++i) { //NTRATIO1024000
This line is a for
extractEveryVariable
Inserting - for (i = 0; i<=n; ++i) { //NTRATIO1024000
        if(window[i] == 1){		//this condition is met once every 32 iterations //BRATIO0.03125

scope - pushing For
For count stack - pushing 1
[]
['==', '/', '/', '/', '/']
['//', '//']
1
TotalArithmeticInstructions  3
0
0
TotalArithmeticInstructions  3
Checking double store operation
17   [
16   w
        if(window
match
if(window
Checking double store operation - Done
Division Found
####
29   /
30   /
28   	
= 1){		
match
1){
/this condition is met once every 32 iterations //BRATIO0.03125

match
this
35    
Division Found
####
30   /
31   t
29   /

this condition is met once every 32 iterations //BRATIO0.03125

match
this
35    
Division Found
####
78   /
79   /
77    
 condition is met once every 32 iterations
match
is met once every 32 iterations
/BRATIO0.03125

Division Found
####
79   /
80   B
78   /

BRATIO0.03125

Found Control Density
generateAST for if(window[i] == 1){		//this condition is met once every 32 iterations //BRATIO0.03125
if(window[i] == 1){		
if(window[i] == 1){		
if(window[i] == 1){		
if(#1# == 1){		
if(#1# == 1){		
if(#1# == 1){		
0=(#1# == 1)		
0 =  ( #1#    =  =    1 )  	  	 
0 =  ( #1#    =  =    1 )  	  	 
0 =  ( #1#    =  =   #0#)  	  	 
0=(#1#==#0#)
0=(1==0)
Time Taken 2

extractEveryVariable
Inserting - if(window[i] == 1){		//this condition is met once every 32 iterations //BRATIO0.03125
['0.03125']
Bratio found
temp bratio is  1.0
Divergence ratio is  1.0
If ratio stack - pushing 0.03125
            float temp = 0.0f;

[]
[]
[]
0
TotalArithmeticInstructions  3.0
0
0
TotalArithmeticInstructions  3.0
generateAST for float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
#0# = #0#;
#0#    =    #0# ; 
#0#    =    #0# ; 
#0#    =    #0# ; 
#0#=#0#;
0=0
Time Taken 0

extractEveryVariable
Inserting - float temp = 0.0f;
            int upperBound = randIndex[i]+1024;

[]
['+']
[]
1
TotalArithmeticInstructions  3.03125
0
0
TotalArithmeticInstructions  3.03125
Checking double store operation
Checking double store operation - Done
generateAST for int upperBound = randIndex[i]+1024;
int upperBound = randIndex[i]+1024;
int upperBound = randIndex[i]+1024;
int upperBound = randIndex[i]+1024;
int upperBound = #1#+1024;
int upperBound = #1#+1024;
int upperBound = #1#+1024;
#0# = #1#+1024;
#0#    =    #1# + 1024 ; 
#0#    =    #1# + 1024 ; 
#0#    =    #1# +#0#; 
#0#=#1#+#0#;
0=1+0
Time Taken 2

extractEveryVariable
Inserting - int upperBound = randIndex[i]+1024;
            for(j=randIndex[i]; j<upperBound && j<n && emrIndex[j]<n; j++){ //FRATIO1024

scope - pushing For
[]
FRATIO1024
For count stack - pushing 1024
['<', '&&', '<', '&&', '<', '++', '/', '/']
['//']
6
TotalArithmeticInstructions  195.03125
0
0
TotalArithmeticInstructions  195.03125
Checking double store operation
Checking double store operation - Done
Division Found
####
76   /
77   /
75    
randIndex[i]; j<upperBound && j<n && emrIndex[j]<n; j++){
match
j<upperBound && j<n && emrIndex[j]<n; j++){
/FRATIO1024

Division Found
####
77   /
78   F
76   /

FRATIO1024

generateAST for for(j=randIndex[i]; j<upperBound && j<n && emrIndex[j]<n; j++){ //FRATIO1024
This line is a for
extractEveryVariable
Inserting - for(j=randIndex[i]; j<upperBound && j<n && emrIndex[j]<n; j++){ //FRATIO1024
                temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);

[]
['+', '*', '+']
[]
3
TotalArithmeticInstructions  291.03125
1
0
TotalArithmeticInstructions  291.03125
Indirect Warning
Indirect Warning
Checking double store operation
Checking double store operation - Done
####
27   *
28    
26    
 sa
match
sa
 (sx[randIndex[j]] + sx[emrIndex[j]]);

match
sx
32   [
45
generateAST for temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);
temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);
temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);
temp += sa * (#2# + #2#);
temp += sa * (#2# + #2#);
temp += sa * (#2# + #2#);
temp += sa * (#2# + #2#);
#0# += #0# * (#2# + #2#);
#0#    +  =    #0#    *     ( #2#    +    #2# )  ; 
#0#    +  =    #0#    *     ( #2#    +    #2# )  ; 
#0#    +  =    #0#    *     ( #2#    +    #2# )  ; 
#0#+=#0#*(#2#+#2#);
0=0\+0*(2+2)
Time Taken 4

extractEveryVariable
Inserting - temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);
Within Fratio
7
            }

Scope Found For, popping, New Length 3
[]
[]
[]
0
TotalArithmeticInstructions  291.03125
0
0
TotalArithmeticInstructions  291.03125
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
            sy[i] = temp;

[]
[]
[]
0
TotalArithmeticInstructions  291.03125
0
0
TotalArithmeticInstructions  291.03125
Checking double store operation
14   [
13   y
            sy
match
sy
Checking double store operation - Done
generateAST for sy[i] = temp;
sy[i] = temp;
sy[i] = temp;
sy[i] = temp;
#1# = temp;
#1# = temp;
#1# = temp;
#1# = #0#;
#1#    =    #0# ; 
#1#    =    #0# ; 
#1#    =    #0# ; 
#1#=#0#;
1=0
Time Taken 1

extractEveryVariable
Inserting - sy[i] = temp;
        }

Scope Found For, popping, New Length 2
[]
[]
[]
0
TotalArithmeticInstructions  291.03125
0
0
TotalArithmeticInstructions  291.03125
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
    }

Scope Found For, popping, New Length 1
[]
[]
[]
0
TotalArithmeticInstructions  291.03125
0
0
TotalArithmeticInstructions  291.03125
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  291.03125
0
0
TotalArithmeticInstructions  291.03125
Annotation End Found
ILP!!!
******
0
for(j=randIndex[i]; j<upperBound && j<n && emrIndex[j]<n; j++){ //FRATIO1024
[]
[1]
1
1.0
1


1
temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);
[0]
[]
4
1.0
1


******
Node 0's -
[0]
DFS Stack - pushing 0
[1.0, -999]
DFS Stack - pushing 1
(0,1.0)
(1,4.0)
5
Selected!
[1.0, 5]
[5]
######################################################
**********
The values of this entry are
Name                 -  upperBound
Scope                -  For
varType              -  0
size                 -  1
value                -  1024
iteratorVar          -  True
**********
The values of this entry are
Name                 -  temp
Scope                -  For
varType              -  1
size                 -  1
value                -  0
iteratorVar          -  True
**********
The values of this entry are
Name                 -  sx
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  randArray
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  randIndex
Scope                -  Global
varType              -  0
size                 -  1024000
value                -  None
iteratorVar          -  False
**********
***********
Line 1
LHS -  for i
RHS -  i n i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - for (i = 0; i<=n; ++i) { //NTRATIO1024000
***
Line 2
LHS - 
RHS -  window i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 2
Line	     - if(window[i] == 1){		//this condition is met once every 32 iterations //BRATIO0.03125
***
Line 3
LHS -  temp
RHS -  f
For Ratio - 1
If  Ratio - 0.03125
Scope     - For
ScopeId   - 3
Cycles    - 0
Line	     - float temp = 0.0f;
***
Line 4
LHS -  upperBound
RHS -  randIndex i
For Ratio - 1
If  Ratio - 0.03125
Scope     - For
ScopeId   - 3
Cycles    - 2
Line	     - int upperBound = randIndex[i]+1024;
***
Line 5
LHS -  for j
RHS -  andIndex i j upperBound j n emrIndex j n j
For Ratio - 1
If  Ratio - 1.0
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - for(j=randIndex[i]; j<upperBound && j<n && emrIndex[j]<n; j++){ //FRATIO1024
***
Line 6
LHS - 
RHS -  temp sa sx randIndex j sx emrIndex j
For Ratio - 1
If  Ratio - 1.0
Scope     - For
ScopeId   - 4
Cycles    - 4
Line	     - temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);
***
Line 7
LHS -  sy
RHS -  temp i
For Ratio - 1
If  Ratio - 0.03125
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - sy[i] = temp;
***
***********


TotalTranscendentals - 0
TotalArithmeticInstructions - 291.03125
NumLoadOperations - 192.03125
NumStoreOperations - 1.03125
NumOffsetAccesses -  0
NumIndirectAccesses -  2
NumDoubleAccesses -  0
CriticalPath -  5
nThreadsCount -  1024000
instCountWithFRatio -  7
ninst       -  484.09375
ilp16k       -  420.48332782
ilp32       -  6.31649231004
ilpRate       -  66.5691189319
Warnings!!!!
1. Memory Coalescing Warning - ***randIndex[j]*** is an indirect access in line temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);

2. Memory Coalescing Warning - ***emrIndex[j]*** is an indirect access in line temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);



######################################################
Transcendental Ratio - L
Arithmetic Intensity - M
Global Memory Operation - L
BranchDivergence - H 1.0
ControlDensity -  H
Floating Point Mul/Div - H
Total Instruction - L
Num Threads - 1024000
Critical Path - L
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test15.txt
n = 1024000;

[]
float sx[1024000], sy[1024000];

[]
int randIndex[1024000], window[1024000], emrIndex[1024000];

[]
float randArray[1024000];

[]
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
    for (i = 0; i<=n; ++i) { //NTRATIO1024000

scope - pushing For
For count stack - pushing 1
['NTRATIO1024000']
['1024000']
['<=', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
29   /
30   /
28    
 0; i<=n; ++i) {
match
i<=n; ++i) {
/NTRATIO1024000

Division Found
####
30   /
31   N
29   /

NTRATIO1024000

generateAST for for (i = 0; i<=n; ++i) { //NTRATIO1024000
This line is a for
extractEveryVariable
Inserting - for (i = 0; i<=n; ++i) { //NTRATIO1024000
        if(window[i] == 1){				//this condition is met once every 32 iterations //BRATIO0.03125

scope - pushing For
For count stack - pushing 1
[]
['==', '/', '/', '/', '/']
['//', '//']
1
TotalArithmeticInstructions  3
0
0
TotalArithmeticInstructions  3
Checking double store operation
17   [
16   w
        if(window
match
if(window
Checking double store operation - Done
Division Found
####
31   /
32   /
30   	
= 1){				
match
1){
/this condition is met once every 32 iterations //BRATIO0.03125

match
this
37    
Division Found
####
32   /
33   t
31   /

this condition is met once every 32 iterations //BRATIO0.03125

match
this
37    
Division Found
####
80   /
81   /
79    
 condition is met once every 32 iterations
match
is met once every 32 iterations
/BRATIO0.03125

Division Found
####
81   /
82   B
80   /

BRATIO0.03125

Found Control Density
generateAST for if(window[i] == 1){				//this condition is met once every 32 iterations //BRATIO0.03125
if(window[i] == 1){				
if(window[i] == 1){				
if(window[i] == 1){				
if(#1# == 1){				
if(#1# == 1){				
if(#1# == 1){				
0=(#1# == 1)				
0 =  ( #1#    =  =    1 )  	  	  	  	 
0 =  ( #1#    =  =    1 )  	  	  	  	 
0 =  ( #1#    =  =   #0#)  	  	  	  	 
0=(#1#==#0#)
0=(1==0)
Time Taken 2

extractEveryVariable
Inserting - if(window[i] == 1){				//this condition is met once every 32 iterations //BRATIO0.03125
['0.03125']
Bratio found
temp bratio is  1.0
Divergence ratio is  1.0
If ratio stack - pushing 0.03125
            float temp = 0.0f;

[]
[]
[]
0
TotalArithmeticInstructions  3.0
0
0
TotalArithmeticInstructions  3.0
generateAST for float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
#0# = #0#;
#0#    =    #0# ; 
#0#    =    #0# ; 
#0#    =    #0# ; 
#0#=#0#;
0=0
Time Taken 0

extractEveryVariable
Inserting - float temp = 0.0f;
            int upperBound1, upperBound2;

[]
[]
[]
0
TotalArithmeticInstructions  3.0
0
0
TotalArithmeticInstructions  3.0
generateAST for int upperBound1, upperBound2;
int upperBound1, upperBound2;
int upperBound1, upperBound2;
int upperBound1, upperBound2;
int upperBound1, upperBound2;
int upperBound1, upperBound2;
int upperBound1, upperBound2;
#0#, #0#;
#0# ,    #0# ; 
#0# ,    #0# ; 
#0# ,    #0# ; 
#0#,#0#;
0,0
This line does not have an =
extractEveryVariable
Inserting - int upperBound1, upperBound2;
            if(emrIndex[i] > randIndex[i]){		//taken for 50% of the iterations //BRATIO0.03125 BRATIO0.5

scope - pushing For
For count stack - pushing 1
[]
['>', '/', '/', '/', '/']
['//', '//']
1
TotalArithmeticInstructions  3.03125
0
0
TotalArithmeticInstructions  3.03125
Checking double store operation
Checking double store operation - Done
Division Found
####
45   /
46   /
44   	
            if(emrIndex[i] > randIndex[i]){		
match
emrIndex[i] > randIndex[i]){
/taken for 50% of the iterations //BRATIO0.03125 BRATIO0.5

match
taken
52    
Division Found
####
46   /
47   t
45   /

taken for 50% of the iterations //BRATIO0.03125 BRATIO0.5

match
taken
52    
Division Found
####
79   /
80   /
78    
 for 50% of the iterations
match
50% of the iterations
/BRATIO0.03125 BRATIO0.5

match
BRATIO0.03125
94    
Division Found
####
80   /
81   B
79   /

BRATIO0.03125 BRATIO0.5

match
BRATIO0.03125
94    
Found Control Density
generateAST for if(emrIndex[i] > randIndex[i]){		//taken for 50% of the iterations //BRATIO0.03125 BRATIO0.5
if(emrIndex[i] > randIndex[i]){		
if(emrIndex[i] > randIndex[i]){		
if(emrIndex[i] > randIndex[i]){		
if(#1# > #1#){		
if(#1# > #1#){		
if(#1# > #1#){		
0=(#1# > #1#)		
0 =  ( #1#    >    #1# )  	  	 
0 =  ( #1#    >    #1# )  	  	 
0 =  ( #1#    >    #1# )  	  	 
0=(#1#>#1#)
0=(1>1)
This line does not have an =
extractEveryVariable
Inserting - if(emrIndex[i] > randIndex[i]){		//taken for 50% of the iterations //BRATIO0.03125 BRATIO0.5
['0.03125']
['0.5']
Bratio found
temp bratio is  0.5
Divergence ratio using old  1.0
If ratio stack - pushing 0.015625
                upperBound1 = emrIndex[i];

[]
[]
[]
0
TotalArithmeticInstructions  3.03125
0
0
TotalArithmeticInstructions  3.03125
Checking double store operation
Checking double store operation - Done
generateAST for upperBound1 = emrIndex[i];
upperBound1 = emrIndex[i];
upperBound1 = emrIndex[i];
upperBound1 = emrIndex[i];
upperBound1 = #1#;
upperBound1 = #1#;
upperBound1 = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - upperBound1 = emrIndex[i];
                upperBound2 = randIndex[i]+1024;

[]
['+']
[]
1
TotalArithmeticInstructions  3.046875
0
0
TotalArithmeticInstructions  3.046875
Checking double store operation
Checking double store operation - Done
generateAST for upperBound2 = randIndex[i]+1024;
upperBound2 = randIndex[i]+1024;
upperBound2 = randIndex[i]+1024;
upperBound2 = randIndex[i]+1024;
upperBound2 = #1#+1024;
upperBound2 = #1#+1024;
upperBound2 = #1#+1024;
#0# = #1#+1024;
#0#    =    #1# + 1024 ; 
#0#    =    #1# + 1024 ; 
#0#    =    #1# +#0#; 
#0#=#1#+#0#;
0=1+0
Time Taken 2

extractEveryVariable
Inserting - upperBound2 = randIndex[i]+1024;
                for(j=randIndex[i]; j<upperBound1 && j<upperBound2 && emrIndex[j]<n && j<n; j++){ //FRATIO1024

scope - pushing For
[]
FRATIO1024
For count stack - pushing 1024
['<', '&&', '<', '&&', '<', '&&', '<', '++', '/', '/']
['//']
8
TotalArithmeticInstructions  131.046875
0
0
TotalArithmeticInstructions  131.046875
Checking double store operation
Checking double store operation - Done
Division Found
####
98   /
99   /
97    
randIndex[i]; j<upperBound1 && j<upperBound2 && emrIndex[j]<n && j<n; j++){
match
j<upperBound1 && j<upperBound2 && emrIndex[j]<n && j<n; j++){
/FRATIO1024

Division Found
####
99   /
100   F
98   /

FRATIO1024

generateAST for for(j=randIndex[i]; j<upperBound1 && j<upperBound2 && emrIndex[j]<n && j<n; j++){ //FRATIO1024
This line is a for
extractEveryVariable
Inserting - for(j=randIndex[i]; j<upperBound1 && j<upperBound2 && emrIndex[j]<n && j<n; j++){ //FRATIO1024
                    temp += sa * (sx[randIndex[emrIndex[j]]] + sx[emrIndex[j]]);

[]
['+', '*', '+']
[]
3
TotalArithmeticInstructions  179.046875
1
0
TotalArithmeticInstructions  179.046875
Indirect Warning
Indirect Warning
Checking double store operation
Checking double store operation - Done
####
31   *
32    
30    
 sa
match
sa
 (sx[randIndex[emrIndex[j]]] + sx[emrIndex[j]]);

match
sx
36   [
58
generateAST for temp += sa * (sx[randIndex[emrIndex[j]]] + sx[emrIndex[j]]);
temp += sa * (sx[randIndex[emrIndex[j]]] + sx[emrIndex[j]]);
temp += sa * (#3# + sx[emrIndex[j]]);
temp += sa * (#3# + #2#);
temp += sa * (#3# + #2#);
temp += sa * (#3# + #2#);
temp += sa * (#3# + #2#);
#0# += #0# * (#3# + #2#);
#0#    +  =    #0#    *     ( #3#    +    #2# )  ; 
#0#    +  =    #0#    *     ( #3#    +    #2# )  ; 
#0#    +  =    #0#    *     ( #3#    +    #2# )  ; 
#0#+=#0#*(#3#+#2#);
0=0\+0*(3+2)
Time Taken 5

extractEveryVariable
Inserting - temp += sa * (sx[randIndex[emrIndex[j]]] + sx[emrIndex[j]]);
Within Fratio
8
                } 

Scope Found For, popping, New Length 4
[]
[]
[]
0
TotalArithmeticInstructions  179.046875
0
0
TotalArithmeticInstructions  179.046875
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
            }

Scope Found For, popping, New Length 3
[]
[]
[]
0
TotalArithmeticInstructions  179.046875
0
0
TotalArithmeticInstructions  179.046875
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
	    else{//BRATIO0.03125 //BRATIO0.5

scope - pushing if
[]
['/', '/', '/', '/']
['//', '//']
0
TotalArithmeticInstructions  179.046875
0
0
TotalArithmeticInstructions  179.046875
Division Found
####
10   /
11   /
9   {
	    else{
/BRATIO0.03125 //BRATIO0.5

match
BRATIO0.03125
25    
Division Found
####
11   /
12   B
10   /

BRATIO0.03125 //BRATIO0.5

match
BRATIO0.03125
25    
Division Found
####
26   /
27   /
25    

/BRATIO0.5

Division Found
####
27   /
28   B
26   /

BRATIO0.5

generateAST for else{//BRATIO0.03125 //BRATIO0.5
else{
else{
else{
else{
else{
else{
#0#
#0#
#0#
#0#
#0#
0
This line does not have an =
extractEveryVariable
Inserting - else{//BRATIO0.03125 //BRATIO0.5
['0.03125']
['0.5']
Bratio found
temp bratio is  0.5
Divergence ratio using old  1.0
If ratio stack - pushing 0.015625
                upperBound1 = randIndex[i];

[]
[]
[]
0
TotalArithmeticInstructions  179.046875
0
0
TotalArithmeticInstructions  179.046875
Checking double store operation
Checking double store operation - Done
generateAST for upperBound1 = randIndex[i];
upperBound1 = randIndex[i];
upperBound1 = randIndex[i];
upperBound1 = randIndex[i];
upperBound1 = #1#;
upperBound1 = #1#;
upperBound1 = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - upperBound1 = randIndex[i];
                upperBound2 = emrIndex[i]+768;

[]
['+']
[]
1
TotalArithmeticInstructions  179.0625
0
0
TotalArithmeticInstructions  179.0625
Checking double store operation
Checking double store operation - Done
generateAST for upperBound2 = emrIndex[i]+768;
upperBound2 = emrIndex[i]+768;
upperBound2 = emrIndex[i]+768;
upperBound2 = emrIndex[i]+768;
upperBound2 = #1#+768;
upperBound2 = #1#+768;
upperBound2 = #1#+768;
#0# = #1#+768;
#0#    =    #1# + 768 ; 
#0#    =    #1# + 768 ; 
#0#    =    #1# +#0#; 
#0#=#1#+#0#;
0=1+0
Time Taken 2

extractEveryVariable
Inserting - upperBound2 = emrIndex[i]+768;
                for(j=emrIndex[i]; j<upperBound1 && j<upperBound2 && emrIndex[j]<n && j<n; j++){ //FRATIO1024

scope - pushing For
[]
FRATIO1024
For count stack - pushing 1024
['<', '&&', '<', '&&', '<', '&&', '<', '++', '/', '/']
['//']
8
TotalArithmeticInstructions  307.0625
0
0
TotalArithmeticInstructions  307.0625
Checking double store operation
Checking double store operation - Done
Division Found
####
97   /
98   /
96    
emrIndex[i]; j<upperBound1 && j<upperBound2 && emrIndex[j]<n && j<n; j++){
match
j<upperBound1 && j<upperBound2 && emrIndex[j]<n && j<n; j++){
/FRATIO1024

Division Found
####
98   /
99   F
97   /

FRATIO1024

generateAST for for(j=emrIndex[i]; j<upperBound1 && j<upperBound2 && emrIndex[j]<n && j<n; j++){ //FRATIO1024
This line is a for
extractEveryVariable
Inserting - for(j=emrIndex[i]; j<upperBound1 && j<upperBound2 && emrIndex[j]<n && j<n; j++){ //FRATIO1024
Within Fratio
16
                    temp += sa * (sx[randIndex[emrIndex[j]]] + sx[emrIndex[randIndex[j]]]);

[]
['+', '*', '+']
[]
3
TotalArithmeticInstructions  355.0625
1
0
TotalArithmeticInstructions  355.0625
Indirect Warning
Indirect Warning
Checking double store operation
Checking double store operation - Done
####
31   *
32    
30    
 sa
match
sa
 (sx[randIndex[emrIndex[j]]] + sx[emrIndex[randIndex[j]]]);

match
sx
36   [
58
generateAST for temp += sa * (sx[randIndex[emrIndex[j]]] + sx[emrIndex[randIndex[j]]]);
temp += sa * (sx[randIndex[emrIndex[j]]] + sx[emrIndex[randIndex[j]]]);
temp += sa * (#3# + #3#);
temp += sa * (#3# + #3#);
temp += sa * (#3# + #3#);
temp += sa * (#3# + #3#);
temp += sa * (#3# + #3#);
#0# += #0# * (#3# + #3#);
#0#    +  =    #0#    *     ( #3#    +    #3# )  ; 
#0#    +  =    #0#    *     ( #3#    +    #3# )  ; 
#0#    +  =    #0#    *     ( #3#    +    #3# )  ; 
#0#+=#0#*(#3#+#3#);
0=0\+0*(3+3)
Time Taken 5

extractEveryVariable
Inserting - temp += sa * (sx[randIndex[emrIndex[j]]] + sx[emrIndex[randIndex[j]]]);
Within Fratio
25
                }

Scope Found For, popping, New Length 3
[]
[]
[]
0
TotalArithmeticInstructions  355.0625
0
0
TotalArithmeticInstructions  355.0625
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
            }

Scope Found if, popping, New Length 3
[]
[]
[]
0
TotalArithmeticInstructions  355.0625
0
0
TotalArithmeticInstructions  355.0625
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
            sy[i] = temp;

[]
[]
[]
0
TotalArithmeticInstructions  355.0625
0
0
TotalArithmeticInstructions  355.0625
Checking double store operation
14   [
13   y
            sy
match
sy
Checking double store operation - Done
generateAST for sy[i] = temp;
sy[i] = temp;
sy[i] = temp;
sy[i] = temp;
#1# = temp;
#1# = temp;
#1# = temp;
#1# = #0#;
#1#    =    #0# ; 
#1#    =    #0# ; 
#1#    =    #0# ; 
#1#=#0#;
1=0
Time Taken 1

extractEveryVariable
Inserting - sy[i] = temp;
        }

Scope Found For, popping, New Length 2
[]
[]
[]
0
TotalArithmeticInstructions  355.0625
0
0
TotalArithmeticInstructions  355.0625
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
    }

Scope Found For, popping, New Length 1
[]
[]
[]
0
TotalArithmeticInstructions  355.0625
0
0
TotalArithmeticInstructions  355.0625
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  355.0625
0
0
TotalArithmeticInstructions  355.0625
Annotation End Found
ILP!!!
******
0
for(j=randIndex[i]; j<upperBound1 && j<upperBound2 && emrIndex[j]<n && j<n; j++){ //FRATIO1024
[]
[1, 2, 3]
1
1.0
1


1
temp += sa * (sx[randIndex[emrIndex[j]]] + sx[emrIndex[j]]);
[0]
[]
5
1.0
1


2
for(j=emrIndex[i]; j<upperBound1 && j<upperBound2 && emrIndex[j]<n && j<n; j++){ //FRATIO1024
[0]
[3]
1
1.0
1


3
temp += sa * (sx[randIndex[emrIndex[j]]] + sx[emrIndex[randIndex[j]]]);
[0, 2]
[]
5
1.0
1


******
Node 0's -
[0]
DFS Stack - pushing 0
[1.0, -999, -999, -999]
DFS Stack - pushing 1
(0,1.0)
(1,5.0)
6
Selected!
DFS Stack - pushing 2
(0,1.0)
(2,1.0)
2
Selected!
DFS Stack - pushing 3
(0,1.0)
(3,5.0)
6
Selected!
[1.0, 6, 2, 6]
[1.0, 6, 2, 6]
[1.0, 6, 2, 6]
[6]
######################################################
**********
The values of this entry are
Name                 -  temp
Scope                -  For
varType              -  1
size                 -  1
value                -  0
iteratorVar          -  True
**********
The values of this entry are
Name                 -  sx
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  upperBound1
Scope                -  For
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  True
**********
The values of this entry are
Name                 -  randArray
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  randIndex
Scope                -  Global
varType              -  0
size                 -  1024000
value                -  None
iteratorVar          -  False
**********
***********
Line 1
LHS -  for i
RHS -  i n i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - for (i = 0; i<=n; ++i) { //NTRATIO1024000
***
Line 2
LHS - 
RHS -  window i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 2
Line	     - if(window[i] == 1){				//this condition is met once every 32 iterations //BRATIO0.03125
***
Line 3
LHS -  temp
RHS -  f
For Ratio - 1
If  Ratio - 0.03125
Scope     - For
ScopeId   - 3
Cycles    - 0
Line	     - float temp = 0.0f;
***
Line 4
LHS - 
RHS -  upperBound upperBound
For Ratio - 1
If  Ratio - 0.03125
Scope     - For
ScopeId   - 3
Cycles    - 0
Line	     - int upperBound1, upperBound2;
***
Line 5
LHS - 
RHS -  emrIndex i randIndex i
For Ratio - 1
If  Ratio - 0.03125
Scope     - For
ScopeId   - 4
Cycles    - 0
Line	     - if(emrIndex[i] > randIndex[i]){		//taken for 50% of the iterations //BRATIO0.03125 BRATIO0.5
***
Line 6
LHS -  upperBound
RHS -  emrIndex i
For Ratio - 1
If  Ratio - 0.015625
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - upperBound1 = emrIndex[i];
***
Line 7
LHS -  upperBound
RHS -  randIndex i
For Ratio - 1
If  Ratio - 0.015625
Scope     - For
ScopeId   - 4
Cycles    - 2
Line	     - upperBound2 = randIndex[i]+1024;
***
Line 8
LHS -  for j
RHS -  andIndex i j upperBound j upperBound emrIndex j n j n j
For Ratio - 1
If  Ratio - 1.0
Scope     - For
ScopeId   - 5
Cycles    - 1
Line	     - for(j=randIndex[i]; j<upperBound1 && j<upperBound2 && emrIndex[j]<n && j<n; j++){ //FRATIO1024
***
Line 9
LHS - 
RHS -  temp sa sx randIndex emrIndex j sx emrIndex j
For Ratio - 1
If  Ratio - 1.0
Scope     - For
ScopeId   - 5
Cycles    - 5
Line	     - temp += sa * (sx[randIndex[emrIndex[j]]] + sx[emrIndex[j]]);
***
Line 10
LHS - 
RHS -  else
For Ratio - 1
If  Ratio - 0.015625
Scope     - if
ScopeId   - 4
Cycles    - 0
Line	     - else{//BRATIO0.03125 //BRATIO0.5
***
Line 11
LHS -  upperBound
RHS -  randIndex i
For Ratio - 1
If  Ratio - 0.015625
Scope     - if
ScopeId   - 4
Cycles    - 1
Line	     - upperBound1 = randIndex[i];
***
Line 12
LHS -  upperBound
RHS -  emrIndex i
For Ratio - 1
If  Ratio - 0.015625
Scope     - if
ScopeId   - 4
Cycles    - 2
Line	     - upperBound2 = emrIndex[i]+768;
***
Line 13
LHS -  for j
RHS -  mrIndex i j upperBound j upperBound emrIndex j n j n j
For Ratio - 1
If  Ratio - 1.0
Scope     - For
ScopeId   - 5
Cycles    - 1
Line	     - for(j=emrIndex[i]; j<upperBound1 && j<upperBound2 && emrIndex[j]<n && j<n; j++){ //FRATIO1024
***
Line 14
LHS - 
RHS -  temp sa sx randIndex emrIndex j sx emrIndex randIndex j
For Ratio - 1
If  Ratio - 1.0
Scope     - For
ScopeId   - 5
Cycles    - 5
Line	     - temp += sa * (sx[randIndex[emrIndex[j]]] + sx[emrIndex[randIndex[j]]]);
***
Line 15
LHS -  sy
RHS -  temp i
For Ratio - 1
If  Ratio - 0.015625
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - sy[i] = temp;
***
***********


TotalTranscendentals - 0
TotalArithmeticInstructions - 355.0625
NumLoadOperations - 240.125
NumStoreOperations - 1.015625
NumOffsetAccesses -  0
NumIndirectAccesses -  7
NumDoubleAccesses -  0
CriticalPath -  6
nThreadsCount -  1024000
instCountWithFRatio -  25
ninst       -  596.203125
ilp16k       -  487.262778325
ilp32       -  5.28604701502
ilpRate       -  92.1790473941
Warnings!!!!
1. Memory Coalescing Warning - ***randIndex[emrIndex[j]*** is an indirect access in line temp += sa * (sx[randIndex[emrIndex[j]]] + sx[emrIndex[j]]);

2. Memory Coalescing Warning - ***emrIndex[j]*** is an indirect access in line temp += sa * (sx[randIndex[emrIndex[j]]] + sx[emrIndex[j]]);

3. Memory Coalescing Warning - ***randIndex[emrIndex[j]*** is an indirect access in line temp += sa * (sx[randIndex[emrIndex[j]]] + sx[emrIndex[randIndex[j]]]);

4. Memory Coalescing Warning - ***emrIndex[randIndex[j]*** is an indirect access in line temp += sa * (sx[randIndex[emrIndex[j]]] + sx[emrIndex[randIndex[j]]]);



######################################################
Transcendental Ratio - L
Arithmetic Intensity - M
Global Memory Operation - L
BranchDivergence - H 1.0
ControlDensity -  H
Floating Point Mul/Div - H
Total Instruction - L
Num Threads - 1024000
Critical Path - L
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test16.txt
n = 1024000;

[]
float sx[1024000], sy[1024000];

[]
int randIndex[1024000], window[1024000], emrIndex[1024000];

[]
float randArray[1024000];

[]
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
    for (i = 0; i<=n; ++i) { //NTRATIO1024000

scope - pushing For
For count stack - pushing 1
['NTRATIO1024000']
['1024000']
['<=', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
29   /
30   /
28    
 0; i<=n; ++i) {
match
i<=n; ++i) {
/NTRATIO1024000

Division Found
####
30   /
31   N
29   /

NTRATIO1024000

generateAST for for (i = 0; i<=n; ++i) { //NTRATIO1024000
This line is a for
extractEveryVariable
Inserting - for (i = 0; i<=n; ++i) { //NTRATIO1024000
        if(window[i] == 1){				//this condition is met once every 32 iterations //BRATIO0.03125

scope - pushing For
For count stack - pushing 1
[]
['==', '/', '/', '/', '/']
['//', '//']
1
TotalArithmeticInstructions  3
0
0
TotalArithmeticInstructions  3
Checking double store operation
17   [
16   w
        if(window
match
if(window
Checking double store operation - Done
Division Found
####
31   /
32   /
30   	
= 1){				
match
1){
/this condition is met once every 32 iterations //BRATIO0.03125

match
this
37    
Division Found
####
32   /
33   t
31   /

this condition is met once every 32 iterations //BRATIO0.03125

match
this
37    
Division Found
####
80   /
81   /
79    
 condition is met once every 32 iterations
match
is met once every 32 iterations
/BRATIO0.03125

Division Found
####
81   /
82   B
80   /

BRATIO0.03125

Found Control Density
generateAST for if(window[i] == 1){				//this condition is met once every 32 iterations //BRATIO0.03125
if(window[i] == 1){				
if(window[i] == 1){				
if(window[i] == 1){				
if(#1# == 1){				
if(#1# == 1){				
if(#1# == 1){				
0=(#1# == 1)				
0 =  ( #1#    =  =    1 )  	  	  	  	 
0 =  ( #1#    =  =    1 )  	  	  	  	 
0 =  ( #1#    =  =   #0#)  	  	  	  	 
0=(#1#==#0#)
0=(1==0)
Time Taken 2

extractEveryVariable
Inserting - if(window[i] == 1){				//this condition is met once every 32 iterations //BRATIO0.03125
['0.03125']
Bratio found
temp bratio is  1.0
Divergence ratio is  1.0
If ratio stack - pushing 0.03125
            float temp = 0.0f;

[]
[]
[]
0
TotalArithmeticInstructions  3.0
0
0
TotalArithmeticInstructions  3.0
generateAST for float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
float temp = 0.0f;
#0# = #0#;
#0#    =    #0# ; 
#0#    =    #0# ; 
#0#    =    #0# ; 
#0#=#0#;
0=0
Time Taken 0

extractEveryVariable
Inserting - float temp = 0.0f;
            int upperBound1, upperBound2;

[]
[]
[]
0
TotalArithmeticInstructions  3.0
0
0
TotalArithmeticInstructions  3.0
generateAST for int upperBound1, upperBound2;
int upperBound1, upperBound2;
int upperBound1, upperBound2;
int upperBound1, upperBound2;
int upperBound1, upperBound2;
int upperBound1, upperBound2;
int upperBound1, upperBound2;
#0#, #0#;
#0# ,    #0# ; 
#0# ,    #0# ; 
#0# ,    #0# ; 
#0#,#0#;
0,0
This line does not have an =
extractEveryVariable
Inserting - int upperBound1, upperBound2;
            if(emrIndex[i] > randIndex[i]){		//taken for 50% of the iterations //BRATIO0.03125 BRATIO0.5

scope - pushing For
For count stack - pushing 1
[]
['>', '/', '/', '/', '/']
['//', '//']
1
TotalArithmeticInstructions  3.03125
0
0
TotalArithmeticInstructions  3.03125
Checking double store operation
Checking double store operation - Done
Division Found
####
45   /
46   /
44   	
            if(emrIndex[i] > randIndex[i]){		
match
emrIndex[i] > randIndex[i]){
/taken for 50% of the iterations //BRATIO0.03125 BRATIO0.5

match
taken
52    
Division Found
####
46   /
47   t
45   /

taken for 50% of the iterations //BRATIO0.03125 BRATIO0.5

match
taken
52    
Division Found
####
79   /
80   /
78    
 for 50% of the iterations
match
50% of the iterations
/BRATIO0.03125 BRATIO0.5

match
BRATIO0.03125
94    
Division Found
####
80   /
81   B
79   /

BRATIO0.03125 BRATIO0.5

match
BRATIO0.03125
94    
Found Control Density
generateAST for if(emrIndex[i] > randIndex[i]){		//taken for 50% of the iterations //BRATIO0.03125 BRATIO0.5
if(emrIndex[i] > randIndex[i]){		
if(emrIndex[i] > randIndex[i]){		
if(emrIndex[i] > randIndex[i]){		
if(#1# > #1#){		
if(#1# > #1#){		
if(#1# > #1#){		
0=(#1# > #1#)		
0 =  ( #1#    >    #1# )  	  	 
0 =  ( #1#    >    #1# )  	  	 
0 =  ( #1#    >    #1# )  	  	 
0=(#1#>#1#)
0=(1>1)
This line does not have an =
extractEveryVariable
Inserting - if(emrIndex[i] > randIndex[i]){		//taken for 50% of the iterations //BRATIO0.03125 BRATIO0.5
['0.03125']
['0.5']
Bratio found
temp bratio is  0.5
Divergence ratio using old  1.0
If ratio stack - pushing 0.015625
                upperBound1 = emrIndex[i];

[]
[]
[]
0
TotalArithmeticInstructions  3.03125
0
0
TotalArithmeticInstructions  3.03125
Checking double store operation
Checking double store operation - Done
generateAST for upperBound1 = emrIndex[i];
upperBound1 = emrIndex[i];
upperBound1 = emrIndex[i];
upperBound1 = emrIndex[i];
upperBound1 = #1#;
upperBound1 = #1#;
upperBound1 = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - upperBound1 = emrIndex[i];
                upperBound2 = randIndex[i]+1024;

[]
['+']
[]
1
TotalArithmeticInstructions  3.046875
0
0
TotalArithmeticInstructions  3.046875
Checking double store operation
Checking double store operation - Done
generateAST for upperBound2 = randIndex[i]+1024;
upperBound2 = randIndex[i]+1024;
upperBound2 = randIndex[i]+1024;
upperBound2 = randIndex[i]+1024;
upperBound2 = #1#+1024;
upperBound2 = #1#+1024;
upperBound2 = #1#+1024;
#0# = #1#+1024;
#0#    =    #1# + 1024 ; 
#0#    =    #1# + 1024 ; 
#0#    =    #1# +#0#; 
#0#=#1#+#0#;
0=1+0
Time Taken 2

extractEveryVariable
Inserting - upperBound2 = randIndex[i]+1024;
                for(j=randIndex[i]; j<upperBound1 && j<upperBound2 && j<n && emrIndex[j]<n; j++){

scope - pushing For
For count stack - pushing 1
[]
['<', '&&', '<', '&&', '<', '&&', '<', '++']
[]
8
TotalArithmeticInstructions  3.171875
0
0
TotalArithmeticInstructions  3.171875
Checking double store operation
Checking double store operation - Done
generateAST for for(j=randIndex[i]; j<upperBound1 && j<upperBound2 && j<n && emrIndex[j]<n; j++){
This line is a for
extractEveryVariable
Inserting - for(j=randIndex[i]; j<upperBound1 && j<upperBound2 && j<n && emrIndex[j]<n; j++){
                    temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);

[]
['+', '*', '+']
[]
3
TotalArithmeticInstructions  3.21875
1
0
TotalArithmeticInstructions  3.21875
Indirect Warning
Indirect Warning
Checking double store operation
Checking double store operation - Done
####
31   *
32    
30    
 sa
match
sa
 (sx[randIndex[j]] + sx[emrIndex[j]]);

match
sx
36   [
49
generateAST for temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);
temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);
temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);
temp += sa * (#2# + #2#);
temp += sa * (#2# + #2#);
temp += sa * (#2# + #2#);
temp += sa * (#2# + #2#);
#0# += #0# * (#2# + #2#);
#0#    +  =    #0#    *     ( #2#    +    #2# )  ; 
#0#    +  =    #0#    *     ( #2#    +    #2# )  ; 
#0#    +  =    #0#    *     ( #2#    +    #2# )  ; 
#0#+=#0#*(#2#+#2#);
0=0\+0*(2+2)
Time Taken 4

extractEveryVariable
Inserting - temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);
                }

Scope Found For, popping, New Length 4
[]
[]
[]
0
TotalArithmeticInstructions  3.21875
0
0
TotalArithmeticInstructions  3.21875
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
            }else{//BRATIO0.03125 BRATIO0.5

scope - pushing if
[]
['/', '/']
['//']
0
TotalArithmeticInstructions  3.21875
0
0
TotalArithmeticInstructions  3.21875
Division Found
####
18   /
19   /
17   {
            }else{
/BRATIO0.03125 BRATIO0.5

match
BRATIO0.03125
33    
Division Found
####
19   /
20   B
18   /

BRATIO0.03125 BRATIO0.5

match
BRATIO0.03125
33    
generateAST for }else{//BRATIO0.03125 BRATIO0.5
}else{
}else{
}else{
}else{
}else{
}else{
#0#
#0#
#0#
#0#
#0#
0
This line does not have an =
extractEveryVariable
Inserting - }else{//BRATIO0.03125 BRATIO0.5
['0.03125']
['0.5']
Bratio found
temp bratio is  0.5
Divergence ratio using old  1.0
If ratio stack - pushing 0.015625
                upperBound1 = randIndex[i];

[]
[]
[]
0
TotalArithmeticInstructions  3.21875
0
0
TotalArithmeticInstructions  3.21875
Checking double store operation
Checking double store operation - Done
generateAST for upperBound1 = randIndex[i];
upperBound1 = randIndex[i];
upperBound1 = randIndex[i];
upperBound1 = randIndex[i];
upperBound1 = #1#;
upperBound1 = #1#;
upperBound1 = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - upperBound1 = randIndex[i];
                upperBound2 = emrIndex[i]+1024;

[]
['+']
[]
1
TotalArithmeticInstructions  3.234375
0
0
TotalArithmeticInstructions  3.234375
Checking double store operation
Checking double store operation - Done
generateAST for upperBound2 = emrIndex[i]+1024;
upperBound2 = emrIndex[i]+1024;
upperBound2 = emrIndex[i]+1024;
upperBound2 = emrIndex[i]+1024;
upperBound2 = #1#+1024;
upperBound2 = #1#+1024;
upperBound2 = #1#+1024;
#0# = #1#+1024;
#0#    =    #1# + 1024 ; 
#0#    =    #1# + 1024 ; 
#0#    =    #1# +#0#; 
#0#=#1#+#0#;
0=1+0
Time Taken 2

extractEveryVariable
Inserting - upperBound2 = emrIndex[i]+1024;
                for(j=emrIndex[i]; j<upperBound1 && j<upperBound2 && j<n && emrIndex[j]<n; j++){

scope - pushing For
For count stack - pushing 1
[]
['<', '&&', '<', '&&', '<', '&&', '<', '++']
[]
8
TotalArithmeticInstructions  3.359375
0
0
TotalArithmeticInstructions  3.359375
Checking double store operation
Checking double store operation - Done
generateAST for for(j=emrIndex[i]; j<upperBound1 && j<upperBound2 && j<n && emrIndex[j]<n; j++){
This line is a for
extractEveryVariable
Inserting - for(j=emrIndex[i]; j<upperBound1 && j<upperBound2 && j<n && emrIndex[j]<n; j++){
                    temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);

[]
['+', '*', '+']
[]
3
TotalArithmeticInstructions  3.40625
1
0
TotalArithmeticInstructions  3.40625
Indirect Warning
Indirect Warning
Checking double store operation
Checking double store operation - Done
####
31   *
32    
30    
 sa
match
sa
 (sx[randIndex[j]] + sx[emrIndex[j]]);

match
sx
36   [
49
generateAST for temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);
temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);
temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);
temp += sa * (#2# + #2#);
temp += sa * (#2# + #2#);
temp += sa * (#2# + #2#);
temp += sa * (#2# + #2#);
#0# += #0# * (#2# + #2#);
#0#    +  =    #0#    *     ( #2#    +    #2# )  ; 
#0#    +  =    #0#    *     ( #2#    +    #2# )  ; 
#0#    +  =    #0#    *     ( #2#    +    #2# )  ; 
#0#+=#0#*(#2#+#2#);
0=0\+0*(2+2)
Time Taken 4

extractEveryVariable
Inserting - temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);
                }

Scope Found For, popping, New Length 4
[]
[]
[]
0
TotalArithmeticInstructions  3.40625
0
0
TotalArithmeticInstructions  3.40625
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
            }

Scope Found if, popping, New Length 3
[]
[]
[]
0
TotalArithmeticInstructions  3.40625
0
0
TotalArithmeticInstructions  3.40625
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
            sy[i] = temp;

[]
[]
[]
0
TotalArithmeticInstructions  3.40625
0
0
TotalArithmeticInstructions  3.40625
Checking double store operation
14   [
13   y
            sy
match
sy
Checking double store operation - Done
generateAST for sy[i] = temp;
sy[i] = temp;
sy[i] = temp;
sy[i] = temp;
#1# = temp;
#1# = temp;
#1# = temp;
#1# = #0#;
#1#    =    #0# ; 
#1#    =    #0# ; 
#1#    =    #0# ; 
#1#=#0#;
1=0
Time Taken 1

extractEveryVariable
Inserting - sy[i] = temp;
        }

Scope Found For, popping, New Length 3
[]
[]
[]
0
TotalArithmeticInstructions  3.40625
0
0
TotalArithmeticInstructions  3.40625
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
    }

Scope Found For, popping, New Length 2
[]
[]
[]
0
TotalArithmeticInstructions  3.40625
0
0
TotalArithmeticInstructions  3.40625
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  3.40625
0
0
TotalArithmeticInstructions  3.40625
Annotation End Found
ILP!!!
******
0
if(window[i] == 1){				//this condition is met once every 32 iterations //BRATIO0.03125
[]
[]
2
1
1


1
float temp = 0.0f;
[]
[7, 12, 13]
0
0.03125
1


2
int upperBound1, upperBound2;
[]
[]
0
0.03125
1


3
if(emrIndex[i] > randIndex[i]){		//taken for 50% of the iterations //BRATIO0.03125 BRATIO0.5
[]
[]
0
0.03125
1


4
upperBound1 = emrIndex[i];
[]
[6, 11]
1
0.015625
1


5
upperBound2 = randIndex[i]+1024;
[]
[6, 11]
2
0.015625
1


6
for(j=randIndex[i]; j<upperBound1 && j<upperBound2 && j<n && emrIndex[j]<n; j++){
[4, 5]
[7, 11, 12]
1
0.015625
1


7
temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);
[1, 6]
[]
4
0.015625
1


8
}else{//BRATIO0.03125 BRATIO0.5
[]
[]
0
0.015625
1


9
upperBound1 = randIndex[i];
[]
[11]
1
0.015625
1


10
upperBound2 = emrIndex[i]+1024;
[]
[11]
2
0.015625
1


11
for(j=emrIndex[i]; j<upperBound1 && j<upperBound2 && j<n && emrIndex[j]<n; j++){
[4, 5, 6, 9, 10]
[12]
1
0.015625
1


12
temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);
[1, 6, 11]
[]
4
0.015625
1


13
sy[i] = temp;
[1]
[]
1
0.015625
1


******
Node 0's -
[0, 1, 2, 3, 4, 5, 8, 9, 10]
DFS Stack - pushing 0
[2, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 1
[-999, 0.0, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 7
(1,0.0)
(7,0.0625)
0
Selected!
DFS Stack - pushing 12
(1,0.0)
(12,0.0625)
0
Selected!
DFS Stack - pushing 13
(1,0.0)
(13,0.015625)
0
Selected!
[-999, 0.0, -999, -999, -999, -999, -999, 0, -999, -999, -999, -999, 0, 0]
[-999, 0.0, -999, -999, -999, -999, -999, 0, -999, -999, -999, -999, 0, 0]
[-999, 0.0, -999, -999, -999, -999, -999, 0, -999, -999, -999, -999, 0, 0]
DFS Stack - pushing 2
[-999, -999, 0.0, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 3
[-999, -999, -999, 0.0, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 4
[-999, -999, -999, -999, 0.015625, -999, -999, -999, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 6
(4,0.015625)
(6,0.015625)
0
Selected!
DFS Stack - pushing 11
(4,0.015625)
(11,0.015625)
0
Selected!
[-999, -999, -999, -999, 0.015625, -999, 0, -999, -999, -999, -999, 0, -999, -999]
DFS Stack - pushing 12
(11,0)
(12,0.0625)
0
Selected!
[-999, -999, -999, -999, 0.015625, -999, 0, -999, -999, -999, -999, 0, 0, -999]
[-999, -999, -999, -999, 0.015625, -999, 0, -999, -999, -999, -999, 0, 0, -999]
DFS Stack - pushing 7
(6,0)
(7,0.0625)
0
Selected!
[-999, -999, -999, -999, 0.015625, -999, 0, 0, -999, -999, -999, 0, 0, -999]
DFS Stack - pushing 5
[-999, -999, -999, -999, -999, 0.03125, -999, -999, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 6
(5,0.03125)
(6,0.015625)
0
Selected!
DFS Stack - pushing 11
(5,0.03125)
(11,0.015625)
0
Selected!
[-999, -999, -999, -999, -999, 0.03125, 0, -999, -999, -999, -999, 0, -999, -999]
DFS Stack - pushing 12
(11,0)
(12,0.0625)
0
Selected!
[-999, -999, -999, -999, -999, 0.03125, 0, -999, -999, -999, -999, 0, 0, -999]
[-999, -999, -999, -999, -999, 0.03125, 0, -999, -999, -999, -999, 0, 0, -999]
DFS Stack - pushing 7
(6,0)
(7,0.0625)
0
Selected!
[-999, -999, -999, -999, -999, 0.03125, 0, 0, -999, -999, -999, 0, 0, -999]
DFS Stack - pushing 8
[-999, -999, -999, -999, -999, -999, -999, -999, 0.0, -999, -999, -999, -999, -999]
DFS Stack - pushing 9
[-999, -999, -999, -999, -999, -999, -999, -999, -999, 0.015625, -999, -999, -999, -999]
DFS Stack - pushing 11
(9,0.015625)
(11,0.015625)
0
Selected!
[-999, -999, -999, -999, -999, -999, -999, -999, -999, 0.015625, -999, 0, -999, -999]
DFS Stack - pushing 12
(11,0)
(12,0.0625)
0
Selected!
[-999, -999, -999, -999, -999, -999, -999, -999, -999, 0.015625, -999, 0, 0, -999]
DFS Stack - pushing 10
[-999, -999, -999, -999, -999, -999, -999, -999, -999, -999, 0.03125, -999, -999, -999]
DFS Stack - pushing 11
(10,0.03125)
(11,0.015625)
0
Selected!
[-999, -999, -999, -999, -999, -999, -999, -999, -999, -999, 0.03125, 0, -999, -999]
DFS Stack - pushing 12
(11,0)
(12,0.0625)
0
Selected!
[-999, -999, -999, -999, -999, -999, -999, -999, -999, -999, 0.03125, 0, 0, -999]
[2, 0.0, 0.0, 0.0, 0.015625, 0.03125, 0.0, 0.015625, 0.03125]
######################################################
**********
The values of this entry are
Name                 -  temp
Scope                -  For
varType              -  1
size                 -  1
value                -  0
iteratorVar          -  True
**********
The values of this entry are
Name                 -  sx
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  upperBound1
Scope                -  For
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  True
**********
The values of this entry are
Name                 -  randArray
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  randIndex
Scope                -  Global
varType              -  0
size                 -  1024000
value                -  None
iteratorVar          -  False
**********
***********
Line 1
LHS -  for i
RHS -  i n i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - for (i = 0; i<=n; ++i) { //NTRATIO1024000
***
Line 2
LHS - 
RHS -  window i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 2
Line	     - if(window[i] == 1){				//this condition is met once every 32 iterations //BRATIO0.03125
***
Line 3
LHS -  temp
RHS -  f
For Ratio - 1
If  Ratio - 0.03125
Scope     - For
ScopeId   - 3
Cycles    - 0
Line	     - float temp = 0.0f;
***
Line 4
LHS - 
RHS -  upperBound upperBound
For Ratio - 1
If  Ratio - 0.03125
Scope     - For
ScopeId   - 3
Cycles    - 0
Line	     - int upperBound1, upperBound2;
***
Line 5
LHS - 
RHS -  emrIndex i randIndex i
For Ratio - 1
If  Ratio - 0.03125
Scope     - For
ScopeId   - 4
Cycles    - 0
Line	     - if(emrIndex[i] > randIndex[i]){		//taken for 50% of the iterations //BRATIO0.03125 BRATIO0.5
***
Line 6
LHS -  upperBound
RHS -  emrIndex i
For Ratio - 1
If  Ratio - 0.015625
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - upperBound1 = emrIndex[i];
***
Line 7
LHS -  upperBound
RHS -  randIndex i
For Ratio - 1
If  Ratio - 0.015625
Scope     - For
ScopeId   - 4
Cycles    - 2
Line	     - upperBound2 = randIndex[i]+1024;
***
Line 8
LHS -  for j
RHS -  andIndex i j upperBound j upperBound j n emrIndex j n j
For Ratio - 1
If  Ratio - 0.015625
Scope     - For
ScopeId   - 5
Cycles    - 1
Line	     - for(j=randIndex[i]; j<upperBound1 && j<upperBound2 && j<n && emrIndex[j]<n; j++){
***
Line 9
LHS - 
RHS -  temp sa sx randIndex j sx emrIndex j
For Ratio - 1
If  Ratio - 0.015625
Scope     - For
ScopeId   - 5
Cycles    - 4
Line	     - temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);
***
Line 10
LHS - 
RHS -  else
For Ratio - 1
If  Ratio - 0.015625
Scope     - if
ScopeId   - 5
Cycles    - 0
Line	     - }else{//BRATIO0.03125 BRATIO0.5
***
Line 11
LHS -  upperBound
RHS -  randIndex i
For Ratio - 1
If  Ratio - 0.015625
Scope     - if
ScopeId   - 5
Cycles    - 1
Line	     - upperBound1 = randIndex[i];
***
Line 12
LHS -  upperBound
RHS -  emrIndex i
For Ratio - 1
If  Ratio - 0.015625
Scope     - if
ScopeId   - 5
Cycles    - 2
Line	     - upperBound2 = emrIndex[i]+1024;
***
Line 13
LHS -  for j
RHS -  mrIndex i j upperBound j upperBound j n emrIndex j n j
For Ratio - 1
If  Ratio - 0.015625
Scope     - For
ScopeId   - 6
Cycles    - 1
Line	     - for(j=emrIndex[i]; j<upperBound1 && j<upperBound2 && j<n && emrIndex[j]<n; j++){
***
Line 14
LHS - 
RHS -  temp sa sx randIndex j sx emrIndex j
For Ratio - 1
If  Ratio - 0.015625
Scope     - For
ScopeId   - 6
Cycles    - 4
Line	     - temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);
***
Line 15
LHS -  sy
RHS -  temp i
For Ratio - 1
If  Ratio - 0.015625
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - sy[i] = temp;
***
***********


TotalTranscendentals - 0
TotalArithmeticInstructions - 3.40625
NumLoadOperations - 0.3125
NumStoreOperations - 1.015625
NumOffsetAccesses -  0
NumIndirectAccesses -  4
NumDoubleAccesses -  0
CriticalPath -  2
nThreadsCount -  1024000
instCountWithFRatio -  0
ninst       -  4.734375
ilp16k       -  4.73157486878
ilp32       -  3.65335342879
ilpRate       -  1.29513198244
Warnings!!!!
1. Memory Coalescing Warning - ***randIndex[j]*** is an indirect access in line temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);

2. Memory Coalescing Warning - ***emrIndex[j]*** is an indirect access in line temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);

3. Memory Coalescing Warning - ***randIndex[j]*** is an indirect access in line temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);

4. Memory Coalescing Warning - ***emrIndex[j]*** is an indirect access in line temp += sa * (sx[randIndex[j]] + sx[emrIndex[j]]);



######################################################
Transcendental Ratio - L
Arithmetic Intensity - M
Global Memory Operation - L
BranchDivergence - H 1.0
ControlDensity -  H
Floating Point Mul/Div - H
Total Instruction - L
Num Threads - 1024000
Critical Path - L
../Input_C_Parser/Test1.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test1.txt']
../Input_C_Parser/Test2.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test2.txt']
../Input_C_Parser/Test3.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test3.txt']
../Input_C_Parser/Test4.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test4.txt']
../Input_C_Parser/Test5.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test5.txt']
../Input_C_Parser/Test6.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test6.txt']
../Input_C_Parser/Test7.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test7.txt']
../Input_C_Parser/Test8.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test8.txt']
../Input_C_Parser/Test9.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test9.txt']
../Input_C_Parser/Test10.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test10.txt']
../Input_C_Parser/Test11.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test11.txt']
../Input_C_Parser/Test12.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test12.txt']
../Input_C_Parser/Test13.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test13.txt']
../Input_C_Parser/Test14.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test14.txt']
../Input_C_Parser/Test15.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test15.txt']
../Input_C_Parser/Test16.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test16.txt']
../Input_C_Parser/Test17.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgrammin/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test17.txt
#define REC_WINDOW 10

[]


[]
int rec_count = 10;

[]
float *tmp_lat = (float *) malloc(REC_WINDOW * sizeof(float));

[]
float *z = (float *) malloc(REC_WINDOW * sizeof(float));

[]
float target_lat;

[]
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
while(!done){      //executes for 4280 iterations //NTRATIO4280

scope - pushing For
For count stack - pushing 1
['NTRATIO4280']
['4280']
['/', '/', '/', '/']
['//', '//']
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
Division Found
####
19   /
20   /
18    
while(!done){
/executes for 4280 iterations //NTRATIO4280

match
executes
29    
Division Found
####
20   /
21   e
19   /

executes for 4280 iterations //NTRATIO4280

match
executes
29    
Division Found
####
50   /
51   /
49    
 for 4280 iterations
match
4280 iterations
/NTRATIO4280

Division Found
####
51   /
52   N
50   /

NTRATIO4280

generateAST for while(!done){      //executes for 4280 iterations //NTRATIO4280
while(!done){      
while(!done){      
while(!done){      
while(!done){      
while(!done){      
while(!done){      
#0#(!#0#)      
#0# (  ! #0# )                   
#0# (  ! #0# )                   
#0# (  ! #0# )                   
#0#(!#0#)
0(!0)
This line does not have an =
extractEveryVariable
Inserting - while(!done){      //executes for 4280 iterations //NTRATIO4280
   for( i = 0 ; i < rec_count ; i++ ){ //NTRATIO10

scope - pushing For
For count stack - pushing 1
['NTRATIO10']
['10']
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
39   /
40   /
38    
 0 ; i < rec_count ; i++ ){
match
i < rec_count ; i++ ){
/NTRATIO10

Division Found
####
40   /
41   N
39   /

NTRATIO10

generateAST for for( i = 0 ; i < rec_count ; i++ ){ //NTRATIO10
This line is a for
extractEveryVariable
Inserting - for( i = 0 ; i < rec_count ; i++ ){ //NTRATIO10
      z[i] = sqrtf(( (tmp_lat[i]-target_lat) * (tmp_lat[i]-target_lat) )+( (tmp_long[i]-target_long) * (tmp_long[i]-target_long) ));

[]
['-', '*', '-', '+', '-', '*', '-']
[]
7
TotalArithmeticInstructions  9
1
2
TotalArithmeticInstructions  8
Checking double store operation
7   [
6   z
      z
match
z
Found variable in List!
Checking double store operation - Done
####
45   *
46    
44    
(tmp_lat[i]-target_lat
match
tmp_lat[i]-target_lat
 (tmp_lat[i]-target_lat) )+( (tmp_long[i]-target_long) * (tmp_long[i]-target_long) ));

match
tmp_lat
55   [
58
####
101   *
102    
100    
(tmp_long[i]-target_long
match
tmp_long[i]-target_long
 (tmp_long[i]-target_long) ));

match
tmp_long
112   [
115
generateAST for z[i] = sqrtf(( (tmp_lat[i]-target_lat) * (tmp_lat[i]-target_lat) )+( (tmp_long[i]-target_long) * (tmp_long[i]-target_long) ));
z[i] = sqrtf(( (tmp_lat[i]-target_lat) * (tmp_lat[i]-target_lat) )+( (tmp_long[i]-target_long) * (tmp_long[i]-target_long) ));
z[i] = sqrtf(( (tmp_lat[i]-target_lat) * (tmp_lat[i]-target_lat) )+( (tmp_long[i]-target_long) * (tmp_long[i]-target_long) ));
z[i] = sqrtf(( (tmp_lat[i]-target_lat) * (tmp_lat[i]-target_lat) )+( (tmp_long[i]-target_long) * (tmp_long[i]-target_long) ));
#1# = sqrtf(( (#1#-target_lat) * (#1#-target_lat) )+( (#1#-target_long) * (#1#-target_long) ));
#1# = sqrtf(( (#1#-target_lat) * (#1#-target_lat) )+( (#1#-target_long) * (#1#-target_long) ));
#1# = sqrtf(( (#1#-target_lat) * (#1#-target_lat) )+( (#1#-target_long) * (#1#-target_long) ));
#1# = #0#(( (#1#-#0#) * (#1#-#0#) )+( (#1#-#0#) * (#1#-#0#) ));
#1#    =    #0# (  (     ( #1# - #0# )     *     ( #1# - #0# )     )  +  (     ( #1# - #0# )     *     ( #1# - #0# )     )  )  ; 
#1#    =    #0# (  (     ( #1# - #0# )     *     ( #1# - #0# )     )  +  (     ( #1# - #0# )     *     ( #1# - #0# )     )  )  ; 
#1#    =    #0# (  (     ( #1# - #0# )     *     ( #1# - #0# )     )  +  (     ( #1# - #0# )     *     ( #1# - #0# )     )  )  ; 
#1#=#0#(((#1#-#0#)*(#1#-#0#))+((#1#-#0#)*(#1#-#0#)));
1=0(((1-0)*(1-0))+((1-0)*(1-0)))
Time Taken 5

extractEveryVariable
Inserting - z[i] = sqrtf(( (tmp_lat[i]-target_lat) * (tmp_lat[i]-target_lat) )+( (tmp_long[i]-target_long) * (tmp_long[i]-target_long) ));
   }

Scope Found For, popping, New Length 2
[]
[]
[]
0
TotalArithmeticInstructions  8
0
0
TotalArithmeticInstructions  8
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
}      //executes for 4280 iterations

Scope Found For, popping, New Length 1
[]
['/', '/']
['//']
0
TotalArithmeticInstructions  8
0
0
TotalArithmeticInstructions  8
Division Found
####
7   /
8   /
6    
}
/executes for 4280 iterations

match
executes
17    
Division Found
####
8   /
9   e
7   /

executes for 4280 iterations

match
executes
17    
generateAST for }      //executes for 4280 iterations
}      
}      
}      
}      
}      
}      
      
                  
                  
                  


This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  8
0
0
TotalArithmeticInstructions  8
Annotation End Found
ILP!!!
******
0
z[i] = sqrtf(( (tmp_lat[i]-target_lat) * (tmp_lat[i]-target_lat) )+( (tmp_long[i]-target_long) * (tmp_long[i]-target_long) ));
[]
[]
5
1
1


******
Node 0's -
[0]
DFS Stack - pushing 0
[5]
[5]
######################################################
**********
The values of this entry are
Name                 -  target_lat
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  tmp_lat
Scope                -  Global
varType              -  1
size                 -  3
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  z
Scope                -  Global
varType              -  1
size                 -  3
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  rec_count
Scope                -  Global
varType              -  0
size                 -  1
value                -  10
iteratorVar          -  False
**********
***********
Line 1
LHS - 
RHS -  while done
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 0
Line	     - while(!done){      //executes for 4280 iterations //NTRATIO4280
***
Line 2
LHS -  for i
RHS -  i rec count i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - for( i = 0 ; i < rec_count ; i++ ){ //NTRATIO10
***
Line 3
LHS -  z
RHS -  sqrtf tmp lat i target lat tmp lat i target lat tmp long i target long tmp long i target long
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 5
Line	     - z[i] = sqrtf(( (tmp_lat[i]-target_lat) * (tmp_lat[i]-target_lat) )+( (tmp_long[i]-target_long) * (tmp_long[i]-target_long) ));
***
***********


TotalTranscendentals - 1
TotalArithmeticInstructions - 8
NumLoadOperations - 4
NumStoreOperations - 1
NumOffsetAccesses -  0
NumIndirectAccesses -  0
NumDoubleAccesses -  0
CriticalPath -  5
nThreadsCount -  42800
instCountWithFRatio -  0
ninst       -  14
ilp16k       -  13
ilp32       -  4
ilpRate       -  3


######################################################
Transcendental Ratio - M0.0769230769231
Arithmetic Intensity - M
Global Memory Operation - H
BranchDivergence - L 0
ControlDensity -  L
Floating Point Mul/Div - H
Total Instruction - L
Num Threads - 42800
Critical Path - L
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test18.txt
int Nparticles = 1000;

[]
int index;

[]
double arrayX[1000];

[]
double arrayY[1000];

[]
double xj[1000];

[]
double yj[1000];

[]
double CDF[1000];

[]
double u[1000];

[]


[]
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
for(j = 0; j<Nparticles; j++) //NTRATIO1000

['NTRATIO1000']
['1000']
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
30   /
31   /
29    
(j = 0; j<Nparticles; j++
match
j = 0; j<Nparticles; j++
/NTRATIO1000

Division Found
####
31   /
32   N
30   /

NTRATIO1000

generateAST for for(j = 0; j<Nparticles; j++) //NTRATIO1000
This line is a for
extractEveryVariable
Inserting - for(j = 0; j<Nparticles; j++) //NTRATIO1000
{

scope - pushing For
For count stack - pushing 1
[]
[]
[]
0
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
generateAST for {
{
{
{
{
{
{






This line does not have an =
extractEveryVariable
   

[]
[]
[]
0
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
generateAST for 












This line does not have an =
extractEveryVariable
   int index = -1;

[]
['-']
[]
1
TotalArithmeticInstructions  3
0
0
TotalArithmeticInstructions  3
generateAST for int index = -1;
int index = -1;
int index = -1;
int index = -1;
int index = -1;
int index = -1;
int index = -1;
#0# = -1;
#0#    =     - 1 ; 
#0#    =     - 1 ; 
#0#    =     -#0#; 
#0#=-#0#;
0=0
Time Taken 0

extractEveryVariable
Inserting - int index = -1;
   

[]
[]
[]
0
TotalArithmeticInstructions  3
0
0
TotalArithmeticInstructions  3
generateAST for 












This line does not have an =
extractEveryVariable
   for(int x = 0; x < Nparticles; x++) {//FRATIO1000

scope - pushing For
[]
FRATIO1000
For count stack - pushing 1000
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2003
0
0
TotalArithmeticInstructions  2003
Division Found
####
40   /
41   /
39   {
 0; x < Nparticles; x++) {
match
x < Nparticles; x++) {
/FRATIO1000

Division Found
####
41   /
42   F
40   /

FRATIO1000

generateAST for for(int x = 0; x < Nparticles; x++) {//FRATIO1000
This line is a for
extractEveryVariable
Inserting - for(int x = 0; x < Nparticles; x++) {//FRATIO1000
      if(CDF[x] >= u[j])	//BRATIO0.06

[]
['>=', '/', '/']
['//']
1
TotalArithmeticInstructions  3003
0
0
TotalArithmeticInstructions  3003
Checking double store operation
12   [
11   F
      if(CDF
match
if(CDF
Checking double store operation - Done
Division Found
####
25   /
26   /
24   	
 u[j])	
/BRATIO0.06

Division Found
####
26   /
27   B
25   /

BRATIO0.06

Found Control Density
generateAST for if(CDF[x] >= u[j])	//BRATIO0.06
if(CDF[x] >= u[j])	
if(CDF[x] >= u[j])	
if(CDF[x] >= u[j])	
if(#1# >= #1#)	
if(#1# >= #1#)	
if(#1# >= #1#)	
0=(#1# >= #1#)	
0 =  ( #1#    >  =    #1# )  	 
0 =  ( #1#    >  =    #1# )  	 
0 =  ( #1#    >  =    #1# )  	 
0=(#1#>=#1#)
0=(1>=1)
This line does not have an =
extractEveryVariable
Inserting - if(CDF[x] >= u[j])	//BRATIO0.06
['0.06']
Bratio found
temp bratio is  1.92
Divergence ratio is  1.92
If ratio stack - pushing 0.06
Within Fratio
4
      {

scope - pushing if
[]
[]
[]
0
TotalArithmeticInstructions  3003.0
0
0
TotalArithmeticInstructions  3003.0
generateAST for {
{
{
{
{
{
{






This line does not have an =
extractEveryVariable
Within Fratio
4
         index = x;

[]
[]
[]
0
TotalArithmeticInstructions  3003.0
0
0
TotalArithmeticInstructions  3003.0
generateAST for index = x;
index = x;
index = x;
index = x;
index = x;
index = x;
index = x;
#0# = #0#;
#0#    =    #0# ; 
#0#    =    #0# ; 
#0#    =    #0# ; 
#0#=#0#;
0=0
Time Taken 0

extractEveryVariable
Inserting - index = x;
Within Fratio
4
         break;

[]
[]
[]
0
TotalArithmeticInstructions  3003.0
0
0
TotalArithmeticInstructions  3003.0
generateAST for break;
break;
break;
break;
break;
break;
break;
#0#;
#0# ; 
#0# ; 
#0# ; 
#0#;
0
This line does not have an =
extractEveryVariable
Inserting - break;
Within Fratio
4
      }

Scope Found if, popping, New Length 1
[]
[]
[]
0
TotalArithmeticInstructions  3003.0
0
0
TotalArithmeticInstructions  3003.0
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
Within Fratio
4
   }

Scope Found For, popping, New Length 2
[]
[]
[]
0
TotalArithmeticInstructions  3003.0
0
0
TotalArithmeticInstructions  3003.0
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
 

[]
[]
[]
0
TotalArithmeticInstructions  3003.0
0
0
TotalArithmeticInstructions  3003.0
generateAST for 












This line does not have an =
extractEveryVariable
   if(index == -1)		//never taken // BRATIO0.0

[]
['==', '-', '/', '/', '/', '/']
['//', '//']
2
TotalArithmeticInstructions  3005.0
0
0
TotalArithmeticInstructions  3005.0
Division Found
####
20   /
21   /
19   	
= -1)		
/never taken // BRATIO0.0

match
never
27    
Division Found
####
21   /
22   n
20   /

never taken // BRATIO0.0

match
never
27    
Division Found
####
34   /
35   /
33    
 taken
/ BRATIO0.0

Division Found
####
35   /
36    
34   /

 BRATIO0.0

Found Control Density
generateAST for if(index == -1)		//never taken // BRATIO0.0
if(index == -1)		
if(index == -1)		
if(index == -1)		
if(index == -1)		
if(index == -1)		
if(index == -1)		
0=(#0# == -1)		
0 =  ( #0#    =  =     - 1 )  	  	 
0 =  ( #0#    =  =     - 1 )  	  	 
0 =  ( #0#    =  =     -#0#)  	  	 
0=(#0#==-#0#)
0=(0==0)
Time Taken 1

extractEveryVariable
Inserting - if(index == -1)		//never taken // BRATIO0.0
['0.0']
Bratio found
temp bratio is  0.0
Divergence ratio using old  1.92
If ratio stack - pushing 0.0
   {

scope - pushing if
[]
[]
[]
0
TotalArithmeticInstructions  3005.0
0
0
TotalArithmeticInstructions  3005.0
generateAST for {
{
{
{
{
{
{






This line does not have an =
extractEveryVariable
Within Fratio
4
      i = Nparticles - 1;

[]
['-']
[]
1
TotalArithmeticInstructions  3005.0
0
0
TotalArithmeticInstructions  3005.0
generateAST for i = Nparticles - 1;
i = Nparticles - 1;
i = Nparticles - 1;
i = Nparticles - 1;
i = Nparticles - 1;
i = Nparticles - 1;
i = Nparticles - 1;
#0# = #0# - 1;
#0#    =    #0#    -    1 ; 
#0#    =    #0#    -    1 ; 
#0#    =    #0#    -   #0#; 
#0#=#0#-#0#;
0=0-0
Time Taken 1

extractEveryVariable
Inserting - i = Nparticles - 1;
Within Fratio
5
   }

Scope Found if, popping, New Length 1
[]
[]
[]
0
TotalArithmeticInstructions  3005.0
0
0
TotalArithmeticInstructions  3005.0
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
   else  //BRATIO0.0

[]
['/', '/']
['//']
0
TotalArithmeticInstructions  3005.0
0
0
TotalArithmeticInstructions  3005.0
Division Found
####
9   /
10   /
8    
   else
/BRATIO0.0

Division Found
####
10   /
11   B
9   /

BRATIO0.0

generateAST for else  //BRATIO0.0
else  
else  
else  
else  
else  
else  
#0#  
#0#      
#0#      
#0#      
#0#
0
This line does not have an =
extractEveryVariable
Inserting - else  //BRATIO0.0
['0.0']
Bratio found
temp bratio is  0.0
Divergence ratio using old  1.92
If ratio stack - pushing 0.0
   {

scope - pushing if
[]
[]
[]
0
TotalArithmeticInstructions  3005.0
0
0
TotalArithmeticInstructions  3005.0
generateAST for {
{
{
{
{
{
{






This line does not have an =
extractEveryVariable
Within Fratio
5
      i = index;

[]
[]
[]
0
TotalArithmeticInstructions  3005.0
0
0
TotalArithmeticInstructions  3005.0
generateAST for i = index;
i = index;
i = index;
i = index;
i = index;
i = index;
i = index;
#0# = #0#;
#0#    =    #0# ; 
#0#    =    #0# ; 
#0#    =    #0# ; 
#0#=#0#;
0=0
Time Taken 0

extractEveryVariable
Inserting - i = index;
Within Fratio
5
   }

Scope Found if, popping, New Length 1
[]
[]
[]
0
TotalArithmeticInstructions  3005.0
0
0
TotalArithmeticInstructions  3005.0
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
   

[]
[]
[]
0
TotalArithmeticInstructions  3005.0
0
0
TotalArithmeticInstructions  3005.0
generateAST for 












This line does not have an =
extractEveryVariable
   if(i == -1)			//never taken // BRATIO0.0

[]
['==', '-', '/', '/', '/', '/']
['//', '//']
2
TotalArithmeticInstructions  3007.0
0
0
TotalArithmeticInstructions  3007.0
Division Found
####
17   /
18   /
16   	
= -1)			
/never taken // BRATIO0.0

match
never
24    
Division Found
####
18   /
19   n
17   /

never taken // BRATIO0.0

match
never
24    
Division Found
####
31   /
32   /
30    
 taken
/ BRATIO0.0

Division Found
####
32   /
33    
31   /

 BRATIO0.0

Found Control Density
generateAST for if(i == -1)			//never taken // BRATIO0.0
if(i == -1)			
if(i == -1)			
if(i == -1)			
if(i == -1)			
if(i == -1)			
if(i == -1)			
0=(#0# == -1)			
0 =  ( #0#    =  =     - 1 )  	  	  	 
0 =  ( #0#    =  =     - 1 )  	  	  	 
0 =  ( #0#    =  =     -#0#)  	  	  	 
0=(#0#==-#0#)
0=(0==0)
Time Taken 1

extractEveryVariable
Inserting - if(i == -1)			//never taken // BRATIO0.0
['0.0']
Bratio found
temp bratio is  0.0
Divergence ratio using old  1.92
If ratio stack - pushing 0.0
   { 

scope - pushing if
[]
[]
[]
0
TotalArithmeticInstructions  3007.0
0
0
TotalArithmeticInstructions  3007.0
generateAST for {
{
{
{
{
{
{






This line does not have an =
extractEveryVariable
Within Fratio
5
      i = Nparticles-1;

[]
['-']
[]
1
TotalArithmeticInstructions  3007.0
0
0
TotalArithmeticInstructions  3007.0
generateAST for i = Nparticles-1;
i = Nparticles-1;
i = Nparticles-1;
i = Nparticles-1;
i = Nparticles-1;
i = Nparticles-1;
i = Nparticles-1;
#0# = #0#-1;
#0#    =    #0# - 1 ; 
#0#    =    #0# - 1 ; 
#0#    =    #0# -#0#; 
#0#=#0#-#0#;
0=0-0
Time Taken 1

extractEveryVariable
Inserting - i = Nparticles-1;
Within Fratio
6
   }

Scope Found if, popping, New Length 1
[]
[]
[]
0
TotalArithmeticInstructions  3007.0
0
0
TotalArithmeticInstructions  3007.0
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
   

[]
[]
[]
0
TotalArithmeticInstructions  3007.0
0
0
TotalArithmeticInstructions  3007.0
generateAST for 












This line does not have an =
extractEveryVariable
   xj[j] = arrayX[i];

[]
[]
[]
0
TotalArithmeticInstructions  3007.0
0
0
TotalArithmeticInstructions  3007.0
Checking double store operation
5   [
4   j
   xj
match
xj
Found variable in List!
Checking double store operation - Done
generateAST for xj[j] = arrayX[i];
xj[j] = arrayX[i];
xj[j] = arrayX[i];
xj[j] = arrayX[i];
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#=#1#;
1=1
Time Taken 1

extractEveryVariable
Inserting - xj[j] = arrayX[i];
   yj[j] = arrayY[i];

[]
[]
[]
0
TotalArithmeticInstructions  3007.0
0
0
TotalArithmeticInstructions  3007.0
Checking double store operation
5   [
4   j
   yj
match
yj
Found variable in List!
Checking double store operation - Done
generateAST for yj[j] = arrayY[i];
yj[j] = arrayY[i];
yj[j] = arrayY[i];
yj[j] = arrayY[i];
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1# = #1#;
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#    =    #1# ; 
#1#=#1#;
1=1
Time Taken 1

extractEveryVariable
Inserting - yj[j] = arrayY[i];
   

[]
[]
[]
0
TotalArithmeticInstructions  3007.0
0
0
TotalArithmeticInstructions  3007.0
generateAST for 












This line does not have an =
extractEveryVariable
}

Scope Found For, popping, New Length 1
[]
[]
[]
0
TotalArithmeticInstructions  3007.0
0
0
TotalArithmeticInstructions  3007.0
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  3007.0
0
0
TotalArithmeticInstructions  3007.0
Annotation End Found
ILP!!!
******
0
for(int x = 0; x < Nparticles; x++) {//FRATIO1000
[]
[1]
1
1
1


1
if(CDF[x] >= u[j])	//BRATIO0.06
[0]
[]
0
1
1


2
i = Nparticles - 1;
[]
[]
1
0.0
0


3
i = index;
[]
[]
0
0.0
0


4
i = Nparticles-1;
[]
[]
1
0.0
0


******
Node 0's -
[0, 2, 3, 4]
DFS Stack - pushing 0
[1, -999, -999, -999, -999]
DFS Stack - pushing 1
(0,1)
(1,0)
1
Selected!
[1, 1, -999, -999, -999]
DFS Stack - pushing 2
[-999, -999, 0.0, -999, -999]
DFS Stack - pushing 3
[-999, -999, -999, 0.0, -999]
DFS Stack - pushing 4
[-999, -999, -999, -999, 0.0]
[1, 0.0, 0.0, 0.0]
######################################################
**********
The values of this entry are
Name                 -  xj
Scope                -  Global
varType              -  2
size                 -  1000
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  index
Scope                -  For
varType              -  0
size                 -  1
value                -  1
iteratorVar          -  True
**********
The values of this entry are
Name                 -  arrayY
Scope                -  Global
varType              -  2
size                 -  1000
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  arrayX
Scope                -  Global
varType              -  2
size                 -  1000
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  Nparticles
Scope                -  Global
varType              -  0
size                 -  1
value                -  1000
iteratorVar          -  False
**********
The values of this entry are
Name                 -  CDF
Scope                -  Global
varType              -  2
size                 -  1000
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  yj
Scope                -  Global
varType              -  2
size                 -  1000
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  u
Scope                -  Global
varType              -  2
size                 -  1000
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  x
Scope                -  For
varType              -  0
size                 -  1
value                -  0
iteratorVar          -  True
**********
***********
Line 1
LHS -  for j
RHS -  j Nparticles j
For Ratio - 1
If  Ratio - 1
Scope     - Global
ScopeId   - 1
Cycles    - 1
Line	     - for(j = 0; j<Nparticles; j++) //NTRATIO1000
***
Line 2
LHS -  index
RHS - 
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 0
Line	     - int index = -1;
***
Line 3
LHS -  for x
RHS -  x Nparticles x
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - for(int x = 0; x < Nparticles; x++) {//FRATIO1000
***
Line 4
LHS - 
RHS -  CDF x u j
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 0
Line	     - if(CDF[x] >= u[j])	//BRATIO0.06
***
Line 5
LHS -  index
RHS -  x
For Ratio - 1000
If  Ratio - 0.06
Scope     - if
ScopeId   - 4
Cycles    - 0
Line	     - index = x;
***
Line 6
LHS - 
RHS -  break
For Ratio - 1000
If  Ratio - 0.06
Scope     - if
ScopeId   - 4
Cycles    - 0
Line	     - break;
***
Line 7
LHS - 
RHS -  index
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - if(index == -1)		//never taken // BRATIO0.0
***
Line 8
LHS -  i
RHS -  Nparticles
For Ratio - 0
If  Ratio - 0.0
Scope     - if
ScopeId   - 3
Cycles    - 1
Line	     - i = Nparticles - 1;
***
Line 9
LHS - 
RHS -  else
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 0
Line	     - else  //BRATIO0.0
***
Line 10
LHS -  i
RHS -  index
For Ratio - 0
If  Ratio - 0.0
Scope     - if
ScopeId   - 3
Cycles    - 0
Line	     - i = index;
***
Line 11
LHS - 
RHS -  i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - if(i == -1)			//never taken // BRATIO0.0
***
Line 12
LHS -  i
RHS -  Nparticles
For Ratio - 0
If  Ratio - 0.0
Scope     - if
ScopeId   - 3
Cycles    - 1
Line	     - i = Nparticles-1;
***
Line 13
LHS -  xj
RHS -  arrayX i j
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - xj[j] = arrayX[i];
***
Line 14
LHS -  yj
RHS -  arrayY i j
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - yj[j] = arrayY[i];
***
***********


TotalTranscendentals - 0
TotalArithmeticInstructions - 3007.0
NumLoadOperations - 1002.0
NumStoreOperations - 1002.0
NumOffsetAccesses -  0
NumIndirectAccesses -  0
NumDoubleAccesses -  2
CriticalPath -  1
nThreadsCount -  1000
instCountWithFRatio -  6
ninst       -  5011.0
ilp16k       -  3815.90595402
ilp32       -  31.7969462621
ilpRate       -  120.008566941


######################################################
Transcendental Ratio - L
Arithmetic Intensity - M
Global Memory Operation - L
BranchDivergence - H 1.92
ControlDensity -  H
Floating Point Mul/Div - L
Total Instruction - L
Num Threads - 1000
Critical Path - L
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test19.txt
int Ne = 229916

[]
float image[229916];

[]
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
for (i=0; i < Ne; i++) { //NTRATIO229916

scope - pushing For
For count stack - pushing 1
['NTRATIO229916']
['229916']
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
25   /
26   /
24    
0; i < Ne; i++) {
match
i < Ne; i++) {
/NTRATIO229916

Division Found
####
26   /
27   N
25   /

NTRATIO229916

generateAST for for (i=0; i < Ne; i++) { //NTRATIO229916
This line is a for
extractEveryVariable
Inserting - for (i=0; i < Ne; i++) { //NTRATIO229916
   image[i] = expf(image[i]/255);                                 

[]
['/']
[]
1
TotalArithmeticInstructions  3
0
0
TotalArithmeticInstructions  3
Checking double store operation
8   [
7   e
   image
match
image
Found variable in List!
Checking double store operation - Done
Division Found
####
27   /
28   2
26   ]
 expf(image
match
image
255);                                 

match
255
31   )
generateAST for image[i] = expf(image[i]/255);
image[i] = expf(image[i]/255);
image[i] = expf(image[i]/255);
image[i] = expf(image[i]/255);
#1# = expf(#1#/255);
#1# = expf(#1#/255);
#1# = expf(#1#/255);
#1# = #0#(#1#/255);
#1#    =    #0# ( #1# / 255 )  ; 
#1#    =    #0# ( #1# / 255 )  ; 
#1#    =    #0# ( #1# /#0#)  ; 
#1#=#0#(#1#/#0#);
1=0(1/0)
Time Taken 3

extractEveryVariable
Inserting - image[i] = expf(image[i]/255);
}

Scope Found For, popping, New Length 1
[]
[]
[]
0
TotalArithmeticInstructions  3
0
0
TotalArithmeticInstructions  3
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  3
0
0
TotalArithmeticInstructions  3
Annotation End Found
ILP!!!
******
0
image[i] = expf(image[i]/255);
[]
[]
3
1
1


******
Node 0's -
[0]
DFS Stack - pushing 0
[3]
[3]
######################################################
**********
The values of this entry are
Name                 -  image
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  Ne
Scope                -  Global
varType              -  0
size                 -  1
value                -  229916
iteratorVar          -  False
**********
***********
Line 1
LHS -  for i
RHS -  i Ne i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - for (i=0; i < Ne; i++) { //NTRATIO229916
***
Line 2
LHS -  image
RHS -  expf image i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 3
Line	     - image[i] = expf(image[i]/255);
***
***********


TotalTranscendentals - 1
TotalArithmeticInstructions - 3
NumLoadOperations - 1
NumStoreOperations - 1
NumOffsetAccesses -  0
NumIndirectAccesses -  0
NumDoubleAccesses -  0
CriticalPath -  3
nThreadsCount -  229916
instCountWithFRatio -  0
ninst       -  6
ilp16k       -  5
ilp32       -  4
ilpRate       -  1


######################################################
Transcendental Ratio - H
Arithmetic Intensity - M
Global Memory Operation - H
BranchDivergence - L 0
ControlDensity -  L
Floating Point Mul/Div - H
Total Instruction - L
Num Threads - 229916
Critical Path - L
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test20.txt
int Nc = 458;

[]
int Nr = 502;

[]
int niter=100; 

[]
float image[229916]; 

[]
long Nr,Nc;

[]
long Ne;

[]
int niter;  

[]
float lambda;  

[]
int r1,r2,c1,c2; 

[]
long NeROI;     

[]
float meanROI, varROI, q0sqr;     

[]
int iN[502], iS[502];

[]
int jE[458], jW[458];

[]
float Jc;

[]
float dN[229916], dS[229916], dW[229916], dE[229916];

[]
float tmp,sum,sum2;

[]
float G2,L,num,den,qsqr,D;

[]
float c[229916];

[]
float cN,cS,cW,cE;

[]
int iter;    // primary loop

[]
long i,j;    // image row/col

[]
long k;      // image single index    

[]


[]
for (i=0; i<Nr; i++) {

scope - pushing For
For count stack - pushing 1
[]
    iN[i] = i-1;       // holds index of IMAGE row above

[]
    iS[i] = i+1;       // holds index of IMAGE row below

[]
}

[]


[]
for (j=0; j<Nc; j++) {

scope - pushing For
For count stack - pushing 1
[]
    jW[j] = j-1;       // holds index of IMAGE column on the left

[]
    jE[j] = j+1;       // holds index of IMAGE column on the right

[]
}

[]


[]
// N/S/W/E boundary conditions, fix surrounding indices outside boundary of IMAGE

[]
iN[0]    = 0;      // changes IMAGE top row index from -1 to 0

[]
iS[Nr-1] = Nr-1;   // changes IMAGE bottom row index from Nr to Nr-1 

[]
jW[0]    = 0;          

[]


[]
for (iter=0; iter < niter; iter++){

scope - pushing For
For count stack - pushing 1
[]
for (j=0; j < Nc; j++) {     //NTRATIO458                                  

scope - pushing For
For count stack - pushing 1
['NTRATIO458']
['458']
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
   for (i=0; i < Nr; i++) { //NTRATIO502

scope - pushing For
For count stack - pushing 1
['NTRATIO502']
['502']
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
28   /
29   /
27    
0; i < Nr; i++) {
match
i < Nr; i++) {
/NTRATIO502

Division Found
####
29   /
30   N
28   /

NTRATIO502

generateAST for for (i=0; i < Nr; i++) { //NTRATIO502
This line is a for
extractEveryVariable
Inserting - for (i=0; i < Nr; i++) { //NTRATIO502
      k = i + Nr*j;                                   

[]
['+', '*']
[]
2
TotalArithmeticInstructions  4
0
0
TotalArithmeticInstructions  4
####
16   *
17   j
15   r
 i + Nr
match
i + Nr
j;                                   

match
j;
19    
generateAST for k = i + Nr*j;
k = i + Nr*j;
k = i + Nr*j;
k = i + Nr*j;
k = i + Nr*j;
k = i + Nr*j;
k = i + Nr*j;
#0# = #0# + #0#*#0#;
#0#    =    #0#    +    #0# * #0# ; 
#0#    =    #0#    +    #0# * #0# ; 
#0#    =    #0#    +    #0# * #0# ; 
#0#=#0#+#0#*#0#;
0=0+0*0
Time Taken 2

extractEveryVariable
Inserting - k = i + Nr*j;
      Jc = image[k];                                     

[]
[]
[]
0
TotalArithmeticInstructions  4
0
0
TotalArithmeticInstructions  4
Checking double store operation
Checking double store operation - Done
generateAST for Jc = image[k];
Jc = image[k];
Jc = image[k];
Jc = image[k];
Jc = #1#;
Jc = #1#;
Jc = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - Jc = image[k];
                     

[]
[]
[]
0
TotalArithmeticInstructions  4
0
0
TotalArithmeticInstructions  4
generateAST for 












This line does not have an =
extractEveryVariable
      dN[k] = image[i-1 + Nr*j] - Jc;                        

[]
['-', '+', '*', '-']
[]
4
TotalArithmeticInstructions  8
1
1
TotalArithmeticInstructions  6
offset pattern is
i-1 + Nr*j
and extracted value is
[' Nr*j']
Offset is
Nr*j
1. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- dN[k] = image[i-1 + Nr*j] - Jc;

Checking double store operation
8   [
7   N
      dN
match
dN
Found variable in List!
Checking double store operation - Done
####
28   *
29   j
27   r
 image[i-1 + Nr
match
image[i-1 + Nr
j] - Jc;                        

match
j]
31    
generateAST for dN[k] = image[i-1 + Nr*j] - Jc;
dN[k] = image[i-1 + Nr*j] - Jc;
dN[k] = image[i-1 + Nr*j] - Jc;
dN[k] = image[i-1 + Nr*j] - Jc;
#1# = #1# - Jc;
#1# = #1# - Jc;
#1# = #1# - Jc;
#1# = #1# - #0#;
#1#    =    #1#    -    #0# ; 
#1#    =    #1#    -    #0# ; 
#1#    =    #1#    -    #0# ; 
#1#=#1#-#0#;
1=1-0
Time Taken 2

extractEveryVariable
Inserting - dN[k] = image[i-1 + Nr*j] - Jc;
      dS[k] = image[i-1 + Nr*j] - Jc;                        

[]
['-', '+', '*', '-']
[]
4
TotalArithmeticInstructions  10
1
1
TotalArithmeticInstructions  8
offset pattern is
i-1 + Nr*j
and extracted value is
[' Nr*j']
Offset is
Nr*j
2. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- dS[k] = image[i-1 + Nr*j] - Jc;

Checking double store operation
8   [
7   S
      dS
match
dS
Checking double store operation - Done
####
28   *
29   j
27   r
 image[i-1 + Nr
match
image[i-1 + Nr
j] - Jc;                        

match
j]
31    
generateAST for dS[k] = image[i-1 + Nr*j] - Jc;
dS[k] = image[i-1 + Nr*j] - Jc;
dS[k] = image[i-1 + Nr*j] - Jc;
dS[k] = image[i-1 + Nr*j] - Jc;
#1# = #1# - Jc;
#1# = #1# - Jc;
#1# = #1# - Jc;
#1# = #1# - #0#;
#1#    =    #1#    -    #0# ; 
#1#    =    #1#    -    #0# ; 
#1#    =    #1#    -    #0# ; 
#1#=#1#-#0#;
1=1-0
Time Taken 2

extractEveryVariable
Inserting - dS[k] = image[i-1 + Nr*j] - Jc;
      dW[k] = image[i + Nr*(j-1)] - Jc;                        

[]
['+', '*', '-', '-']
[]
4
TotalArithmeticInstructions  12
1
1
TotalArithmeticInstructions  10
offset pattern is
i + Nr*(j-1)
and extracted value is
[' Nr*(j-1)']
Offset is
Nr*(j-1)
3. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- dW[k] = image[i + Nr*(j-1)] - Jc;

Checking double store operation
8   [
7   W
      dW
match
dW
Checking double store operation - Done
####
26   *
27   (
25   r
 image[i + Nr
match
image[i + Nr
(j-1)] - Jc;                        

match
j-1
31   )
generateAST for dW[k] = image[i + Nr*(j-1)] - Jc;
dW[k] = image[i + Nr*(j-1)] - Jc;
dW[k] = image[i + Nr*(j-1)] - Jc;
dW[k] = image[i + Nr*(j-1)] - Jc;
#1# = #1# - Jc;
#1# = #1# - Jc;
#1# = #1# - Jc;
#1# = #1# - #0#;
#1#    =    #1#    -    #0# ; 
#1#    =    #1#    -    #0# ; 
#1#    =    #1#    -    #0# ; 
#1#=#1#-#0#;
1=1-0
Time Taken 2

extractEveryVariable
Inserting - dW[k] = image[i + Nr*(j-1)] - Jc;
      dE[k] = image[i + Nr*(j+1)] - Jc;                        

[]
['+', '*', '+', '-']
[]
4
TotalArithmeticInstructions  14
1
1
TotalArithmeticInstructions  12
offset pattern is
i + Nr*(j+1)
and extracted value is
[' Nr*(j+1)']
Offset is
Nr*(j+1)
4. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- dE[k] = image[i + Nr*(j+1)] - Jc;

Checking double store operation
8   [
7   E
      dE
match
dE
Checking double store operation - Done
####
26   *
27   (
25   r
 image[i + Nr
match
image[i + Nr
(j+1)] - Jc;                        

match
j
29   +
generateAST for dE[k] = image[i + Nr*(j+1)] - Jc;
dE[k] = image[i + Nr*(j+1)] - Jc;
dE[k] = image[i + Nr*(j+1)] - Jc;
dE[k] = image[i + Nr*(j+1)] - Jc;
#1# = #1# - Jc;
#1# = #1# - Jc;
#1# = #1# - Jc;
#1# = #1# - #0#;
#1#    =    #1#    -    #0# ; 
#1#    =    #1#    -    #0# ; 
#1#    =    #1#    -    #0# ; 
#1#=#1#-#0#;
1=1-0
Time Taken 2

extractEveryVariable
Inserting - dE[k] = image[i + Nr*(j+1)] - Jc;
 

[]
[]
[]
0
TotalArithmeticInstructions  12
0
0
TotalArithmeticInstructions  12
generateAST for 












This line does not have an =
extractEveryVariable
      temp1 = dW[k];

[]
[]
[]
0
TotalArithmeticInstructions  12
0
0
TotalArithmeticInstructions  12
Checking double store operation
Checking double store operation - Done
generateAST for temp1 = dW[k];
temp1 = dW[k];
temp1 = dW[k];
temp1 = dW[k];
temp1 = #1#;
temp1 = #1#;
temp1 = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - temp1 = dW[k];
      temp2 = dE[k];

[]
[]
[]
0
TotalArithmeticInstructions  12
0
0
TotalArithmeticInstructions  12
Checking double store operation
Checking double store operation - Done
generateAST for temp2 = dE[k];
temp2 = dE[k];
temp2 = dE[k];
temp2 = dE[k];
temp2 = #1#;
temp2 = #1#;
temp2 = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - temp2 = dE[k];
      temp3 = dS[k];

[]
[]
[]
0
TotalArithmeticInstructions  12
0
0
TotalArithmeticInstructions  12
Checking double store operation
Checking double store operation - Done
generateAST for temp3 = dS[k];
temp3 = dS[k];
temp3 = dS[k];
temp3 = dS[k];
temp3 = #1#;
temp3 = #1#;
temp3 = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - temp3 = dS[k];
      temp4 = dN[k];

[]
[]
[]
0
TotalArithmeticInstructions  12
0
0
TotalArithmeticInstructions  12
Checking double store operation
Checking double store operation - Done
generateAST for temp4 = dN[k];
temp4 = dN[k];
temp4 = dN[k];
temp4 = dN[k];
temp4 = #1#;
temp4 = #1#;
temp4 = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - temp4 = dN[k];
      G2 = (temp1*temp1 + temp2*temp2 + temp3*temp3 + temp4*temp4) / (Jc*Jc);

[]
['*', '+', '*', '+', '*', '+', '*', '/', '*']
[]
9
TotalArithmeticInstructions  21
0
0
TotalArithmeticInstructions  21
####
17   *
18   t
16   1
 (temp1
match
temp1
temp1 + temp2*temp2 + temp3*temp3 + temp4*temp4) / (Jc*Jc);

match
temp1
23    
####
31   *
32   t
30   2
 + temp2
match
temp2
temp2 + temp3*temp3 + temp4*temp4) / (Jc*Jc);

match
temp2
37    
####
45   *
46   t
44   3
 + temp3
match
temp3
temp3 + temp4*temp4) / (Jc*Jc);

match
temp3
51    
####
59   *
60   t
58   4
 + temp4
match
temp4
temp4) / (Jc*Jc);

match
temp4
65   )
####
72   *
73   J
71   c
) / (Jc
match
Jc
Jc);

match
Jc
75   )
Division Found
####
67   /
68    
66    
(temp1*temp1 + temp2*temp2 + temp3*temp3 + temp4*temp4
match
temp1*temp1 + temp2*temp2 + temp3*temp3 + temp4*temp4
 (Jc*Jc);

match
Jc
72   *
generateAST for G2 = (temp1*temp1 + temp2*temp2 + temp3*temp3 + temp4*temp4) / (Jc*Jc);
G2 = (temp1*temp1 + temp2*temp2 + temp3*temp3 + temp4*temp4) / (Jc*Jc);
G2 = (temp1*temp1 + temp2*temp2 + temp3*temp3 + temp4*temp4) / (Jc*Jc);
G2 = (temp1*temp1 + temp2*temp2 + temp3*temp3 + temp4*temp4) / (Jc*Jc);
G2 = (temp1*temp1 + temp2*temp2 + temp3*temp3 + temp4*temp4) / (Jc*Jc);
G2 = (temp1*temp1 + temp2*temp2 + temp3*temp3 + temp4*temp4) / (Jc*Jc);
G2 = (temp1*temp1 + temp2*temp2 + temp3*temp3 + temp4*temp4) / (Jc*Jc);
#0# = (#0#*#0# + #0#*#0# + #0#*#0# + #0#*#0#) / (#0#*#0#);
#0#    =     ( #0# * #0#    +    #0# * #0#    +    #0# * #0#    +    #0# * #0# )     /     ( #0# * #0# )  ; 
#0#    =     ( #0# * #0#    +    #0# * #0#    +    #0# * #0#    +    #0# * #0# )     /     ( #0# * #0# )  ; 
#0#    =     ( #0# * #0#    +    #0# * #0#    +    #0# * #0#    +    #0# * #0# )     /     ( #0# * #0# )  ; 
#0#=(#0#*#0#+#0#*#0#+#0#*#0#+#0#*#0#)/(#0#*#0#);
0=(0*0+0*0+0*0+0*0)/(0*0)
Time Taken 4

extractEveryVariable
Inserting - G2 = (temp1*temp1 + temp2*temp2 + temp3*temp3 + temp4*temp4) / (Jc*Jc);
 

[]
[]
[]
0
TotalArithmeticInstructions  21
0
0
TotalArithmeticInstructions  21
generateAST for 












This line does not have an =
extractEveryVariable
      L = (temp1 + temp2 + temp3 + temp4) / Jc;             

[]
['+', '+', '+', '/']
[]
4
TotalArithmeticInstructions  25
0
0
TotalArithmeticInstructions  25
Division Found
####
42   /
43    
41    
(temp1 + temp2 + temp3 + temp4
match
temp1 + temp2 + temp3 + temp4
 Jc;             

match
Jc;
47    
generateAST for L = (temp1 + temp2 + temp3 + temp4) / Jc;
L = (temp1 + temp2 + temp3 + temp4) / Jc;
L = (temp1 + temp2 + temp3 + temp4) / Jc;
L = (temp1 + temp2 + temp3 + temp4) / Jc;
L = (temp1 + temp2 + temp3 + temp4) / Jc;
L = (temp1 + temp2 + temp3 + temp4) / Jc;
L = (temp1 + temp2 + temp3 + temp4) / Jc;
#0# = (#0# + #0# + #0# + #0#) / #0#;
#0#    =     ( #0#    +    #0#    +    #0#    +    #0# )     /    #0# ; 
#0#    =     ( #0#    +    #0#    +    #0#    +    #0# )     /    #0# ; 
#0#    =     ( #0#    +    #0#    +    #0#    +    #0# )     /    #0# ; 
#0#=(#0#+#0#+#0#+#0#)/#0#;
0=(0+0+0+0)/0
Time Taken 3

extractEveryVariable
Inserting - L = (temp1 + temp2 + temp3 + temp4) / Jc;
 

[]
[]
[]
0
TotalArithmeticInstructions  25
0
0
TotalArithmeticInstructions  25
generateAST for 












This line does not have an =
extractEveryVariable
      num  = (0.5*G2) - ((1.0/16.0)*(L*L)) ;                

[]
['*', '-', '/', '*', '*']
[]
5
TotalArithmeticInstructions  30
0
0
TotalArithmeticInstructions  30
####
17   *
18   G
16   5
 (0.5
match
0.5
G2) - ((1.0/16.0)*(L*L)) ;                

match
G2
20   )
####
35   *
36   (
34   )
(1.0/16.0
match
1.0/16.0
(L*L)) ;                

match
L
38   *
####
38   *
39   L
37   L

L)) ;                

match
L
40   )
Division Found
####
29   /
30   1
28   0
 (0.5*G2) - ((1.0
match
0.5*G2) - ((1.0
16.0)*(L*L)) ;                

match
16.0
34   )
generateAST for num  = (0.5*G2) - ((1.0/16.0)*(L*L)) ;
num  = (0.5*G2) - ((1.0/16.0)*(L*L)) ;
num  = (0.5*G2) - ((1.0/16.0)*(L*L)) ;
num  = (0.5*G2) - ((1.0/16.0)*(L*L)) ;
num  = (0.5*G2) - ((1.0/16.0)*(L*L)) ;
num  = (0.5*G2) - ((1.0/16.0)*(L*L)) ;
num  = (0.5*G2) - ((1.0/16.0)*(L*L)) ;
#0#  = (0.5*#0#) - ((1.0/16.0)*(#0#*#0#)) ;
#0#       =     ( 0.5 * #0# )     -     (  ( 1.0 / 16.0 )  *  ( #0# * #0# )  )     ; 
#0#       =     (#0#* #0# )     -     (  (#0#/#0#)  *  ( #0# * #0# )  )     ; 
#0#       =     (#0#* #0# )     -     (  (#0#/#0#)  *  ( #0# * #0# )  )     ; 
#0#=(#0#*#0#)-((#0#/#0#)*(#0#*#0#));
0=(0*0)-((0/0)*(0*0))
Time Taken 3

extractEveryVariable
Inserting - num  = (0.5*G2) - ((1.0/16.0)*(L*L)) ;
      den  = 1 + (.25*L);                                

[]
['+', '*']
[]
2
TotalArithmeticInstructions  32
0
0
TotalArithmeticInstructions  32
####
21   *
22   L
20   5
 1 + (.25
match
1 + (.25
L);                                

match
L
23   )
generateAST for den  = 1 + (.25*L);
den  = 1 + (.25*L);
den  = 1 + (.25*L);
den  = 1 + (.25*L);
den  = 1 + (.25*L);
den  = 1 + (.25*L);
den  = 1 + (.25*L);
#0#  = 1 + (.25*#0#);
#0#       =    1    +     ( .25 * #0# )  ; 
#0#       =    1    +     (#0#* #0# )  ; 
#0#       =   #0#   +     (#0#* #0# )  ; 
#0#=#0#+(#0#*#0#);
0=0+(0*0)
Time Taken 2

extractEveryVariable
Inserting - den  = 1 + (.25*L);
      qsqr = num/(den*den);                              

[]
['/', '*']
[]
2
TotalArithmeticInstructions  34
0
0
TotalArithmeticInstructions  34
####
21   *
22   d
20   n
 num/(den
match
num/(den
den);                              

match
den
25   )
Division Found
####
16   /
17   (
15   m
 num
(den*den);                              

match
den
21   *
generateAST for qsqr = num/(den*den);
qsqr = num/(den*den);
qsqr = num/(den*den);
qsqr = num/(den*den);
qsqr = num/(den*den);
qsqr = num/(den*den);
qsqr = num/(den*den);
#0# = #0#/(#0#*#0#);
#0#    =    #0# /  ( #0# * #0# )  ; 
#0#    =    #0# /  ( #0# * #0# )  ; 
#0#    =    #0# /  ( #0# * #0# )  ; 
#0#=#0#/(#0#*#0#);
0=0/(0*0)
Time Taken 2

extractEveryVariable
Inserting - qsqr = num/(den*den);
 

[]
[]
[]
0
TotalArithmeticInstructions  34
0
0
TotalArithmeticInstructions  34
generateAST for 












This line does not have an =
extractEveryVariable
      den = (qsqr-q0sqr) / (q0sqr * (1+q0sqr)) ;               

[]
['-', '/', '*', '+']
[]
4
TotalArithmeticInstructions  38
0
0
TotalArithmeticInstructions  38
####
34   *
35    
33    
 (qsqr-q0sqr) / (q0sqr
match
qsqr-q0sqr) / (q0sqr
 (1+q0sqr)) ;               

match
1
38   +
Division Found
####
25   /
26    
24    
(qsqr-q0sqr
match
qsqr-q0sqr
 (q0sqr * (1+q0sqr)) ;               

match
q0sqr
33    
generateAST for den = (qsqr-q0sqr) / (q0sqr * (1+q0sqr)) ;
den = (qsqr-q0sqr) / (q0sqr * (1+q0sqr)) ;
den = (qsqr-q0sqr) / (q0sqr * (1+q0sqr)) ;
den = (qsqr-q0sqr) / (q0sqr * (1+q0sqr)) ;
den = (qsqr-q0sqr) / (q0sqr * (1+q0sqr)) ;
den = (qsqr-q0sqr) / (q0sqr * (1+q0sqr)) ;
den = (qsqr-q0sqr) / (q0sqr * (1+q0sqr)) ;
#0# = (#0#-#0#) / (#0# * (1+#0#)) ;
#0#    =     ( #0# - #0# )     /     ( #0#    *     ( 1 + #0# )  )     ; 
#0#    =     ( #0# - #0# )     /     ( #0#    *     ( 1 + #0# )  )     ; 
#0#    =     ( #0# - #0# )     /     ( #0#    *     (#0#+ #0# )  )     ; 
#0#=(#0#-#0#)/(#0#*(#0#+#0#));
0=(0-0)/(0*(0+0))
Time Taken 3

extractEveryVariable
Inserting - den = (qsqr-q0sqr) / (q0sqr * (1+q0sqr)) ;
      c[k] = 1.0 / (1.0+den) ;                           

[]
['/', '+']
[]
2
TotalArithmeticInstructions  40
0
0
TotalArithmeticInstructions  40
Checking double store operation
7   [
6   c
      c
match
c
Found variable in List!
Checking double store operation - Done
Division Found
####
17   /
18    
16    
 1.0
 (1.0+den) ;                           

match
1.0
23   +
generateAST for c[k] = 1.0 / (1.0+den) ;
c[k] = 1.0 / (1.0+den) ;
c[k] = 1.0 / (1.0+den) ;
c[k] = 1.0 / (1.0+den) ;
#1# = 1.0 / (1.0+den) ;
#1# = 1.0 / (1.0+den) ;
#1# = 1.0 / (1.0+den) ;
#1# = 1.0 / (1.0+#0#) ;
#1#    =    1.0    /     ( 1.0 + #0# )     ; 
#1#    =   #0#   /     (#0#+ #0# )     ; 
#1#    =   #0#   /     (#0#+ #0# )     ; 
#1#=#0#/(#0#+#0#);
1=0/(0+0)
Time Taken 2

extractEveryVariable
Inserting - c[k] = 1.0 / (1.0+den) ;
 

[]
[]
[]
0
TotalArithmeticInstructions  40
0
0
TotalArithmeticInstructions  40
generateAST for 












This line does not have an =
extractEveryVariable
      if (c[k] < 0) {   	// Always not-taken.           //BRATIO0.0

scope - pushing if
[]
['<', '/', '/', '-', '/', '/']
['//', '//']
2
TotalArithmeticInstructions  42
0
0
TotalArithmeticInstructions  42
Checking double store operation
Checking double store operation - Done
Division Found
####
25   /
26   /
24   	
      if (c[k] < 0) {   	
match
c[k] < 0) {
/ Always not-taken.           //BRATIO0.0

match
Always
34    
Division Found
####
26   /
27    
25   /

 Always not-taken.           //BRATIO0.0

match
Always
34    
Division Found
####
56   /
57   /
55    
 not-taken.
/BRATIO0.0

Division Found
####
57   /
58   B
56   /

BRATIO0.0

Found Control Density
generateAST for if (c[k] < 0) {   	// Always not-taken.           //BRATIO0.0
if (c[k] < 0) {   	
if (c[k] < 0) {   	
if (c[k] < 0) {   	
if (#1# < 0) {   	
if (#1# < 0) {   	
if (#1# < 0) {   	
0= (#1# < 0)    	
0 =     ( #1#    <    0 )              	 
0 =     ( #1#    <    0 )              	 
0 =     ( #1#    <   #0#)              	 
0=(#1#<#0#)
0=(1<0)
This line does not have an =
extractEveryVariable
Inserting - if (c[k] < 0) {   	// Always not-taken.           //BRATIO0.0
['0.0']
Bratio found
temp bratio is  0.0
Divergence ratio using old  0
If ratio stack - pushing 0.0
         c[k] = 0;

[]
[]
[]
0
TotalArithmeticInstructions  42.0
0
0
TotalArithmeticInstructions  42.0
Checking double store operation
10   [
9   c
         c
match
c
Found variable in List!
Checking double store operation - Done
generateAST for c[k] = 0;
c[k] = 0;
c[k] = 0;
c[k] = 0;
#1# = 0;
#1# = 0;
#1# = 0;
#1# = 0;
#1#    =    0 ; 
#1#    =    0 ; 
#1#    =   #0#; 
#1#=#0#;
1=0
Time Taken 1

extractEveryVariable
Inserting - c[k] = 0;
      }                                   

Scope Found if, popping, New Length 1
[]
[]
[]
0
TotalArithmeticInstructions  42.0
0
0
TotalArithmeticInstructions  42.0
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
      

[]
[]
[]
0
TotalArithmeticInstructions  42.0
0
0
TotalArithmeticInstructions  42.0
generateAST for 












This line does not have an =
extractEveryVariable
      else if (c[k] > 1) {  	// Taken BRATIO0.999992 of the time.          

scope - pushing if
[]
['>', '/', '/']
['//']
1
TotalArithmeticInstructions  43.0
0
0
TotalArithmeticInstructions  43.0
Checking double store operation
Checking double store operation - Done
Division Found
####
29   /
30   /
28   	
      else if (c[k] > 1) {  	
match
if (c[k] > 1) {
/ Taken BRATIO0.999992 of the time.          

match
Taken
37    
Division Found
####
30   /
31    
29   /

 Taken BRATIO0.999992 of the time.          

match
Taken
37    
Found Control Density
generateAST for else if (c[k] > 1) {  	// Taken BRATIO0.999992 of the time.
else if (c[k] > 1) {  	
else if (c[k] > 1) {  	
else if (c[k] > 1) {  	
else if (#1# > 1) {  	
else if (#1# > 1) {  	
else if (#1# > 1) {  	
#0# 0= (#1# > 1)   	
#0#   0 =     ( #1#    >    1 )           	 
#0#   0 =     ( #1#    >    1 )           	 
#0#  #0#=     ( #1#    >   #0#)           	 
#0##0#=(#1#>#0#)
00=(1>0)
This line does not have an =
extractEveryVariable
Inserting - else if (c[k] > 1) {  	// Taken BRATIO0.999992 of the time.
['0.999992']
Bratio found
temp bratio is  0.000256
Divergence ratio is  0.000256
If ratio stack - pushing 0.999992
         c[k] = 1;

[]
[]
[]
0
TotalArithmeticInstructions  43.0
0
0
TotalArithmeticInstructions  43.0
Checking double store operation
10   [
9   c
         c
match
c
Found variable in List!
Checking double store operation - Done
generateAST for c[k] = 1;
c[k] = 1;
c[k] = 1;
c[k] = 1;
#1# = 1;
#1# = 1;
#1# = 1;
#1# = 1;
#1#    =    1 ; 
#1#    =    1 ; 
#1#    =   #0#; 
#1#=#0#;
1=0
Time Taken 1

extractEveryVariable
Inserting - c[k] = 1;
      }                                   

Scope Found if, popping, New Length 1
[]
[]
[]
0
TotalArithmeticInstructions  43.0
0
0
TotalArithmeticInstructions  43.0
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
 

[]
[]
[]
0
TotalArithmeticInstructions  43.0
0
0
TotalArithmeticInstructions  43.0
generateAST for 












This line does not have an =
extractEveryVariable
   }

Scope Found For, popping, New Length 5
[]
[]
[]
0
TotalArithmeticInstructions  43.0
0
0
TotalArithmeticInstructions  43.0
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
}

Scope Found For, popping, New Length 4
[]
[]
[]
0
TotalArithmeticInstructions  43.0
0
0
TotalArithmeticInstructions  43.0
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  43.0
0
0
TotalArithmeticInstructions  43.0
Annotation End Found
ILP!!!
******
0
k = i + Nr*j;
[]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 17, 18, 19, 20]
2
1
1


1
Jc = image[k];
[0]
[2, 3, 4, 5, 10, 11]
1
1
1


2
dN[k] = image[i-1 + Nr*j] - Jc;
[0, 1]
[9]
2
1
1


3
dS[k] = image[i-1 + Nr*j] - Jc;
[0, 1]
[8]
2
1
1


4
dW[k] = image[i + Nr*(j-1)] - Jc;
[0, 1]
[6]
2
1
1


5
dE[k] = image[i + Nr*(j+1)] - Jc;
[0, 1]
[7]
2
1
1


6
temp1 = dW[k];
[0, 4]
[10, 11]
1
1
1


7
temp2 = dE[k];
[0, 5]
[10, 11]
1
1
1


8
temp3 = dS[k];
[0, 3]
[10, 11]
1
1
1


9
temp4 = dN[k];
[0, 2]
[10, 11]
1
1
1


10
G2 = (temp1*temp1 + temp2*temp2 + temp3*temp3 + temp4*temp4) / (Jc*Jc);
[1, 6, 7, 8, 9]
[12]
4
1
1


11
L = (temp1 + temp2 + temp3 + temp4) / Jc;
[1, 6, 7, 8, 9]
[12, 13]
3
1
1


12
num  = (0.5*G2) - ((1.0/16.0)*(L*L)) ;
[10, 11]
[14]
3
1
1


13
den  = 1 + (.25*L);
[11]
[14, 16]
2
1
1


14
qsqr = num/(den*den);
[12, 13]
[15]
2
1
1


15
den = (qsqr-q0sqr) / (q0sqr * (1+q0sqr)) ;
[14]
[16]
3
1
1


16
c[k] = 1.0 / (1.0+den) ;
[0, 13, 15]
[17, 19]
2
1
1


17
if (c[k] < 0) {   	// Always not-taken.           //BRATIO0.0
[0, 16]
[]
0
1
1


18
c[k] = 0;
[0]
[19]
1
0.0
1


19
else if (c[k] > 1) {  	// Taken BRATIO0.999992 of the time.
[0, 16, 18]
[]
0
1
1


20
c[k] = 1;
[0]
[]
1
0.999992
1


******
Node 0's -
[0]
DFS Stack - pushing 0
[2, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 1
(0,2)
(1,1)
3
Selected!
DFS Stack - pushing 2
(0,2)
(2,2)
4
Selected!
DFS Stack - pushing 3
(0,2)
(3,2)
4
Selected!
DFS Stack - pushing 4
(0,2)
(4,2)
4
Selected!
DFS Stack - pushing 5
(0,2)
(5,2)
4
Selected!
DFS Stack - pushing 6
(0,2)
(6,1)
3
Selected!
DFS Stack - pushing 7
(0,2)
(7,1)
3
Selected!
DFS Stack - pushing 8
(0,2)
(8,1)
3
Selected!
DFS Stack - pushing 9
(0,2)
(9,1)
3
Selected!
DFS Stack - pushing 16
(0,2)
(16,2)
4
Selected!
DFS Stack - pushing 17
(0,2)
(17,0)
2
Selected!
DFS Stack - pushing 18
(0,2)
(18,0.0)
2
Selected!
DFS Stack - pushing 19
(0,2)
(19,0)
2
Selected!
DFS Stack - pushing 20
(0,2)
(20,0.999992)
2
Selected!
[2, 3, 4, 4, 4, 4, 3, 3, 3, 3, -999, -999, -999, -999, -999, -999, 4, 2, 2, 2, 2]
[2, 3, 4, 4, 4, 4, 3, 3, 3, 3, -999, -999, -999, -999, -999, -999, 4, 2, 2, 2, 2]
[2, 3, 4, 4, 4, 4, 3, 3, 3, 3, -999, -999, -999, -999, -999, -999, 4, 2, 2, 2, 2]
[2, 3, 4, 4, 4, 4, 3, 3, 3, 3, -999, -999, -999, -999, -999, -999, 4, 2, 2, 2, 2]
[2, 3, 4, 4, 4, 4, 3, 3, 3, 3, -999, -999, -999, -999, -999, -999, 4, 2, 2, 2, 2]
[2, 3, 4, 4, 4, 4, 3, 3, 3, 3, -999, -999, -999, -999, -999, -999, 4, 2, 2, 2, 2]
DFS Stack - pushing 10
(9,3)
(10,4)
7
Selected!
DFS Stack - pushing 11
(9,3)
(11,3)
6
Selected!
[2, 3, 4, 4, 4, 4, 3, 3, 3, 3, 7, 6, -999, -999, -999, -999, 4, 2, 2, 2, 2]
DFS Stack - pushing 12
(11,6)
(12,3)
9
Selected!
DFS Stack - pushing 13
(11,6)
(13,2)
8
Selected!
[2, 3, 4, 4, 4, 4, 3, 3, 3, 3, 7, 6, 9, 8, -999, -999, 4, 2, 2, 2, 2]
DFS Stack - pushing 14
(13,8)
(14,2)
10
Selected!
[2, 3, 4, 4, 4, 4, 3, 3, 3, 3, 7, 6, 9, 8, 10, -999, 4, 2, 2, 2, 2]
DFS Stack - pushing 15
(14,10)
(15,3)
13
Selected!
[2, 3, 4, 4, 4, 4, 3, 3, 3, 3, 7, 6, 9, 8, 10, 13, 4, 2, 2, 2, 2]
[2, 3, 4, 4, 4, 4, 3, 3, 3, 3, 7, 6, 9, 8, 10, 13, 4, 2, 2, 2, 2]
[2, 3, 4, 4, 4, 4, 3, 3, 3, 3, 7, 6, 9, 8, 10, 13, 4, 2, 2, 2, 2]
[2, 3, 4, 4, 4, 4, 3, 3, 3, 3, 7, 6, 9, 8, 10, 13, 4, 2, 2, 2, 2]
[2, 3, 4, 4, 4, 4, 3, 3, 3, 3, 7, 6, 9, 8, 10, 13, 4, 2, 2, 2, 2]
[2, 3, 4, 4, 4, 4, 3, 3, 3, 3, 7, 6, 9, 8, 10, 13, 4, 2, 2, 2, 2]
[2, 3, 4, 4, 4, 4, 3, 3, 3, 3, 7, 6, 9, 8, 10, 13, 4, 2, 2, 2, 2]
[2, 3, 4, 4, 4, 4, 3, 3, 3, 3, 7, 6, 9, 8, 10, 13, 4, 2, 2, 2, 2]
[2, 3, 4, 4, 4, 4, 3, 3, 3, 3, 7, 6, 9, 8, 10, 13, 4, 2, 2, 2, 2]
[2, 3, 4, 4, 4, 4, 3, 3, 3, 3, 7, 6, 9, 8, 10, 13, 4, 2, 2, 2, 2]
[2, 3, 4, 4, 4, 4, 3, 3, 3, 3, 7, 6, 9, 8, 10, 13, 4, 2, 2, 2, 2]
[13]
######################################################
**********
The values of this entry are
Name                 -  dN
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  niter
Scope                -  Global
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  c
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  G2
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  r1
Scope                -  Global
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  image
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  Nc
Scope                -  Global
varType              -  0
size                 -  1
value                -  458
iteratorVar          -  False
**********
The values of this entry are
Name                 -  iter
Scope                -  Global
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  iN
Scope                -  Global
varType              -  0
size                 -  502
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  cN
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  jE
Scope                -  Global
varType              -  0
size                 -  458
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  Nr
Scope                -  Global
varType              -  0
size                 -  1
value                -  502
iteratorVar          -  False
**********
The values of this entry are
Name                 -  Jc
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  meanROI
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  tmp
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  lambda
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
***********
Line 1
LHS -  for i
RHS -  i Nr i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - for (i=0; i < Nr; i++) { //NTRATIO502
***
Line 2
LHS -  k
RHS -  i Nr j
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 2
Line	     - k = i + Nr*j;
***
Line 3
LHS -  Jc
RHS -  image k
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - Jc = image[k];
***
Line 4
LHS -  dN
RHS -  image i Nr j Jc k
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 2
Line	     - dN[k] = image[i-1 + Nr*j] - Jc;
***
Line 5
LHS -  dS
RHS -  image i Nr j Jc k
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 2
Line	     - dS[k] = image[i-1 + Nr*j] - Jc;
***
Line 6
LHS -  dW
RHS -  image i Nr j Jc k
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 2
Line	     - dW[k] = image[i + Nr*(j-1)] - Jc;
***
Line 7
LHS -  dE
RHS -  image i Nr j Jc k
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 2
Line	     - dE[k] = image[i + Nr*(j+1)] - Jc;
***
Line 8
LHS -  temp
RHS -  dW k
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - temp1 = dW[k];
***
Line 9
LHS -  temp
RHS -  dE k
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - temp2 = dE[k];
***
Line 10
LHS -  temp
RHS -  dS k
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - temp3 = dS[k];
***
Line 11
LHS -  temp
RHS -  dN k
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - temp4 = dN[k];
***
Line 12
LHS -  G
RHS -  temp temp temp temp temp temp temp temp Jc Jc
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 4
Line	     - G2 = (temp1*temp1 + temp2*temp2 + temp3*temp3 + temp4*temp4) / (Jc*Jc);
***
Line 13
LHS -  L
RHS -  temp temp temp temp Jc
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 3
Line	     - L = (temp1 + temp2 + temp3 + temp4) / Jc;
***
Line 14
LHS -  num
RHS -  G L L
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 3
Line	     - num  = (0.5*G2) - ((1.0/16.0)*(L*L)) ;
***
Line 15
LHS -  den
RHS -  L
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 2
Line	     - den  = 1 + (.25*L);
***
Line 16
LHS -  qsqr
RHS -  num den den
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 2
Line	     - qsqr = num/(den*den);
***
Line 17
LHS -  den
RHS -  qsqr q sqr q sqr q sqr
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 3
Line	     - den = (qsqr-q0sqr) / (q0sqr * (1+q0sqr)) ;
***
Line 18
LHS -  c
RHS -  den k
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 2
Line	     - c[k] = 1.0 / (1.0+den) ;
***
Line 19
LHS - 
RHS -  c k
For Ratio - 1
If  Ratio - 1
Scope     - if
ScopeId   - 5
Cycles    - 0
Line	     - if (c[k] < 0) {   	// Always not-taken.           //BRATIO0.0
***
Line 20
LHS -  c
RHS -  k
For Ratio - 1
If  Ratio - 0.0
Scope     - if
ScopeId   - 5
Cycles    - 1
Line	     - c[k] = 0;
***
Line 21
LHS - 
RHS -  else c k
For Ratio - 1
If  Ratio - 1
Scope     - if
ScopeId   - 5
Cycles    - 0
Line	     - else if (c[k] > 1) {  	// Taken BRATIO0.999992 of the time.
***
Line 22
LHS -  c
RHS -  k
For Ratio - 1
If  Ratio - 0.999992
Scope     - if
ScopeId   - 5
Cycles    - 1
Line	     - c[k] = 1;
***
***********


TotalTranscendentals - 0
TotalArithmeticInstructions - 43.0
NumLoadOperations - 11.0
NumStoreOperations - 5.999992
NumOffsetAccesses -  0
NumIndirectAccesses -  0
NumDoubleAccesses -  0
CriticalPath -  13
nThreadsCount -  229916
instCountWithFRatio -  0
ninst       -  59.999992
ilp16k       -  57.2109581615
ilp32       -  2.36453200728
ilpRate       -  24.1954678496
Warnings!!!!
1. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- dN[k] = image[i-1 + Nr*j] - Jc;

2. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- dS[k] = image[i-1 + Nr*j] - Jc;

3. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- dW[k] = image[i + Nr*(j-1)] - Jc;

4. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- dE[k] = image[i + Nr*(j+1)] - Jc;



######################################################
Transcendental Ratio - L
Arithmetic Intensity - M
Global Memory Operation - H
BranchDivergence - L 0.000256
ControlDensity -  H
Floating Point Mul/Div - H
Total Instruction - L
Num Threads - 229916
Critical Path - L
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test21.txt
int Nc = 458;

[]
int Nr = 502;

[]
int niter=100; 

[]
float image[229916]; 

[]
long Nr,Nc;

[]
long Ne;

[]
int niter;  

[]
float lambda;  

[]
int r1,r2,c1,c2; 

[]
long NeROI;     

[]
float meanROI, varROI, q0sqr;     

[]
int iN[502], iS[502];

[]
int jE[458], jW[458];

[]
float Jc;

[]
float dN[229916], dS[229916], dW[229916], dE[229916];

[]
float tmp,sum,sum2;

[]
float G2,L,num,den,qsqr,D;

[]
float c[229916];

[]
float cN,cS,cW,cE;

[]
int iter;    // primary loop

[]
long i,j;    // image row/col

[]
long k;      // image single index    

[]


[]
for (i=0; i<Nr; i++) {

scope - pushing For
For count stack - pushing 1
[]
    iN[i] = i-1;       // holds index of IMAGE row above

[]
    iS[i] = i+1;       // holds index of IMAGE row below

[]
}

[]


[]
for (j=0; j<Nc; j++) {

scope - pushing For
For count stack - pushing 1
[]
    jW[j] = j-1;       // holds index of IMAGE column on the left

[]
    jE[j] = j+1;       // holds index of IMAGE column on the right

[]
}

[]


[]
// N/S/W/E boundary conditions, fix surrounding indices outside boundary of IMAGE

[]
iN[0]    = 0;      // changes IMAGE top row index from -1 to 0

[]
iS[Nr-1] = Nr-1;   // changes IMAGE bottom row index from Nr to Nr-1 

[]
jW[0]    = 0;          

[]


[]
 

[]


[]
for (iter=0; iter < niter; iter++){

scope - pushing For
For count stack - pushing 1
[]
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
for (j=0; j<Nc; j++) {     //NTRATIO458                  

scope - pushing For
For count stack - pushing 1
['NTRATIO458']
['458']
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
27   /
28   /
26    
0; j<Nc; j++) {
match
j<Nc; j++) {
/NTRATIO458                  

match
NTRATIO458
39    
Division Found
####
28   /
29   N
27   /

NTRATIO458                  

match
NTRATIO458
39    
generateAST for for (j=0; j<Nc; j++) {     //NTRATIO458
This line is a for
extractEveryVariable
Inserting - for (j=0; j<Nc; j++) {     //NTRATIO458
    for (i=0; i<Nr; i++) { //NTRATIO502

scope - pushing For
For count stack - pushing 1
['NTRATIO502']
['502']
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  4
0
0
TotalArithmeticInstructions  4
Division Found
####
27   /
28   /
26    
0; i<Nr; i++) {
match
i<Nr; i++) {
/NTRATIO502

Division Found
####
28   /
29   N
27   /

NTRATIO502

generateAST for for (i=0; i<Nr; i++) { //NTRATIO502
This line is a for
extractEveryVariable
Inserting - for (i=0; i<Nr; i++) { //NTRATIO502
        k = i + Nr*j;      

[]
['+', '*']
[]
2
TotalArithmeticInstructions  6
0
0
TotalArithmeticInstructions  6
####
18   *
19   j
17   r
 i + Nr
match
i + Nr
j;      

match
j;
21    
generateAST for k = i + Nr*j;
k = i + Nr*j;
k = i + Nr*j;
k = i + Nr*j;
k = i + Nr*j;
k = i + Nr*j;
k = i + Nr*j;
#0# = #0# + #0#*#0#;
#0#    =    #0#    +    #0# * #0# ; 
#0#    =    #0#    +    #0# * #0# ; 
#0#    =    #0#    +    #0# * #0# ; 
#0#=#0#+#0#*#0#;
0=0+0*0
Time Taken 2

extractEveryVariable
Inserting - k = i + Nr*j;
        cN = c[k];        

[]
[]
[]
0
TotalArithmeticInstructions  6
0
0
TotalArithmeticInstructions  6
Checking double store operation
Checking double store operation - Done
generateAST for cN = c[k];
cN = c[k];
cN = c[k];
cN = c[k];
cN = #1#;
cN = #1#;
cN = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - cN = c[k];
        cS = c[i+1+Nr*j];

[]
['+', '+', '*']
[]
3
TotalArithmeticInstructions  9
1
1
TotalArithmeticInstructions  7
offset pattern is
i+1+Nr*j
and extracted value is
['1+Nr*j']
Offset is
1+Nr*j
1. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- cS = c[i+1+Nr*j];

Checking double store operation
Checking double store operation - Done
####
21   *
22   j
20   r
 c[i+1+Nr
match
c[i+1+Nr
j];

generateAST for cS = c[i+1+Nr*j];
cS = c[i+1+Nr*j];
cS = c[i+1+Nr*j];
cS = c[i+1+Nr*j];
cS = #1#;
cS = #1#;
cS = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - cS = c[i+1+Nr*j];
        cW = c[k];          

[]
[]
[]
0
TotalArithmeticInstructions  7
0
0
TotalArithmeticInstructions  7
Checking double store operation
Checking double store operation - Done
generateAST for cW = c[k];
cW = c[k];
cW = c[k];
cW = c[k];
cW = #1#;
cW = #1#;
cW = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - cW = c[k];
        cE = c[i + Nr*(j+1)];

[]
['+', '*', '+']
[]
3
TotalArithmeticInstructions  10
1
1
TotalArithmeticInstructions  8
offset pattern is
i + Nr*(j+1)
and extracted value is
[' Nr*(j+1)']
Offset is
Nr*(j+1)
2. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- cE = c[i + Nr*(j+1)];

Checking double store operation
Checking double store operation - Done
####
21   *
22   (
20   r
 c[i + Nr
match
c[i + Nr
(j+1)];

match
j
24   +
generateAST for cE = c[i + Nr*(j+1)];
cE = c[i + Nr*(j+1)];
cE = c[i + Nr*(j+1)];
cE = c[i + Nr*(j+1)];
cE = #1#;
cE = #1#;
cE = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - cE = c[i + Nr*(j+1)];
        D = cN*dN[k] + cS*dS[k] + cW*dW[k] + cE*dE[k];          

[]
['*', '+', '*', '+', '*', '+', '*']
[]
7
TotalArithmeticInstructions  15
2
2
TotalArithmeticInstructions  13
Checking double store operation
Checking double store operation - Done
####
14   *
15   d
13   N
 cN
match
cN
dN[k] + cS*dS[k] + cW*dW[k] + cE*dE[k];          

match
dN
17   [
20
####
25   *
26   d
24   S
 + cS
match
cS
dS[k] + cW*dW[k] + cE*dE[k];          

match
dS
28   [
31
####
36   *
37   d
35   W
 + cW
match
cW
dW[k] + cE*dE[k];          

match
dW
39   [
42
####
47   *
48   d
46   E
 + cE
match
cE
dE[k];          

match
dE
50   [
53
generateAST for D = cN*dN[k] + cS*dS[k] + cW*dW[k] + cE*dE[k];
D = cN*dN[k] + cS*dS[k] + cW*dW[k] + cE*dE[k];
D = cN*dN[k] + cS*dS[k] + cW*dW[k] + cE*dE[k];
D = cN*dN[k] + cS*dS[k] + cW*dW[k] + cE*dE[k];
D = cN*#1# + cS*#1# + cW*#1# + cE*#1#;
D = cN*#1# + cS*#1# + cW*#1# + cE*#1#;
D = cN*#1# + cS*#1# + cW*#1# + cE*#1#;
#0# = #0#*#1# + #0#*#1# + #0#*#1# + #0#*#1#;
#0#    =    #0# * #1#    +    #0# * #1#    +    #0# * #1#    +    #0# * #1# ; 
#0#    =    #0# * #1#    +    #0# * #1#    +    #0# * #1#    +    #0# * #1# ; 
#0#    =    #0# * #1#    +    #0# * #1#    +    #0# * #1#    +    #0# * #1# ; 
#0#=#0#*#1#+#0#*#1#+#0#*#1#+#0#*#1#;
0=0*1+0*1+0*1+0*1
Time Taken 4

extractEveryVariable
Inserting - D = cN*dN[k] + cS*dS[k] + cW*dW[k] + cE*dE[k];
        image[k] = image[k] + 0.25*lambda*D;   

[]
['+', '*', '*']
[]
3
TotalArithmeticInstructions  16
0
0
TotalArithmeticInstructions  16
Checking double store operation
13   [
12   e
        image
match
image
Found variable in List!
Checking double store operation - Done
####
34   *
35   l
33   5
 image[k] + 0.25
match
image[k] + 0.25
lambda*D;   

match
lambda
41   *
####
41   *
42   D
40   a

D;   

match
D;
44    
generateAST for image[k] = image[k] + 0.25*lambda*D;
image[k] = image[k] + 0.25*lambda*D;
image[k] = image[k] + 0.25*lambda*D;
image[k] = image[k] + 0.25*lambda*D;
#1# = #1# + 0.25*lambda*D;
#1# = #1# + 0.25*lambda*D;
#1# = #1# + 0.25*lambda*D;
#1# = #1# + 0.25*#0#*#0#;
#1#    =    #1#    +    0.25 * #0# * #0# ; 
#1#    =    #1#    +   #0#* #0# * #0# ; 
#1#    =    #1#    +   #0#* #0# * #0# ; 
#1#=#1#+#0#*#0#*#0#;
1=1+0*0*0
Time Taken 3

extractEveryVariable
Inserting - image[k] = image[k] + 0.25*lambda*D;
    }

Scope Found For, popping, New Length 5
[]
[]
[]
0
TotalArithmeticInstructions  16
0
0
TotalArithmeticInstructions  16
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
}

Scope Found For, popping, New Length 4
[]
[]
[]
0
TotalArithmeticInstructions  16
0
0
TotalArithmeticInstructions  16
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  16
0
0
TotalArithmeticInstructions  16
Annotation End Found
ILP!!!
******
0
k = i + Nr*j;
[]
[1, 3, 5, 6]
2
1
1


1
cN = c[k];
[0]
[5]
1
1
1


2
cS = c[i+1+Nr*j];
[]
[5]
1
1
1


3
cW = c[k];
[0]
[5]
1
1
1


4
cE = c[i + Nr*(j+1)];
[]
[5]
1
1
1


5
D = cN*dN[k] + cS*dS[k] + cW*dW[k] + cE*dE[k];
[0, 1, 2, 3, 4]
[6]
4
1
1


6
image[k] = image[k] + 0.25*lambda*D;
[0, 5]
[]
3
1
1


******
Node 0's -
[0, 2, 4]
DFS Stack - pushing 0
[2, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 1
(0,2)
(1,1)
3
Selected!
DFS Stack - pushing 3
(0,2)
(3,1)
3
Selected!
DFS Stack - pushing 5
(0,2)
(5,4)
6
Selected!
DFS Stack - pushing 6
(0,2)
(6,3)
5
Selected!
[2, 3, -999, 3, -999, 6, 5]
[2, 3, -999, 3, -999, 6, 5]
[2, 3, -999, 3, -999, 6, 5]
[2, 3, -999, 3, -999, 6, 5]
DFS Stack - pushing 2
[-999, -999, 1, -999, -999, -999, -999]
DFS Stack - pushing 5
(2,1)
(5,4)
5
Selected!
[-999, -999, 1, -999, -999, 5, -999]
DFS Stack - pushing 6
(5,5)
(6,3)
8
Selected!
[-999, -999, 1, -999, -999, 5, 8]
DFS Stack - pushing 4
[-999, -999, -999, -999, 1, -999, -999]
DFS Stack - pushing 5
(4,1)
(5,4)
5
Selected!
[-999, -999, -999, -999, 1, 5, -999]
DFS Stack - pushing 6
(5,5)
(6,3)
8
Selected!
[-999, -999, -999, -999, 1, 5, 8]
[6, 8, 8]
######################################################
**********
The values of this entry are
Name                 -  dN
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  niter
Scope                -  Global
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  c
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  G2
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  r1
Scope                -  Global
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  image
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  Nc
Scope                -  Global
varType              -  0
size                 -  1
value                -  458
iteratorVar          -  False
**********
The values of this entry are
Name                 -  iter
Scope                -  Global
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  iN
Scope                -  Global
varType              -  0
size                 -  502
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  cN
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  jE
Scope                -  Global
varType              -  0
size                 -  458
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  Nr
Scope                -  Global
varType              -  0
size                 -  1
value                -  502
iteratorVar          -  False
**********
The values of this entry are
Name                 -  Jc
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  meanROI
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  tmp
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  lambda
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
***********
Line 1
LHS -  for j
RHS -  j Nc j
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 3
Cycles    - 1
Line	     - for (j=0; j<Nc; j++) {     //NTRATIO458
***
Line 2
LHS -  for i
RHS -  i Nr i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - for (i=0; i<Nr; i++) { //NTRATIO502
***
Line 3
LHS -  k
RHS -  i Nr j
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 2
Line	     - k = i + Nr*j;
***
Line 4
LHS -  cN
RHS -  c k
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - cN = c[k];
***
Line 5
LHS -  cS
RHS -  c i Nr j
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - cS = c[i+1+Nr*j];
***
Line 6
LHS -  cW
RHS -  c k
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - cW = c[k];
***
Line 7
LHS -  cE
RHS -  c i Nr j
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - cE = c[i + Nr*(j+1)];
***
Line 8
LHS -  D
RHS -  cN dN k cS dS k cW dW k cE dE k
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 4
Line	     - D = cN*dN[k] + cS*dS[k] + cW*dW[k] + cE*dE[k];
***
Line 9
LHS -  image
RHS -  image k lambda D
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 3
Line	     - image[k] = image[k] + 0.25*lambda*D;
***
***********


TotalTranscendentals - 0
TotalArithmeticInstructions - 16
NumLoadOperations - 9
NumStoreOperations - 1
NumOffsetAccesses -  0
NumIndirectAccesses -  0
NumDoubleAccesses -  0
CriticalPath -  8
nThreadsCount -  229916
instCountWithFRatio -  0
ninst       -  26
ilp16k       -  25
ilp32       -  3
ilpRate       -  8
Warnings!!!!
1. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- cS = c[i+1+Nr*j];

2. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- cE = c[i + Nr*(j+1)];



######################################################
Transcendental Ratio - L
Arithmetic Intensity - M
Global Memory Operation - H
BranchDivergence - L 0
ControlDensity -  L
Floating Point Mul/Div - H
Total Instruction - L
Num Threads - 229916
Critical Path - L
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test22.txt


[]
int Ne = 229916

[]
float image[229916];

[]
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
    for (i=0; i<Ne; i++) { //NTRATIO229916  

scope - pushing For
For count stack - pushing 1
['NTRATIO229916']
['229916']
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
27   /
28   /
26    
0; i<Ne; i++) {
match
i<Ne; i++) {
/NTRATIO229916  

match
NTRATIO229916
42    
Division Found
####
28   /
29   N
27   /

NTRATIO229916  

match
NTRATIO229916
42    
generateAST for for (i=0; i<Ne; i++) { //NTRATIO229916
This line is a for
extractEveryVariable
Inserting - for (i=0; i<Ne; i++) { //NTRATIO229916
        image[i] = logf(image[i])*255.0f;                  

[]
['*']
[]
1
TotalArithmeticInstructions  3
0
0
TotalArithmeticInstructions  3
Checking double store operation
13   [
12   e
        image
match
image
Found variable in List!
Checking double store operation - Done
####
33   *
34   2
32   )
(image
match
image
255.0f;                  

match
255.0f;
41    
generateAST for image[i] = logf(image[i])*255.0f;
image[i] = logf(image[i])*255.0f;
image[i] = logf(image[i])*255.0f;
image[i] = logf(image[i])*255.0f;
#1# = logf(#1#)*255.0f;
#1# = logf(#1#)*255.0f;
#1# = logf(#1#)*255.0f;
#1# = #0#(#1#)*#0#;
#1#    =    #0# ( #1# )  * #0# ; 
#1#    =    #0# ( #1# )  * #0# ; 
#1#    =    #0# ( #1# )  * #0# ; 
#1#=#0#(#1#)*#0#;
1=0(1)*0
Time Taken 3

extractEveryVariable
Inserting - image[i] = logf(image[i])*255.0f;
    }

Scope Found For, popping, New Length 1
[]
[]
[]
0
TotalArithmeticInstructions  3
0
0
TotalArithmeticInstructions  3
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  3
0
0
TotalArithmeticInstructions  3
Annotation End Found
ILP!!!
******
0
image[i] = logf(image[i])*255.0f;
[]
[]
3
1
1


******
Node 0's -
[0]
DFS Stack - pushing 0
[3]
[3]
######################################################
**********
The values of this entry are
Name                 -  image
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  Ne
Scope                -  Global
varType              -  0
size                 -  1
value                -  229916
iteratorVar          -  False
**********
***********
Line 1
LHS -  for i
RHS -  i Ne i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 1
Line	     - for (i=0; i<Ne; i++) { //NTRATIO229916
***
Line 2
LHS -  image
RHS -  logf image i f
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 2
Cycles    - 3
Line	     - image[i] = logf(image[i])*255.0f;
***
***********


TotalTranscendentals - 1
TotalArithmeticInstructions - 3
NumLoadOperations - 1
NumStoreOperations - 1
NumOffsetAccesses -  0
NumIndirectAccesses -  0
NumDoubleAccesses -  0
CriticalPath -  3
nThreadsCount -  229916
instCountWithFRatio -  0
ninst       -  6
ilp16k       -  5
ilp32       -  4
ilpRate       -  1


######################################################
Transcendental Ratio - H
Arithmetic Intensity - M
Global Memory Operation - H
BranchDivergence - L 0
ControlDensity -  L
Floating Point Mul/Div - H
Total Instruction - L
Num Threads - 229916
Critical Path - L
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:455: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:463: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:472: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:480: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:576: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:588: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:591: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:649: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:661: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:664: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:746: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py:1016: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
Hi
scope - pushing Global
For count stack - pushing 1
If ratio stack - pushing 1
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test23.txt
int rows = 2048;

[]
int cols = 2048;

[]
niter = 2;

[]
int iN[2048], iS[2048], jE[2048], jW[2048];

[]
float Jc;

[]
float dNi[4194304], dS[4194304], dW[4194304], dE[4194304];

[]
float tmp,sum,sum2;

[]
float G2,L,num,den,qsqr,D;

[]
float c[4194304];

[]
float cN,cS,cW,cE;

[]
int iter;   // primary loop

[]
long i,j;    // image row/col

[]
long k;      // image single index    

[]


[]
for (int i=0; i< rows; i++) {

scope - pushing For
For count stack - pushing 1
[]
    iN[i] = i-1;

[]
    iS[i] = i+1;

[]
}

[]


[]
for (int j=0; j< cols; j++) {

scope - pushing For
For count stack - pushing 1
[]
    jW[j] = j-1;

[]
    jE[j] = j+1;

[]
}

[]


[]
iN[0]    = 0;

[]
iS[rows-1] = rows-1;

[]
jW[0]    = 0;

[]
jE[cols-1] = cols-1;

[]


[]
for (iter=0; iter<niter; iter++){

scope - pushing For
For count stack - pushing 1
[]


[]
    for (int i = 0; i < rows; i++) { //NTRATIO2048

scope - pushing For
For count stack - pushing 1
['NTRATIO2048']
['2048']
####Annotation Begins####

Annotation Begin Found
[]
[]
[]
0
TotalArithmeticInstructions  0
0
0
TotalArithmeticInstructions  0
        for (int j = 0; j < cols; j++) { //NTRATIO2048

scope - pushing For
For count stack - pushing 1
['NTRATIO2048']
['2048']
['<', '++', '/', '/']
['//']
2
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
41   /
42   /
40    
 0; j < cols; j++) {
match
j < cols; j++) {
/NTRATIO2048

Division Found
####
42   /
43   N
41   /

NTRATIO2048

generateAST for for (int j = 0; j < cols; j++) { //NTRATIO2048
This line is a for
extractEveryVariable
Inserting - for (int j = 0; j < cols; j++) { //NTRATIO2048
            // current index

[]
['/', '/']
['//']
0
TotalArithmeticInstructions  2
0
0
TotalArithmeticInstructions  2
Division Found
####
12   /
13   /
11    

/ current index

match
current
22    
Division Found
####
13   /
14    
12   /

 current index

match
current
22    
generateAST for // current index
This line is a comment
This line is a comment
            k = i * cols + j;

[]
['*', '+']
[]
2
TotalArithmeticInstructions  4
0
0
TotalArithmeticInstructions  4
####
18   *
19    
17    
 i
match
i
 cols + j;

match
cols
24    
generateAST for k = i * cols + j;
k = i * cols + j;
k = i * cols + j;
k = i * cols + j;
k = i * cols + j;
k = i * cols + j;
k = i * cols + j;
#0# = #0# * #0# + #0#;
#0#    =    #0#    *    #0#    +    #0# ; 
#0#    =    #0#    *    #0#    +    #0# ; 
#0#    =    #0#    *    #0#    +    #0# ; 
#0#=#0#*#0#+#0#;
0=0*0+0
Time Taken 2

extractEveryVariable
Inserting - k = i * cols + j;
 

[]
[]
[]
0
TotalArithmeticInstructions  4
0
0
TotalArithmeticInstructions  4
generateAST for 












This line does not have an =
extractEveryVariable
            // diffusion coefficent

[]
['/', '/']
['//']
0
TotalArithmeticInstructions  4
0
0
TotalArithmeticInstructions  4
Division Found
####
12   /
13   /
11    

/ diffusion coefficent

match
diffusion
24    
Division Found
####
13   /
14    
12   /

 diffusion coefficent

match
diffusion
24    
generateAST for // diffusion coefficent
This line is a comment
This line is a comment
            cN = c[k];

[]
[]
[]
0
TotalArithmeticInstructions  4
0
0
TotalArithmeticInstructions  4
Checking double store operation
Checking double store operation - Done
generateAST for cN = c[k];
cN = c[k];
cN = c[k];
cN = c[k];
cN = #1#;
cN = #1#;
cN = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - cN = c[k];
            cS = c[i*cols -cols + j];

[]
['*', '-', '+']
[]
3
TotalArithmeticInstructions  7
1
1
TotalArithmeticInstructions  5
offset pattern is
i*cols -cols + j
and extracted value is
[' j']
Offset is
j
Checking double store operation
Checking double store operation - Done
####
20   *
21   c
19   i
 c[i
match
c[i
cols -cols + j];

match
cols
25    
generateAST for cS = c[i*cols -cols + j];
cS = c[i*cols -cols + j];
cS = c[i*cols -cols + j];
cS = c[i*cols -cols + j];
cS = #1#;
cS = #1#;
cS = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - cS = c[i*cols -cols + j];
            cW = c[k];

[]
[]
[]
0
TotalArithmeticInstructions  5
0
0
TotalArithmeticInstructions  5
Checking double store operation
Checking double store operation - Done
generateAST for cW = c[k];
cW = c[k];
cW = c[k];
cW = c[k];
cW = #1#;
cW = #1#;
cW = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - cW = c[k];
            cE = c[i*cols + i+1];

[]
['*', '+', '+']
[]
3
TotalArithmeticInstructions  8
1
1
TotalArithmeticInstructions  6
offset pattern is
i*cols + i+1
and extracted value is
[' i+1']
Offset is
i+1
1. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- cE = c[i*cols + i+1];

Checking double store operation
Checking double store operation - Done
####
20   *
21   c
19   i
 c[i
match
c[i
cols + i+1];

match
cols
25    
generateAST for cE = c[i*cols + i+1];
cE = c[i*cols + i+1];
cE = c[i*cols + i+1];
cE = c[i*cols + i+1];
cE = #1#;
cE = #1#;
cE = #1#;
#0# = #1#;
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#    =    #1# ; 
#0#=#1#;
0=1
Time Taken 1

extractEveryVariable
Inserting - cE = c[i*cols + i+1];
 

[]
[]
[]
0
TotalArithmeticInstructions  6
0
0
TotalArithmeticInstructions  6
generateAST for 












This line does not have an =
extractEveryVariable
            // divergence (equ 58)

[]
['/', '/']
['//']
0
TotalArithmeticInstructions  6
0
0
TotalArithmeticInstructions  6
Division Found
####
12   /
13   /
11    

/ divergence (equ 58)

match
divergence
25    
Division Found
####
13   /
14    
12   /

 divergence (equ 58)

match
divergence
25    
generateAST for // divergence (equ 58)
This line is a comment
This line is a comment
            D = cN * dN[k] + cS * dS[k] + cW * dW[k] + cE * dE[k];

[]
['*', '+', '*', '+', '*', '+', '*']
[]
7
TotalArithmeticInstructions  13
2
2
TotalArithmeticInstructions  11
Checking double store operation
Checking double store operation - Done
####
19   *
20    
18    
 cN
match
cN
 dN[k] + cS * dS[k] + cW * dW[k] + cE * dE[k];

match
dN
23   [
26
####
32   *
33    
31    
 + cS
match
cS
 dS[k] + cW * dW[k] + cE * dE[k];

match
dS
36   [
39
####
45   *
46    
44    
 + cW
match
cW
 dW[k] + cE * dE[k];

match
dW
49   [
52
####
58   *
59    
57    
 + cE
match
cE
 dE[k];

match
dE
62   [
65
generateAST for D = cN * dN[k] + cS * dS[k] + cW * dW[k] + cE * dE[k];
D = cN * dN[k] + cS * dS[k] + cW * dW[k] + cE * dE[k];
D = cN * dN[k] + cS * dS[k] + cW * dW[k] + cE * dE[k];
D = cN * dN[k] + cS * dS[k] + cW * dW[k] + cE * dE[k];
D = cN * #1# + cS * #1# + cW * #1# + cE * #1#;
D = cN * #1# + cS * #1# + cW * #1# + cE * #1#;
D = cN * #1# + cS * #1# + cW * #1# + cE * #1#;
#0# = #0# * #1# + #0# * #1# + #0# * #1# + #0# * #1#;
#0#    =    #0#    *    #1#    +    #0#    *    #1#    +    #0#    *    #1#    +    #0#    *    #1# ; 
#0#    =    #0#    *    #1#    +    #0#    *    #1#    +    #0#    *    #1#    +    #0#    *    #1# ; 
#0#    =    #0#    *    #1#    +    #0#    *    #1#    +    #0#    *    #1#    +    #0#    *    #1# ; 
#0#=#0#*#1#+#0#*#1#+#0#*#1#+#0#*#1#;
0=0*1+0*1+0*1+0*1
Time Taken 4

extractEveryVariable
Inserting - D = cN * dN[k] + cS * dS[k] + cW * dW[k] + cE * dE[k];
 

[]
[]
[]
0
TotalArithmeticInstructions  11
0
0
TotalArithmeticInstructions  11
generateAST for 












This line does not have an =
extractEveryVariable
            // image update (equ 61)

[]
['/', '/']
['//']
0
TotalArithmeticInstructions  11
0
0
TotalArithmeticInstructions  11
Division Found
####
12   /
13   /
11    

/ image update (equ 61)

match
image
20    
Division Found
####
13   /
14    
12   /

 image update (equ 61)

match
image
20    
generateAST for // image update (equ 61)
This line is a comment
This line is a comment
            J[k] = J[k] + 0.25*lambda*D;

[]
['+', '*', '*']
[]
3
TotalArithmeticInstructions  14
0
0
TotalArithmeticInstructions  14
Checking double store operation
13   [
12   J
            J
match
J
Checking double store operation - Done
####
30   *
31   l
29   5
 J[k] + 0.25
match
J[k] + 0.25
lambda*D;

match
lambda
37   *
####
37   *
38   D
36   a

D;

generateAST for J[k] = J[k] + 0.25*lambda*D;
J[k] = J[k] + 0.25*lambda*D;
J[k] = J[k] + 0.25*lambda*D;
J[k] = J[k] + 0.25*lambda*D;
#1# = #1# + 0.25*lambda*D;
#1# = #1# + 0.25*lambda*D;
#1# = #1# + 0.25*lambda*D;
#1# = #1# + 0.25*#0#*#0#;
#1#    =    #1#    +    0.25 * #0# * #0# ; 
#1#    =    #1#    +   #0#* #0# * #0# ; 
#1#    =    #1#    +   #0#* #0# * #0# ; 
#1#=#1#+#0#*#0#*#0#;
1=1+0*0*0
Time Taken 3

extractEveryVariable
Inserting - J[k] = J[k] + 0.25*lambda*D;
        }

Scope Found For, popping, New Length 5
[]
[]
[]
0
TotalArithmeticInstructions  14
0
0
TotalArithmeticInstructions  14
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
    }

Scope Found For, popping, New Length 4
[]
[]
[]
0
TotalArithmeticInstructions  14
0
0
TotalArithmeticInstructions  14
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable


[]
[]
[]
0
TotalArithmeticInstructions  14
0
0
TotalArithmeticInstructions  14
generateAST for 












This line does not have an =
extractEveryVariable
}

Scope Found For, popping, New Length 3
[]
[]
[]
0
TotalArithmeticInstructions  14
0
0
TotalArithmeticInstructions  14
generateAST for }
}
}
}
}
}
}






This line does not have an =
extractEveryVariable
####Annotation Ends####

[]
[]
[]
0
TotalArithmeticInstructions  14
0
0
TotalArithmeticInstructions  14
Annotation End Found
ILP!!!
******
0
k = i * cols + j;
[]
[1, 3, 5, 6]
2
1
1


1
cN = c[k];
[0]
[5]
1
1
1


2
cS = c[i*cols -cols + j];
[]
[5]
1
1
1


3
cW = c[k];
[0]
[5]
1
1
1


4
cE = c[i*cols + i+1];
[]
[5]
1
1
1


5
D = cN * dN[k] + cS * dS[k] + cW * dW[k] + cE * dE[k];
[0, 1, 2, 3, 4]
[6]
4
1
1


6
J[k] = J[k] + 0.25*lambda*D;
[0, 5]
[]
3
1
1


******
Node 0's -
[0, 2, 4]
DFS Stack - pushing 0
[2, -999, -999, -999, -999, -999, -999]
DFS Stack - pushing 1
(0,2)
(1,1)
3
Selected!
DFS Stack - pushing 3
(0,2)
(3,1)
3
Selected!
DFS Stack - pushing 5
(0,2)
(5,4)
6
Selected!
DFS Stack - pushing 6
(0,2)
(6,3)
5
Selected!
[2, 3, -999, 3, -999, 6, 5]
[2, 3, -999, 3, -999, 6, 5]
[2, 3, -999, 3, -999, 6, 5]
[2, 3, -999, 3, -999, 6, 5]
DFS Stack - pushing 2
[-999, -999, 1, -999, -999, -999, -999]
DFS Stack - pushing 5
(2,1)
(5,4)
5
Selected!
[-999, -999, 1, -999, -999, 5, -999]
DFS Stack - pushing 6
(5,5)
(6,3)
8
Selected!
[-999, -999, 1, -999, -999, 5, 8]
DFS Stack - pushing 4
[-999, -999, -999, -999, 1, -999, -999]
DFS Stack - pushing 5
(4,1)
(5,4)
5
Selected!
[-999, -999, -999, -999, 1, 5, -999]
DFS Stack - pushing 6
(5,5)
(6,3)
8
Selected!
[-999, -999, -999, -999, 1, 5, 8]
[6, 8, 8]
######################################################
**********
The values of this entry are
Name                 -  tmp
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  cN
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  c
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  rows
Scope                -  Global
varType              -  0
size                 -  1
value                -  2048
iteratorVar          -  False
**********
The values of this entry are
Name                 -  G2
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  i
Scope                -  For
varType              -  0
size                 -  1
value                -  0
iteratorVar          -  False
**********
The values of this entry are
Name                 -  j
Scope                -  For
varType              -  0
size                 -  1
value                -  0
iteratorVar          -  True
**********
The values of this entry are
Name                 -  dNi
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  cols
Scope                -  Global
varType              -  0
size                 -  1
value                -  2048
iteratorVar          -  False
**********
The values of this entry are
Name                 -  iter
Scope                -  Global
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  iN
Scope                -  Global
varType              -  0
size                 -  2048
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  Jc
Scope                -  Global
varType              -  1
size                 -  1
value                -  None
iteratorVar          -  False
**********
***********
Line 1
LHS -  for j
RHS -  j cols j
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - for (int j = 0; j < cols; j++) { //NTRATIO2048
***
Line 2
LHS -  k
RHS -  i cols j
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 2
Line	     - k = i * cols + j;
***
Line 3
LHS -  cN
RHS -  c k
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - cN = c[k];
***
Line 4
LHS -  cS
RHS -  c i cols cols j
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - cS = c[i*cols -cols + j];
***
Line 5
LHS -  cW
RHS -  c k
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - cW = c[k];
***
Line 6
LHS -  cE
RHS -  c i cols i
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 1
Line	     - cE = c[i*cols + i+1];
***
Line 7
LHS -  D
RHS -  cN dN k cS dS k cW dW k cE dE k
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 4
Line	     - D = cN * dN[k] + cS * dS[k] + cW * dW[k] + cE * dE[k];
***
Line 8
LHS -  J
RHS -  J k lambda D
For Ratio - 1
If  Ratio - 1
Scope     - For
ScopeId   - 4
Cycles    - 3
Line	     - J[k] = J[k] + 0.25*lambda*D;
***
***********


TotalTranscendentals - 0
TotalArithmeticInstructions - 14
NumLoadOperations - 9
NumStoreOperations - 1
NumOffsetAccesses -  0
NumIndirectAccesses -  0
NumDoubleAccesses -  0
CriticalPath -  8
nThreadsCount -  4194304
instCountWithFRatio -  0
ninst       -  24
ilp16k       -  23
ilp32       -  3
ilpRate       -  7
Warnings!!!!
1. Offset seems to be a variable hard to determine! Not marking it as irregular access/access generating many transactions! PLEASE VERIFY!---- cE = c[i*cols + i+1];



######################################################
Transcendental Ratio - L
Arithmetic Intensity - M
Global Memory Operation - H
BranchDivergence - L 0
ControlDensity -  L
Floating Point Mul/Div - H
Total Instruction - L
Num Threads - 4194304
Critical Path - L
g/Research/C_Parser/../Input_C_Parser/Test17.txt']
../Input_C_Parser/Test18.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test18.txt']
../Input_C_Parser/Test19.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test19.txt']
../Input_C_Parser/Test20.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test20.txt']
../Input_C_Parser/Test21.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test21.txt']
../Input_C_Parser/Test22.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test22.txt']
../Input_C_Parser/Test23.txt

['python', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/Parser.py', '-file', '/afs/cs.wisc.edu/u/u/t/uthakker/Documents/GPUProgramming/Research/C_Parser/../Input_C_Parser/Test23.txt']
Transcedentals  -  0 /23 Failing Tests -  
CompInt  -  0 /23 Failing Tests -  
Coallesced  -  0 /23 Failing Tests -  
Lbdiv32  -  0 /23 Failing Tests -  
Lbdiv1024  -  0 /23 Failing Tests -  
fmuldiv  -  0 /23 Failing Tests -  
ilp16384  -  0 /23 Failing Tests -  
numThreads  -  0 /23 Failing Tests -  
criticalPath  -  0 /23 Failing Tests -  
