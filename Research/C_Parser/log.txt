Parser.py:355: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
Parser.py:367: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
Parser.py:370: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
Parser.py:428: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
Parser.py:440: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
Parser.py:443: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
Parser.py:488: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
Parser.py:543: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
../Input_C_Parser/Test7.txt
struct float3 { float x, y, z; };

iterations = 2000;

nelr = 97046;

NVAR = 5;

GAMMA = 1.4;

VAR_MOMENTUM = 1;

VAR_DENSITY = 0;

VAR_DENSITY_ENERGY = 4;

float variables[nelr*NVAR]

float old_variables[nelr*NVAR]

float fluxes[nelr*NVAR];

float ff_variable[NVAR], step_factors[nelr], areas[nelr];





for(int iter=0; iter < iterations; iter++){

    for(int i = 0; i < nelr*NVAR; i++){

        old_variables[i] = variables[i];

    }

    for(int i = 0; i < nelr; i++){

        float density = variables[NVAR*i + VAR_DENSITY];

        float3 momentum;

        momentum.x = variables[NVAR*i + (VAR_MOMENTUM+0)];

        momentum.y = variables[NVAR*i + (VAR_MOMENTUM+1)];

        momentum.z = variables[NVAR*i + (VAR_MOMENTUM+2)];



        float density_energy = variables[NVAR*i + VAR_DENSITY_ENERGY];



        float3 velocity;

        velocity.x = momentum.x / density;

        velocity.y = momentum.y / density;

        velocity.z = momentum.z / density;



        float speed_sqd = velocity.x*velocity.x + velocity.y*velocity.y + velocity.z*velocity.z;

        float pressure = (float(GAMMA)-float(1.0f))*(density_energy - float(0.5f)*density*speed_sqd);

        float speed_of_sound = sqrtf(float(GAMMA)*pressure/density);

        step_factors[i] = float(0.5f) / (sqrtf(areas[i]) * (sqrtf(speed_sqd) + speed_of_sound));

    }



    for(int j = 0; j < RK; j++){

        compute_flux(nelr, elements_surrounding_elements, normals, variables, fluxes);

####Annotation Begins####

Annotation Begin Found
0
0
        for(int i = 0; i < nelr; i++){

2
2
            float factor = step_factors[i]/float(RK+1-j);

5
5
Division Found
####
42   /
43   f
41   ]
 step_factors
float(RK+1-j);

match
float(RK
51   +
 

5
5
            variables[NVAR*i + VAR_DENSITY] = old_variables[NVAR*i + VAR_DENSITY] + factor*fluxes[NVAR*i + VAR_DENSITY];

13
12
####
26   *
27   i
25   R

i + VAR_DENSITY] = old_variables[NVAR*i + VAR_DENSITY] + factor*fluxes[NVAR*i + VAR_DENSITY];

match
i
28    
####
64   *
65   i
63   R
 + VAR_DENSITY] = old_variables[NVAR
match
VAR_DENSITY] = old_variables[NVAR
i + VAR_DENSITY] + factor*fluxes[NVAR*i + VAR_DENSITY];

match
i
66    
####
90   *
91   f
89   r
 + VAR_DENSITY] + factor
match
VAR_DENSITY] + factor
fluxes[NVAR*i + VAR_DENSITY];

match
fluxes
97   [
119
####
102   *
103   i
101   R

i + VAR_DENSITY];

match
i
104    
            variables[NVAR*i + VAR_DENSITY_ENERGY] = old_variables[NVAR*i + VAR_DENSITY_ENERGY] + factor*fluxes[NVAR*i + VAR_DENSITY_ENERGY];

20
19
####
26   *
27   i
25   R

i + VAR_DENSITY_ENERGY] = old_variables[NVAR*i + VAR_DENSITY_ENERGY] + factor*fluxes[NVAR*i + VAR_DENSITY_ENERGY];

match
i
28    
####
71   *
72   i
70   R
 + VAR_DENSITY_ENERGY] = old_variables[NVAR
match
VAR_DENSITY_ENERGY] = old_variables[NVAR
i + VAR_DENSITY_ENERGY] + factor*fluxes[NVAR*i + VAR_DENSITY_ENERGY];

match
i
73    
####
104   *
105   f
103   r
 + VAR_DENSITY_ENERGY] + factor
match
VAR_DENSITY_ENERGY] + factor
fluxes[NVAR*i + VAR_DENSITY_ENERGY];

match
fluxes
111   [
140
####
116   *
117   i
115   R

i + VAR_DENSITY_ENERGY];

match
i
118    
            variables[NVAR*i + (VAR_MOMENTUM+0)] = old_variables[NVAR*i + (VAR_MOMENTUM+0)] + factor*fluxes[NVAR*i + (VAR_MOMENTUM+0)];

30
29
####
26   *
27   i
25   R

i + (VAR_MOMENTUM+0)] = old_variables[NVAR*i + (VAR_MOMENTUM+0)] + factor*fluxes[NVAR*i + (VAR_MOMENTUM+0)];

match
i
28    
####
69   *
70   i
68   R
 + (VAR_MOMENTUM+0)] = old_variables[NVAR
match
VAR_MOMENTUM+0)] = old_variables[NVAR
i + (VAR_MOMENTUM+0)] + factor*fluxes[NVAR*i + (VAR_MOMENTUM+0)];

match
i
71    
####
100   *
101   f
99   r
 + (VAR_MOMENTUM+0)] + factor
match
VAR_MOMENTUM+0)] + factor
fluxes[NVAR*i + (VAR_MOMENTUM+0)];

match
fluxes
107   [
134
####
112   *
113   i
111   R

i + (VAR_MOMENTUM+0)];

match
i
114    
            variables[NVAR*i + (VAR_MOMENTUM+1)] = old_variables[NVAR*i + (VAR_MOMENTUM+1)] + factor*fluxes[NVAR*i + (VAR_MOMENTUM+1)];

40
39
####
26   *
27   i
25   R

i + (VAR_MOMENTUM+1)] = old_variables[NVAR*i + (VAR_MOMENTUM+1)] + factor*fluxes[NVAR*i + (VAR_MOMENTUM+1)];

match
i
28    
####
69   *
70   i
68   R
 + (VAR_MOMENTUM+1)] = old_variables[NVAR
match
VAR_MOMENTUM+1)] = old_variables[NVAR
i + (VAR_MOMENTUM+1)] + factor*fluxes[NVAR*i + (VAR_MOMENTUM+1)];

match
i
71    
####
100   *
101   f
99   r
 + (VAR_MOMENTUM+1)] + factor
match
VAR_MOMENTUM+1)] + factor
fluxes[NVAR*i + (VAR_MOMENTUM+1)];

match
fluxes
107   [
134
####
112   *
113   i
111   R

i + (VAR_MOMENTUM+1)];

match
i
114    
            variables[NVAR*i + (VAR_MOMENTUM+2)] = old_variables[NVAR*i + (VAR_MOMENTUM+2)] + factor*fluxes[NVAR*i + (VAR_MOMENTUM+2)];

50
49
####
26   *
27   i
25   R

i + (VAR_MOMENTUM+2)] = old_variables[NVAR*i + (VAR_MOMENTUM+2)] + factor*fluxes[NVAR*i + (VAR_MOMENTUM+2)];

match
i
28    
####
69   *
70   i
68   R
 + (VAR_MOMENTUM+2)] = old_variables[NVAR
match
VAR_MOMENTUM+2)] = old_variables[NVAR
i + (VAR_MOMENTUM+2)] + factor*fluxes[NVAR*i + (VAR_MOMENTUM+2)];

match
i
71    
####
100   *
101   f
99   r
 + (VAR_MOMENTUM+2)] + factor
match
VAR_MOMENTUM+2)] + factor
fluxes[NVAR*i + (VAR_MOMENTUM+2)];

match
fluxes
107   [
134
####
112   *
113   i
111   R

i + (VAR_MOMENTUM+2)];

match
i
114    
        }

49
49
####Annotation Ends####

49
49
Annotation End Found
######################################################
**********
The values of this entry are
Name -      ff_variable
Scope -     struct
varType -   1
size -      1
value-      None
**********
The values of this entry are
Name -      factor
Scope -     For
varType -   1
size -      1
value-      1
**********
The values of this entry are
Name -      old_variables
Scope -     struct
varType -   1
size -      1
value-      None
**********
The values of this entry are
Name -      density
Scope -     For
varType -   1
size -      1
value-      None
**********
The values of this entry are
Name -      i
Scope -     For
varType -   0
size -      1
value-      0
**********
The values of this entry are
Name -      speed_of_sound
Scope -     For
varType -   1
size -      1
value-      None
**********
The values of this entry are
Name -      variables
Scope -     struct
varType -   1
size -      1
value-      None
**********
The values of this entry are
Name -      j
Scope -     For
varType -   0
size -      1
value-      0
**********
The values of this entry are
Name -      iter
Scope -     For
varType -   0
size -      1
value-      0
**********
The values of this entry are
Name -      density_energy
Scope -     For
varType -   1
size -      1
value-      None
**********
The values of this entry are
Name -      speed_sqd
Scope -     For
varType -   1
size -      1
value-      None
**********
The values of this entry are
Name -      x
Scope -     struct
varType -   1
size -      1
value-      None
**********
The values of this entry are
Name -      pressure
Scope -     For
varType -   1
size -      1
value-      1
**********
The values of this entry are
Name -      fluxes
Scope -     struct
varType -   1
size -      1
value-      None
**********


TotalTranscendentals - 0
TotalArithmeticInstructions - 49
NumLoadOperations - 11
NumStoreOperations - 5
NumOffsetAccesses -  24
NumIndirectAccesses -  0


######################################################
Transcendental Ratio - L
Arithmetic Intensity - M
Global Memory Operation - L
BranchDivergence - L 0
ControlDensity -  L
Floating Point Mul/Div - H
Total Instruction - L
