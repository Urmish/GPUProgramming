Parser.py:355: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
Parser.py:367: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
Parser.py:370: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
Parser.py:428: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
Parser.py:440: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
Parser.py:443: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
Parser.py:488: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
Parser.py:543: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
../Input_C_Parser/Test3.txt
count = 10000;

maxheight = 2;

threadsPerBlock = 508;



long currKnode[10000], offset[10000];



typedef struct knode {

        int location;

        int indices [509];

        int  keys [509];

        bool is_leaf;

        int num_keys;

} knode;



####Annotation Begins####

Annotation Begin Found
0
0
for(bid = 0; bid < count; bid++){

2
2
    for(i = 0; i < maxheight; i++){

4
4
        for(thid = 0; thid < threadsPerBlock; thid++){

6
6
             if((knodes[currKnode[bid]].keys[thid]) <= keys[bid] && (knodes[currKnode[bid]].keys[thid+1] > keys[bid])){	//taken for less than 1% of the iterations of threadsPerBlock

11
10
Division Found
####
120   /
121   /
119   	
 keys[bid] && (knodes[currKnode[bid]].keys[thid+1] > keys[bid])){	
match
knodes[currKnode[bid]].keys[thid+1] > keys[bid])){
/taken for less than 1% of the iterations of threadsPerBlock

match
taken
127    
Division Found
####
121   /
122   t
120   /

taken for less than 1% of the iterations of threadsPerBlock

match
taken
127    
Found Control Density
                  if(knodes[offset[bid]].indices[thid] < knodes_elem){	//taken once per iteration of maxheight

13
13
Division Found
####
71   /
72   /
70   	
                  if(knodes[offset[bid]].indices[thid] < knodes_elem){	
match
knodes[offset[bid]].indices[thid] < knodes_elem){
/taken once per iteration of maxheight

match
taken
78    
Division Found
####
72   /
73   t
71   /

taken once per iteration of maxheight

match
taken
78    
Found Control Density
                      offset[bid] = knodes[offset[bid]].indices[thid];

13
13
                  }

13
13
             }

13
13
        }

13
13
        currKnode[bid] = offset[bid];

13
13
    }

13
13
 

13
13
    for(thid = 0; thid < threadsPerBlock; thid++){

15
15
        if(knodes[currKnode[bid]].keys[thid] == keys[bid]){			//taken once per iteration of count

18
18
Division Found
####
62   /
63   /
61   	
= keys[bid]){			
match
keys[bid]){
/taken once per iteration of count

match
taken
69    
Division Found
####
63   /
64   t
62   /

taken once per iteration of count

match
taken
69    
Found Control Density
            ans[bid].value = records[knodes[currKnode[bid]].indices[thid]].value;

18
18
        }

18
18
    }

18
18
}

18
18
####Annotation Ends####

18
18
Annotation End Found
######################################################
**********
The values of this entry are
Name -      indices
Scope -     struct
varType -   0
size -      1
value-      None
**********
The values of this entry are
Name -      
Scope -     struct
varType -   0
size -      0
value-      None
**********
The values of this entry are
Name -      location
Scope -     struct
varType -   0
size -      1
value-      None
**********
The values of this entry are
Name -      num_keys
Scope -     struct
varType -   0
size -      1
value-      None
**********


TotalTranscendentals - 0
TotalArithmeticInstructions - 18
NumLoadOperations - 21
NumStoreOperations - 5
NumOffsetAccesses -  1
NumIndirectAccesses -  7


######################################################
Transcendental Ratio - L
Arithmetic Intensity - L
Global Memory Operation - L
BranchDivergence - L 0
ControlDensity -  H
Floating Point Mul/Div - L
Total Instruction - L
