Parser.py:322: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
Parser.py:330: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
Parser.py:339: SyntaxWarning: name 'WarningsCounter' is assigned to before global declaration
  global WarningsCounter
Parser.py:347: SyntaxWarning: name 'WarningsCounter' is used prior to global declaration
  global WarningsCounter
Parser.py:435: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
Parser.py:447: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
Parser.py:450: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
Parser.py:508: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
Parser.py:520: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
Parser.py:523: SyntaxWarning: name 'FoundFLPMulDiv' is assigned to before global declaration
  global FoundFLPMulDiv
Parser.py:605: SyntaxWarning: name 'WarpDivergenceRatio' is used prior to global declaration
  global WarpDivergenceRatio
Parser.py:660: SyntaxWarning: name 'StartAnalyzing' is assigned to before global declaration
  global StartAnalyzing
**************************************************************************
****			C Code Parser   			      ****
**************************************************************************
****		   Please Use Python 2.7 or later		      ****
**************************************************************************
../Input_C_Parser/Test4.txt
count = 6000;

maxheight = 2;

threadsPerBlock = 508;



long currKnode[10000], offset[10000];



typedef struct knode {

        int location;

        int indices [509];

        int  keys [509];

        bool is_leaf;

        int num_keys;

} knode;



####Annotation Begins####

Annotation Begin Found
TotalArithmeticInstructions  0
TotalArithmeticInstructions  0
for(bid = 0; bid < count; bid++){

TotalArithmeticInstructions  2
TotalArithmeticInstructions  2
    access = currKnode[bid];

TotalArithmeticInstructions  2
TotalArithmeticInstructions  2
Checking double store operation
Checking double store operation - Done
    access3 = lastKnode[bid];

TotalArithmeticInstructions  2
TotalArithmeticInstructions  2
Checking double store operation
Checking double store operation - Done
    for(i = 0; i < maxheight; i++){ //FRATIO2

TotalArithmeticInstructions  5
TotalArithmeticInstructions  5
Division Found
####
36   /
37   /
35    
 0; i < maxheight; i++){
match
i < maxheight; i++){
/FRATIO2

Division Found
####
37   /
38   F
36   /

FRATIO2

FRATIO2
        for(thid = 0; thid < threadsPerBlock; thid++){

TotalArithmeticInstructions  9
TotalArithmeticInstructions  9
            if((knodes[access].keys[thid] <= start[bid]) && (knodes[access].keys[thid+1] > start[bid])){	//taken for less than 1% of the iterations of threadsPerBlock //BRATIO0.01

TotalArithmeticInstructions  19
TotalArithmeticInstructions  19
offset pattern is
thid+1
and extracted value is
['1']
Offset is
1
Offset is a int with number <=2
Checking double store operation
22   [
21   s
            if((knodes
match
if((knodes
Checking double store operation - Done
Division Found
####
105   /
106   /
104   	
 start[bid]) && (knodes[access].keys[thid+1] > start[bid])){	
match
knodes[access].keys[thid+1] > start[bid])){
/taken for less than 1% of the iterations of threadsPerBlock //BRATIO0.01

match
taken
112    
Division Found
####
106   /
107   t
105   /

taken for less than 1% of the iterations of threadsPerBlock //BRATIO0.01

match
taken
112    
Division Found
####
167   /
168   /
166    
 for less than 1% of the iterations of threadsPerBlock
match
less than 1% of the iterations of threadsPerBlock
/BRATIO0.01

Division Found
####
168   /
169   B
167   /

BRATIO0.01

Found Control Density
['0.01']
Bratio found
temp bratio is  0.64
Divergence ratio is  0.64
                if(knodes[access].indices[thid] < knodes_elem){		//only taken once for every iteration of maxheight  //BRATIO0.5 //BRATIO0.01

TotalArithmeticInstructions  19.08
TotalArithmeticInstructions  19.08
Checking double store operation
Checking double store operation - Done
Division Found
####
65   /
66   /
64   	
                if(knodes[access].indices[thid] < knodes_elem){		
match
knodes[access].indices[thid] < knodes_elem){
/only taken once for every iteration of maxheight  //BRATIO0.5 //BRATIO0.01

match
only
71    
Division Found
####
66   /
67   o
65   /

only taken once for every iteration of maxheight  //BRATIO0.5 //BRATIO0.01

match
only
71    
Division Found
####
117   /
118   /
116    
 taken once for every iteration of maxheight
match
once for every iteration of maxheight
/BRATIO0.5 //BRATIO0.01

match
BRATIO0.5
128    
Division Found
####
118   /
119   B
117   /

BRATIO0.5 //BRATIO0.01

match
BRATIO0.5
128    
Division Found
####
129   /
130   /
128    

/BRATIO0.01

Division Found
####
130   /
131   B
129   /

BRATIO0.01

Found Control Density
['0.5']
['0.01']
Bratio found
temp bratio is  0.32
Divergence ratio using old  0.64
                    offset[bid] = knodes[access].indices[thid];

TotalArithmeticInstructions  19.08
TotalArithmeticInstructions  19.08
Checking double store operation
26   [
25   t
                    offset
match
offset
Checking double store operation - Done
                }

TotalArithmeticInstructions  19.08
TotalArithmeticInstructions  19.08
            }

TotalArithmeticInstructions  19.08
TotalArithmeticInstructions  19.08
            if((knodes[access3].keys[thid] <= end[bid]) && (knodes[access3].keys[thid+1] > end[bid])){	//taken for less than 1% of the iterations of threadsPerBlock #BRATIO0.01

TotalArithmeticInstructions  19.12
TotalArithmeticInstructions  19.12
offset pattern is
thid+1
and extracted value is
['1']
Offset is
1
Offset is a int with number <=2
Checking double store operation
22   [
21   s
            if((knodes
match
if((knodes
Checking double store operation - Done
Division Found
####
103   /
104   /
102   	
 end[bid]) && (knodes[access3].keys[thid+1] > end[bid])){	
match
knodes[access3].keys[thid+1] > end[bid])){
/taken for less than 1% of the iterations of threadsPerBlock #BRATIO0.01

match
taken
110    
Division Found
####
104   /
105   t
103   /

taken for less than 1% of the iterations of threadsPerBlock #BRATIO0.01

match
taken
110    
Found Control Density
['0.01']
Bratio found
temp bratio is  0.64
Divergence ratio using old  0.64
                if(knodes[access3].indices[thid] < knodes_elem){		//only taken once for every iteration of maxheight //BRATIO0.01 BRATIO0.5

TotalArithmeticInstructions  19.18
TotalArithmeticInstructions  19.18
Checking double store operation
Checking double store operation - Done
Division Found
####
66   /
67   /
65   	
                if(knodes[access3].indices[thid] < knodes_elem){		
match
knodes[access3].indices[thid] < knodes_elem){
/only taken once for every iteration of maxheight //BRATIO0.01 BRATIO0.5

match
only
72    
Division Found
####
67   /
68   o
66   /

only taken once for every iteration of maxheight //BRATIO0.01 BRATIO0.5

match
only
72    
Division Found
####
117   /
118   /
116    
 taken once for every iteration of maxheight
match
once for every iteration of maxheight
/BRATIO0.01 BRATIO0.5

match
BRATIO0.01
129    
Division Found
####
118   /
119   B
117   /

BRATIO0.01 BRATIO0.5

match
BRATIO0.01
129    
Found Control Density
['0.01']
['0.5']
Bratio found
temp bratio is  0.32
Divergence ratio using old  0.64
                    offset_2[bid] = knodes[access3].indices[thid];

TotalArithmeticInstructions  19.18
TotalArithmeticInstructions  19.18
Checking double store operation
28   [
27   2
                    offset_2
match
offset_2
Checking double store operation - Done
                }

TotalArithmeticInstructions  19.18
TotalArithmeticInstructions  19.18
            }

TotalArithmeticInstructions  19.18
TotalArithmeticInstructions  19.18
        }

TotalArithmeticInstructions  19.18
TotalArithmeticInstructions  19.18
        currKnode[bid] = offset[bid];

TotalArithmeticInstructions  19.18
TotalArithmeticInstructions  19.18
Checking double store operation
17   [
16   e
        currKnode
match
currKnode
Checking double store operation - Done
        lastKnode[bid] = offset_2[bid];

TotalArithmeticInstructions  19.18
TotalArithmeticInstructions  19.18
Checking double store operation
17   [
16   e
        lastKnode
match
lastKnode
Checking double store operation - Done
    }

TotalArithmeticInstructions  19.18
TotalArithmeticInstructions  19.18
    access2 = currKnode[bid];

TotalArithmeticInstructions  19.18
TotalArithmeticInstructions  19.18
Checking double store operation
Checking double store operation - Done
    for(thid = 0; thid < threadsPerBlock; thid++){

TotalArithmeticInstructions  19.2
TotalArithmeticInstructions  19.2
        if(knodes[access2].keys[thid] == start[bid]){				//only taken once for each iteration of count //BRATIO0.0001

TotalArithmeticInstructions  19.23
TotalArithmeticInstructions  19.23
Checking double store operation
17   [
16   s
        if(knodes
match
if(knodes
Checking double store operation - Done
Division Found
####
57   /
58   /
56   	
= start[bid]){				
match
start[bid]){
/only taken once for each iteration of count //BRATIO0.0001

match
only
63    
Division Found
####
58   /
59   o
57   /

only taken once for each iteration of count //BRATIO0.0001

match
only
63    
Division Found
####
103   /
104   /
102    
 taken once for each iteration of count
match
once for each iteration of count
/BRATIO0.0001

Division Found
####
104   /
105   B
103   /

BRATIO0.0001

Found Control Density
['0.0001']
Bratio found
temp bratio is  0.0064
Divergence ratio using old  0.64
            recstart[bid] = knodes[access2].indices[thid];

TotalArithmeticInstructions  19.23
TotalArithmeticInstructions  19.23
Checking double store operation
20   [
19   t
            recstart
match
recstart
Checking double store operation - Done
        }

TotalArithmeticInstructions  19.23
TotalArithmeticInstructions  19.23
    }

TotalArithmeticInstructions  19.23
TotalArithmeticInstructions  19.23
    access4 = lastKnode[bid];

TotalArithmeticInstructions  19.23
TotalArithmeticInstructions  19.23
Checking double store operation
Checking double store operation - Done
    for(thid = 0; thid < threadsPerBlock; thid++){

TotalArithmeticInstructions  19.2304
TotalArithmeticInstructions  19.2304
        if(knodes[access4].keys[thid] == end[bid]){				//only taken once for each iteration of count //BRATIO0.0001

TotalArithmeticInstructions  19.231
TotalArithmeticInstructions  19.231
Checking double store operation
17   [
16   s
        if(knodes
match
if(knodes
Checking double store operation - Done
Division Found
####
55   /
56   /
54   	
= end[bid]){				
match
end[bid]){
/only taken once for each iteration of count //BRATIO0.0001

match
only
61    
Division Found
####
56   /
57   o
55   /

only taken once for each iteration of count //BRATIO0.0001

match
only
61    
Division Found
####
101   /
102   /
100    
 taken once for each iteration of count
match
once for each iteration of count
/BRATIO0.0001

Division Found
####
102   /
103   B
101   /

BRATIO0.0001

Found Control Density
['0.0001']
Bratio found
temp bratio is  0.0064
Divergence ratio using old  0.64
            reclength[bid] = knodes[access4].indices[thid] - recstart[bid]+1;

TotalArithmeticInstructions  19.2314
TotalArithmeticInstructions  19.2314
Checking double store operation
21   [
20   h
            reclength
match
reclength
Checking double store operation - Done
        }

TotalArithmeticInstructions  19.2314
TotalArithmeticInstructions  19.2314
    }

TotalArithmeticInstructions  19.2314
TotalArithmeticInstructions  19.2314
}

TotalArithmeticInstructions  19.2314
TotalArithmeticInstructions  19.2314
####Annotation Ends####

TotalArithmeticInstructions  19.2314
TotalArithmeticInstructions  19.2314
Annotation End Found
######################################################
**********
The values of this entry are
Name                 -  indices
Scope                -  struct
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  
Scope                -  struct
varType              -  0
size                 -  0
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  location
Scope                -  struct
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********
The values of this entry are
Name                 -  num_keys
Scope                -  struct
varType              -  0
size                 -  1
value                -  None
iteratorVar          -  False
**********


TotalTranscendentals - 0
TotalArithmeticInstructions - 19.2314
NumLoadOperations - 12.2216
NumStoreOperations - 2.0606
NumOffsetAccesses -  0
NumIndirectAccesses -  0
NumDoubleAccesses -  0


######################################################
Transcendental Ratio - L
Arithmetic Intensity - M
Global Memory Operation - H
BranchDivergence - L 0.64
ControlDensity -  H
Floating Point Mul/Div - L
Total Instruction - L
